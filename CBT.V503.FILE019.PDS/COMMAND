COMMAND  TITLE 'PROGRAM TO ISSUE O/S COMMANDS FROM A DATASET'
         PUNCH ' SETCODE AC(1) '              REQUIRED DO NOT REMOVE
         PUNCH ' MODE AMODE(24),RMODE(24)'    REQUIRED DO NOT REMOVE
         PUNCH ' ENTRY COMMAND  '             REQUIRED DO NOT REMOVE
***********************************************************************
*                                                                     *
*                  C O M M A N D    U T I L I T Y                     *
*                                                                     *
*                           VERSION 2.3                               *
*                                                                     *
*                                                                     *
*        THIS PROGRAM WILL USE THE SVC 34 INTERFACE TO ISSUE O/S OR   *
*        JES2 COMMANDS.                                               *
*                                                                     *
*                         SPECIAL NOTE                                *
*                                                                     *
*        THIS UTILITY HAS BEEN TESTED ON Z/OS 1.8 RUNNING RACF        *
*        AND JES2.  IT SHOULD FUNCTION ON MOST OS/390 AND Z/OS        *
*        SYSTEMS - BOTH PAST AND FUTURE.  THE SECURITY INTERFACE      *
*        SHOULD BE COMPATIBLE WITH OTHER SECURITY PRODUCTS.           *
*                                                                     *
*                                                                     *
*        CALLERS OF THIS PROGRAM REQUIRE SPECIAL ACCESS               *
*        AUTHORITY AS FOLLOWS:                                        *
*                                                                     *
*           THE USER MUST BE AUTHORIZED THROUGH A SPECIAL             *
*           SECURITY CALL TO SAF FOR RESOURCE CLASS "FACILITY"        *
*           AND ENTITY NAME "COMMAND".                                *
*                                                                     *
*                                                                     *
*        WHAT MAKES THIS PROGRAM DIFFERENT FROM MOST PROGRAMS         *
*        WHAT ISSUE COMMANDS ARE TWELVE SPECIAL COMMANDS:             *
*                                                                     *
*        1)  DELAY=NNN OR DELAY NNN - THIS COMMAND MAKES THE          *
*            PROGRAM DELAY NNN SECONDS PRIOR TO ISSUING THE           *
*            NEXT COMMAND IN THE LIST.                                *
*                                                                     *
*        2)  REPLY JOBNAME MESSAGEID REPLYTEXT - THIS GIVES           *
*            THE ABILITY TO REPLY TO OUTSTANDING REPLIES FOR          *
*            SPECIFIED JOBS WITHOUT HAVING TO KNOW THE REPLY          *
*            ID.                                                      *
*                                                                     *
*        3)  STARTED JOBNAME - THIS GIVES THE ABILITY TO WAIT         *
*            FOR A SPECIFIC BATCH JOB OR STARTED TASK TO START        *
*            OR TO INSURE THAT IT IS EXECUTING AT THE PRESENT         *
*            TIME.                                                    *
*                                                                     *
*        4)  STOPPED JOBNAME - THIS GIVES THE ABILITY TO WAIT         *
*            FOR A SPECIFIC BATCH JOB OR STARTED TASK TO END          *
*            OR TO INSURE THAT IT IS NOT EXECUTING AT THE             *
*            PRESENT TIME.                                            *
*                                                                     *
*        5)  ONLINE V=VOLSER / A=ADDR GIVES THE ABILITY TO            *
*            WAIT FOR A SPECIFIC VOLUME OR UNIT ADDRESS TO            *
*            COME ONLINE OR TO INSURE THAT IT IS NOT OFFLINE          *
*            AT THE PRESENT TIME                                      *
*                                                                     *
*        6)  OFFLINE V=VOLSER / A=ADDR GIVES THE ABILITY TO           *
*            WAIT FOR A SPECIFIC VOLUME OR UNIT ADDRESS TO            *
*            GO OFFLINE OR TO INSURE THAT IT IS NOT ONLINE AT         *
*            THE PRESENT TIME                                         *
*                                                                     *
*        7)  IFSTARTED JOBNAME - THIS GIVES THE ABILITY TO            *
*            EXECUTE COMMANDS WHICH FOLLOW THIS COMMAND               *
*            ONLY IF THE SPECIFIED JOBNAME IS ACTIVE.  THE            *
*            ENDIF COMMAND ENDS THE CONDITIONAL LIST OF               *
*            COMMANDS                                                 *
*                                                                     *
*        8)  IFSTOPPED JOBNAME - THIS GIVES THE ABILITY TO            *
*            EXECUTE COMMANDS WHICH FOLLOW THIS COMMAND               *
*            ONLY IF THE SPECIFIED JOBNAME IS NOT ACTIVE.             *
*            THE ENDIF COMMAND ENDS THE CONDITIONAL LIST OF           *
*            COMMANDS                                                 *
*                                                                     *
*        9)  IFONLINE V= / A= - THIS GIVES THE ABILITY TO             *
*            EXECUTE COMMANDS WHICH FOLLOW THIS COMMAND ONLY          *
*            IF THE SPECIFIED DISK VOLUME OR UNIT ADDRESS IS          *
*            ONLINE.  THE ENDIF COMMAND ENDS THE CONDITIONAL          *
*            LIST OF COMMANDS                                         *
*                                                                     *
*        10) IFOFFLINE V= / A= - THIS GIVES THE ABILITY TO            *
*            EXECUTE COMMANDS WHICH FOLLOW THIS COMMAND ONLY          *
*            IF THE SPECIFIED DISK VOLUME OR UNIT ADDRESS IS          *
*            OFFLINE. THE ENDIF COMMAND ENDS THE CONDITIONAL          *
*            LIST OF COMMANDS                                         *
*                                                                     *
*        11) ENDIF - THIS ENDS THE CONDITIONAL LIST OF COMMANDS       *
*            THAT WERE STARTED BY THE IFSTARTED, IFSTOPPED,           *
*            IFONLINE, OR IFOFFLINE COMMAND.  ONLY ONE LIST OF        *
*            CONDITIONAL COMMANDS CAN BE ACTIVE AT A TIME.            *
*                                                                     *
*        12) UNALLOC V=VOLSER / A=ADDR GIVES THE ABILITY TO           *
*            WAIT FOR A SPECIFIC VOLUME OR UNIT ADDRESS TO            *
*            BECOME ONLINE AND UNALLOCATED OR TO INSURE THAT          *
*            IS IS NOT OFFLINE OR ALLOCATED AT THE PRESENT TIME.      *
*                                                                     *
*        THE COMMANDS CAN COME FROM TWO INPUT SOURCES.  THE FIRST     *
*        IS THE PARM VALUE ON THE EXECUTE CARD FOR THE STEP.  THE     *
*        OTHER IS FROM THE INPUT DATA SET IEFRDER.  IF THE SOURCE     *
*        IS THE PARM FIELD, MULTIPLE COMMANDS CAN BE ENTERED BY       *
*        SEPARATING EACH COMMAND WITH A ";".  IF THE SOURCE IS THE    *
*        INPUT DATA SET, EACH RECORD WILL CONTAIN A SINGLE COMMAND    *
*        STARTING IN COLUMN 1 THROUGH COLUMN 72 OF EACH RECORD.       *
*        IF BOTH THE PARM AND INPUT DATASET ARE USED, THE COMMANDS    *
*        IN THE PARM ARE EXECUTED FIRST.                              *
*                                                                     *
*        ONLY THE FIRST 72 CHARACTERS OF EACH COMMAND WILL BE USED    *
*        WHEN ACTUALLY ISSUING THE COMMAND.                           *
*                                                                     *
*        COMMENTS CAN BE ENTERED WITH THE COMMANDS BY STARTING        *
*        THE COMMAND WITH A '*'.  THIS CAUSES THE COMMAND TO BE       *
*        BYPASSED.                                                    *
*                                                                     *
*        IF THE COMMAND IS "DELAY=NNN", THE PROGRAM WILL ENTER A      *
*        WAIT FOR THE NUMBER OF SECONDS SPECIFIED BY "NNN".  IF       *
*        MORE THAN A THREE DIGIT DELAY TIME IS SPECIFIED, ONLY        *
*        THE FIRST THREE DIGITS WILL BE USED.                         *
*                                                                     *
*        IF THE COMMAND IS "REPLY JOBNAME MESSAGEID REPLYTEXT"        *
*        THE PROGRAM WILL SEARCH FOR OUTSTANDING REPLIES FOR          *
*        THE SPECIFIED JOBNAME AND CONTAINING THE OPTIONAL            *
*        MESSAGE TEXT.                                                *
*                                                                     *
*        THE FULL JOBNAME OR AN '*' MUST BE SPECIFIED.  IF THE        *
*        JOBNAME IS SPECIFIED AS AN '*', THEN A MESSAGEID MUST        *
*        BE SPECIFIED.  IT CANNOT ALSO BE AN '*'.  IF THE             *
*        JOBNAME IS AN '*' THEN THE FIRST JOB WITH THE                *
*        SPECIFIED MESSAGEID WILL BE PROCESSED.  THE USE OF           *
*        THE MESSAGEID FIELD IS OPTIONAL UNLESS A JOBNAME OF          *
*        '*' IS SPECIFIED.  IF MULTIPLE REPLIES COULD POSSIBLY        *
*        BE OUTSTANDING FOR THE JOB, THIS PARAMETER CAN BE            *
*        USED TO SPECIFY A MESSAGEID OR CHARACER STRING               *
*        CONTAINED IN THE MESSAGE SO THAT THE CORRECT RESPONSE        *
*        TO THE CORRECT MESSAGE CAN BE MADE.  IF NO MESSAGEID         *
*        IS TO BE SPECIFIED, AN '*' MUST BE SPECIFIED.  SINGLE        *
*        QUOTES MAY BE USED IF THE STRING CONTAINS IMBEDDED           *
*        BLANKS.                                                      *
*                                                                     *
*        THE REPLY TEXT MUST BE SPECIFIED.  SINGLE QUOTES MAY         *
*        BE USED IF THE STRING CONTAINS IMBEDDED BLANKS.              *
*                                                                     *
*        IF THE COMMAND IS "STOPPED JOBNAME" THE PROGRAM WILL         *
*        SEARCH ALL ACTIVE JOBS AND TASKS TO INSURE THAT THE          *
*        SPECIFIED JOB OR TASK NAME IS NOT EXECUTING.  IF IT          *
*        IS EXECUTING, A NON-ROLLABLE MESSAGE WILL BE SEND TO         *
*        THE CONSOLE STATING THAT THE PROGRAM IS WAITING FOR          *
*        THAT JOB TO STOP.  WHEN THE JOB OR TASK STOPS, THE           *
*        MESSAGE WILL BE DELETED AND PROCESSING WILL CONTINUE.        *
*                                                                     *
*        IF THE COMMAND IS "STARTED JOBNAME" THE PROGRAM WILL         *
*        SEARCH ALL ACTIVE JOBS AND TASKS TO INSURE THAT THE          *
*        SPECIFIED JOB OR TASK NAME IS EXECUTING.  IF IT IS NOT       *
*        EXECUTING, A NON-ROLLABLE MESSAGE WILL BE SEND TO THE        *
*        CONSOLE STATING THAT THE PROGRAM IS WAITING FOR THAT         *
*        JOB TO START.  WHEN THE JOB OR TASK STARTS, THE              *
*        MESSAGE WILL BE DELETED AND PROCESSING WILL CONTINUE.        *
*                                                                     *
*        IF THE COMMAND IS "ONLINE V=VOLSER" OR "ONLINE A=UNIT"       *
*        THE PROGRAM WILL SEARCH THE SYSTEM FOR ALL DISK VOLUMES      *
*        TO SEE IF THE REQUESTED VOLUME OR UNIT IS ONLINE.  IF        *
*        IT IS NOT ONLINE, A NON-ROLLABLE MESSAGE WILL BE SENT        *
*        TO THE CONSOLE STATING THAT THE PROGRAM IS WAITING FOR       *
*        THAT VOLUME OR DEVICE TO COME ONLINE.  WHEN THE DEVICE       *
*        COMES ONLINE, THE MESSAGE WILL BE DELETED AND PROCESSING     *
*        WILL CONTINUE.                                               *
*                                                                     *
*        IF THE COMMAND IS "OFFLINE V=VOLSER" OR "OFFLINE A=UNIT"     *
*        THE PROGRAM WILL SEARCH THE SYSTEM FOR ALL DISK VOLUMES      *
*        TO SEE IF THE REQUESTED VOLUME OR UNIT IS OFFLINE. IF        *
*        IT IS ONLINE, A NON-ROLLABLE MESSAGE WILL BE SENT TO THE     *
*        CONSOLE STATING THAT THE PROGRAM IS WAITING FOR THAT         *
*        VOLUME OR DEVICE TO GO OFFLINE.  WHEN THE VOLUME OR          *
*        DEVICE GOES OFFLINE, THE MESSAGE WILL BE DELETED AND         *
*        PROCESSING WILL CONTINUE.                                    *
*                                                                     *
*        IF THE COMMAND IS "IFSTOPPED JOBNAME" THE PROGRAM WILL       *
*        SEARCH ALL ACTIVE JOBS AND TASKS TO SEE IF THE SPECIFIED     *
*        JOB OR TASK NAME IS EXECUTING.  IF IT IS NOT EXECUTING       *
*        IT WILL EXECUTE THE LIST OF CONDITIONAL COMMANDS THAT        *
*        FOLLOWS THE "IFSTOPPED" COMMAND.  THE LIST OF CONDITIONAL    *
*        COMMANDS IS TERMINATED BY AN "ENDIF" COMMAND.  IF THE        *
*        NAMED JOB OR TASK IS EXECUTING, THEN THE LIST OF             *
*        CONDITIONAL COMMANDS WILL BE BYPASSED UP TO THE "ENDIF"      *
*        COMMAND.                                                     *
*                                                                     *
*        IF THE COMMAND IS "IFSTARTED JOBNAME" THE PROGRAM WILL       *
*        SEARCH ALL ACTIVE JOBS AND TASKS TO SEE IF THE SPECIFIED     *
*        JOB OR TASK NAME IS EXECUTING.  IF IT IS EXECUTING           *
*        IT WILL EXECUTE THE LIST OF CONDITIONAL COMMANDS THAT        *
*        FOLLOWS THE "IFSTARTED" COMMAND.  THE LIST OF CONDITIONAL    *
*        COMMANDS IS TERMINATED BY AN "ENDIF" COMMAND.  IF THE        *
*        NAMED JOB OR TASK IS NOT EXECUTING, THEN THE LIST OF         *
*        CONDITIONAL COMMANDS WILL BE BYPASSED UP TO THE "ENDIF"      *
*        COMMAND.                                                     *
*                                                                     *
*        IF THE COMMAND IS "IFONLINE V=VOLSER" OR "IFONLINE           *
*        A=UNIT" THE PROGRAM WILL SEARCH ALL DISK DEVICES TO SEE      *
*        IF THE SPECIFIED VOLUME OR UNIT ADDRESS IS ONLINE.           *
*        IF IT IS ONLINE, THEN IT WILL EXECUTE THE LIST OF            *
*        CONDITIONAL COMMANDS THAT FOLLOWS THE "IFONLINE"             *
*        COMMAND.  THE LIST OF CONDITIONAL COMMANDS IS TEMINATED      *
*        BY AN "ENDIF" COMMAND.  IF THE SPECIFIED VOLUME OR           *
*        UNIT ADDRESS IS NOT ONLINE OR DEFINED THEN THE LIST OF       *
*        CONDITIONAL COMMANDS WILL BE BYPASSED UP TO THE "ENDIF"      *
*        COMMAND.                                                     *
*                                                                     *
*        IF THE COMMAND IS "IFOFFLINE V=VOLSER" OR "IFOFFLINE         *
*        A=UNIT" THE PROGRAM WILL SEARCH ALL DISK DEVICES TO SEE      *
*        IF THE SPECIFIED VOLUME OR UNIT ADDRESS IS ONLINE.           *
*        IF IT IS NOT ONLINE OR DEFINED THEN IT WILL EXECUTE          *
*        THE LIST OF CONDITIONAL COMMANDS THAT FOLLOWS THE            *
*        "IFOFFLINE" COMMAND.  THE LIST OF CONDITIONAL COMMANDS       *
*        IS TERMINATED BY AN "ENDIF" COMMAND.  IF THE SPECIFIED       *
*        VOLUME OR UNIT ADDRESS IS ONLINE THEN THE LIST OF            *
*        CONDITIONAL COMMANDS WILL BE BYPASSED UP TO THE "ENDIF"      *
*        COMMAND.                                                     *
*                                                                     *
*                                                                     *
*        IF THE COMMAND IS "UNALLOC V=VOLSER" OR "UNALLOC A=UNIT"     *
*        THE PROGRAM WILL SEARCH THE SYSTEM FOR ALL DISK VOLUMES      *
*        TO SEE IF THE REQUESTED VOLUME OR UNIT IS ONLINE AND IS      *
*        NOT IN USE.  IF IT IS NOT ONLINE OR CURRENTLY HAS USERS      *
*        ALLOCATED TO IT A NON-ROLLABLE MESSAGE WILL BE SENT          *
*        TO THE CONSOLE STATING THAT THE PROGRAM IS WAITING FOR       *
*        THAT VOLUME OR DEVICE TO BECOME ONLINE AND UNALLOCATED.      *
*        WHEN THE DEVICE GAINS THAT STATUS, THE MESSAGE WILL BE       *
*        DELETED AND PROCESSING WILL CONTINUE.                        *
*                                                                     *
*                                                                     *
*                                                                     *
*        BECAUSE THIS PROGRAM ISSUES THE MODESET MACRO AND USES       *
*        CROSS MEMORY SERVICES, IT MUST BE APF AUTHORIZED TO DO       *
*        SO.                                                          *
*                                                                     *
*                                                                     *
*        WRITTEN BY:   JOHN V. HOOPER                                 *
*                      SALISBURY, N.C.                                *
*                                                                     *
*        SUPPORT   :   SBGOLOB@CBTTAPE.ORG                            *
*                                                                     *
*        MODIFIED BY:                                                 *
*                   BRIAN WESTERMAN                                   *
*                   SYZYGY INCORPORATED                               *
*                   1381 KILDAIRE FARM ROAD                           *
*                   SUITE 326                                         *
*                   CARY, N.C.  27511-5525                            *
*                   (800) 767-2244                                    *
*                   (800) 366-4082 -- FAX                             *
*                   BRIANW45@AOL.COM --  EMAIL                        *
*                   BRIAN_WESTERMAN@JUNO.COM -- EMAIL                 *
*                                                                     *
***********************************************************************
         SPACE 3
***********************************************************************
*                                                                     *
*                        C H A N G E    L O G                         *
*                                                                     *
*      VERSION 2.0  09/01/2003                                        *
*                                                                     *
*      1)  UPDATED TO SUPPORT UP TO 4 DIGIT REPLY NUMBERS WHEN        *
*          USING THE REPLY COMMAND.  REPLY NUMBERS GREATER THAN       *
*          2 DIGITS HAVE BEEN ALLOWED SINCE ESA VERSION 4.            *
*                                                                     *
*      2)  UPDATED THE DELAY COMMAND TO MAKE THE EQUAL SIGN           *
*          AFTER "DELAY" OPTIONAL.  THE DELAY VALUE CAN BE            *
*          ANYWHERE AFTER THE "DELAY" COMMAND.                        *
*                                                                     *
*      3)  UPDATED TO ALLOW A NULL JOBNAME ON THE REPLY COMMAND.      *
*          THIS ALLOWS THIS UTILITY TO REPLY TO COMMANDS THAT         *
*          ARE NOT ATTRIBUTABLE TO A BATCH JOB OR STARTED TASK.       *
*          THIS COULD INCLUDE OUTSTANDING REPLIES FROM THE            *
*          MASTER SCHEDULER.                                          *
*                                                                     *
*      4)  ADDED THE ONLINE COMMAND.  THIS COMMAND ALLOWS THE         *
*          UTILITY TO WAIT FOR A SPECIFIC DISK ADDRESS OR             *
*          VOLUME TO COME ONLINE BEFORE CONTINUING.                   *
*                                                                     *
*      5)  ADDED THE OFFLINE COMMAND.  THIS COMMAND ALLOWS THE        *
*          UTILITY TO WAIT FOR A SPECIFIC DISK ADDRESS OR             *
*          VOLUME TO GO OFFLINE BEFORE CONTINUING.                    *
*                                                                     *
*      6)  ADDED THE IFSTARTED COMMAND (THANKS BRIAN WESTERMAN)       *
*          THIS COMMAND ALLOWS A CONDITIONAL LIST OF COMMANDS         *
*          TO BE EXECUTED BASED UPON A JOB OR TASK BEING ACTIVE.      *
*          THE LIST OF CONDITIONAL COMMANDS IS ENDED WITH AN          *
*          ENDIF COMMAND.                                             *
*                                                                     *
*      7)  ADDED THE IFSTOPPED COMMAND (THANKS BRIAN WESTERMAN)       *
*          THIS COMMAND ALLOWS A CONDITIONAL LIST OF COMMANDS         *
*          TO BE EXECUTED BASED UPON A JOB OR TASK NOT BEING          *
*          ACTIVE.  THE LIST OF CONDITIONAL COMMANDS IS ENDED         *
*          WITH AN ENDIF COMMAND.                                     *
*                                                                     *
*      8)  ADDED THE IFONLINE COMMAND.  THIS COMMAND ALLOWS A         *
*          CONDITIONAL LIST OF COMMANDS TO BE EXECUTED BASED          *
*          UPON A DISK VOLUME OR UNIT ADDRESS BEING ONLINE.           *
*          THE LIST OF CONDITIONAL COMMANDS IS ENDED WITH AN          *
*          ENDIF COMMAND.                                             *
*                                                                     *
*      9)  ADDED THE IFOFFLINE COMMAND. THIS COMMAND ALLOWS A         *
*          CONDITIONAL LIST OF COMMANDS TO BE EXECUTED BASED          *
*          UPON A DISK VOLUME OR UNIT ADDRESS BEING OFFLINE           *
*          OR NON-EXISTENT.  THE LIST OF CONDITIONAL COMMANDS         *
*          IS ENDED WITH AN ENDIF COMMAND.                            *
*                                                                     *
*      10) SOME SYNTAX ERRORS ON SOME OF THE COMMANDS USED TO         *
*          BE WARNINGS.  THESE ARE NOW CONSIDERED TRUE ERRORS         *
*          AND WILL RESULT IN TERMINATION OF THE UTILITY AFTER        *
*          AN APPROPRIATE ERROR MESSAGE.                              *
*                                                                     *
*      11) ALL SPECIFIED COMMANDS WILL BE LEFT ALIGNED AFTER          *
*          READING THEM.  THIS WILL ALLOW INDENTING THE LIST OF       *
*          COMMANDS FOR READABILITY IN THE INPUT COMMAND LIST.        *
*          THIS WILL BE MOST HELPFUL IN THE LIST OF CONDITIONAL       *
*          COMMANDS FOR THE IFSTARTED, IFSTOPPED, IFONLINE OR         *
*          IFOFFLINE COMMANDS.                                        *
*                                                                     *
*      VERSION 2.2  07/26/2004                                        *
*                                                                     *
*      1)  ADDED THE UNALLOC COMMAND. THIS COMMAND ALLOWS THE         *
*          UTILITY TO WAIT FOR A SPECIFIC DISK ADDRESS OR VOLUME      *
*          TO COME ONLINE AND NOT BE ALLOCATED TO ANOTHER JOB OR      *
*          USER BEFORE CONTINUING.  NOTE THAT THE FLASHCOPY           *
*          FACILITY FROM IBM REQUIRES THAT THE TARGET VOLUME NOT      *
*          BE ALLOCATED AT THE TIME OF COPY.                          *
*                                                                     *
*      VERSION 2.3  09/12/2007                                        *
*                                                                     *
*      1)  UPDATED TO BE COMPATIBLE WITH Z/OS 1.8                     *
*                                                                     *
***********************************************************************
         SPACE 3
***********************************************************************
*                                                                     *
*                        SAMPLE JCL                                   *
*                                                                     *
*       //JOBNAME ...                                                 *
*       //COMMAND  EXEC PGM=COMMAND                                   *
*       //IEFRDER  DD  *                                              *
*       D R,R                                                         *
*       DELAY 10                                                      *
*       STARTED CICSTASK                                              *
*       DELAY 10                                                      *
*       REPLY TESTJOB 'WAITING FOR' 'STOP'                            *
*       DELAY 10                                                      *
*       REPLY TESTJOB * YES                                           *
*       DELAY 10                                                      *
*       D R,R                                                         *
*       IFSTARTED CICSTASK                                            *
*         F CICSTASK,CEMT PERFORM SHUTDOWN                            *
*         STOPPED CICSTASK                                            *
*       ENDIF                                                         *
*       V 2563,OFFLINE                                                *
*       OFFLINE A=2563                                                *
*       S INITDISK,U=2563                                             *
*       DELAY 5                                                       *
*       REPLY * ICK003D 'U'                                           *
*       DELAY 5                                                       *
*       V 2563,ONLINE                                                 *
*       ONLINE A=2563                                                 *
*                                                                     *
*                                                                     *
*                                                                     *
*       IN THE ABOVE EXAMPLE, THE DELAY COMMAND IS USED TO            *
*       PAUSE THE PROGRAM FOR 10 SECONDS BETWEEN COMMANDS TO          *
*       ALLOW TIME FOR THE PREVIOUS COMMAND TO BE EXECUTED.           *
*                                                                     *
*       THE STARTED COMMAND WILL INSURE THAT THE JOB OR TASK          *
*       CICS IS EXECUTING.                                            *
*                                                                     *
*       THE FIRST REPLY COMMAND WILL REPLY 'STOP' TO THE FIRST        *
*       OUTSTANDING REPLY FOR JOB TESTJOB WHICH CONTAINS              *
*       THE CHARACTERS 'WAITING FOR'.                                 *
*                                                                     *
*       THE SECOND REPLY COMMAND WILL REPLY 'YES' TO THE              *
*       FIRST OUTSTANDING REPLY FOR JOB TESTJOB NO                    *
*       MATTER WHAT REPLY MESSAGE IS OUTSTANDING.                     *
*                                                                     *
*       THE IFSTARTED / ENDIF COMMAND GROUP SHOWS HOW A               *
*       CONDITIONAL COMMAND GROUP CAN BE USED TO OPTIMIZE             *
*       A LONG LIST OF COMMANDS THAT EITHER STARTS OR STOPS           *
*       TASKS.                                                        *
*                                                                     *
*       THE NEXT SERIES OF COMMANDS GIVES AN EXAMPLE OF HOW           *
*       THE OFFLINE AND ONLINE COMMANDS CAN BE USED TO INSURE         *
*       THAT A ICKDSF INIT PROCESS CAN PROPERLY EXECUTE.              *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*            M A C R O S   U S E D   I N   C O M M A N D              *
*                                                                     *
*        01)  ABEND        SYS1.MACLIB                                *
*        02)  AXSET        SYS1.MACLIB                                *
*        03)  CALL         SYS1.MACLIB                                *
*        04)  CLOSE        SYS1.MACLIB                                *
*        05)  CVT          SYS1.MODGEN                                *
*        06)  DCB          SYS1.MACLIB                                *
*        07)  DOM          SYS1.MACLIB                                *
*        08)  EXTRACT      SYS1.MACLIB                                *
*        09)  FREEMAIN     SYS1.MACLIB                                *
*        10)  GET          SYS1.MACLIB                                *
*        11)  GETMAIN      SYS1.MACLIB                                *
*        12)  IEECUCM      SYS1.MODGEN                                *
*        13)  IEFTIOT1     SYS1.MACLIB                                *
*        14)  IEFUCBOB     SYS1.MACLIB                                *
*        15)  IHAASCB      SYS1.MODGEN                                *
*        16)  IHAASVT      SYS1.MODGEN                                *
*        17)  IHAORE       SYS1.MODGEN                                *
*        18)  IHAPSA       SYS1.MACLIB                                *
*        19)  IHAWQE       SYS1.MODGEN                                *
*        20)  MGCRE        SYS1.MODGEN                                *
*        21)  MODESET      SYS1.MACLIB                                *
*        22)  OPEN         SYS1.MACLIB                                *
*        23)  RACROUTE     SYS1.MACLIB                                *
*        24)  RETURN       SYS1.MACLIB                                *
*        25)  SAVE         SYS1.MACLIB                                *
*        26)  SETLOCK      SYS1.MACLIB                                *
*        27)  STIMER       SYS1.MACLIB                                *
*        28)  UCBSCAN      SYS1.MACLIB                                *
*        29)  UCBDEVN      SYS1.MACLIB                                *
*        30)  WTO          SYS1.MACLIB                                *
*                                                                     *
*                                                                     *
*               L I N K A G E    E D I T O R    I N F O               *
*                                                                     *
*        SIZE:       9K                                               *
*        ATTRIBUTES: AUTHORIZED NORENT NOREUS NOREFR                  *
*                    AMODE24    RMODE24                               *
*                                                                     *
***********************************************************************
         EJECT
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         EJECT
***********************************************************************
*                                                                     *
*        START OF PROGRAM                                             *
*                                                                     *
***********************************************************************
COMMAND  CSECT
COMMAND  AMODE 24
COMMAND  RMODE 24
         SAVE  (14,12),,'COMMAND.&SYSDATE..&SYSTIME'
         LR    R10,R15             SET FIRST BASE REGISTER
         LA    R11,2048(,R10)      SET SECOND
         LA    R11,2048(,R11)          BASE REGISTER
         LA    R12,2048(,R11)      SET THIRD
         LA    R12,2048(,R12)          BASE REGISTER
         USING COMMAND,R10,R11,R12 SET PROGRAM ADDRESSABILITY
         LA    R15,SAVEAREA        LOAD ADDRESS OF NEW SAVE
         ST    R15,8(R13)          STORE NEW SAVE ADDR IN OLD
         ST    R13,4(R15)          STORE OLD SAVE ADDR IN NEW
         LR    R13,R15             SET NEW SAVE ADDRESS
         LR    R2,R1               SAVE INPUT PARM ADDRESS
         EJECT
***********************************************************************
*                                                                     *
*  CHECK THE AUTHORITY OF THE USER TO SAF CLASS "FACILITY' FOR        *
*  ENTITY "COMMAND".  NOTE THAT FASTAUTH IS USED.  TO AVOID THE       *
*  SITUATION WHERE SPECIAL ATTRIBUTES OF THE USER MAY ALLOW THE       *
*  ACCESS WITH LOGGING, A CHECK IS MADE FOR A NON-ZERO REASON         *
*  CODE.  THIS CONDITION WILL BE CONSIDERED A FAILURE.                *
*                                                                     *
***********************************************************************
AUTHTST  RACROUTE REQUEST=LIST,WORKA=RACWORK,CLASS=FACILITY,           X
               ENVIR=CREATE,                                           X
               GLOBAL=YES,                                             X
               RELEASE=2.2,                                            X
               MF=S
         RACROUTE REQUEST=FASTAUTH,WORKA=RACWORK,WKAREA=FRACWORK,      X
               ENTITY=RESOURCE,CLASS=FACILITY,ATTR=READ,               X
               MF=(E,RACROUTE)
         CH    R15,=H'4'           TEST THE RETURN CODE
         BE    TESTOK              NO DECISION POSSIBLE, OK
         BH    NOTAUTH             GREATER THAN 4, NOT AUTHORIZED
         CLC   RACROUTE+4(4),=F'0' TEST THE REASON CODE
         BE    TESTOK              ZERO, AUTHORIZED
***********************************************************************
*        CLEANUP AFTER RACROUTE                                       *
***********************************************************************
NOTAUTH  RACROUTE REQUEST=LIST,WORKA=RACWORK,CLASS=FACILITY,           X
               ENVIR=DELETE,                                           X
               RELEASE=2.2,                                            X
               MF=S
         WTO   'CMD913E UNAUTHORIZED USE OF THE COMMAND PROGRAM - JOB AX
               BORTED',ROUTCDE=(2,11)
         ABEND X'913',,,SYSTEM,REASON=0  ABEND THE JOB
         EJECT
***********************************************************************
*        CLEANUP AFTER RACROUTE                                       *
***********************************************************************
TESTOK   RACROUTE REQUEST=LIST,WORKA=RACWORK,CLASS=FACILITY,           X
               ENVIR=DELETE,                                           X
               RELEASE=2.2,                                            X
               MF=S
***********************************************************************
*                                                                     *
*        EXTRACT MY JOB NAME FOR THE WTO MESSAGES                     *
*                                                                     *
***********************************************************************
EXTRACT  EXTRACT TIOTADDR,'S',FIELDS=TIOT EXTRACT THE ADDR OF THE TIOT
         L     R3,TIOTADDR         LOAD ADDRESS OF THE TIOT
         USING TIOT,R3             SET ADDRESSABILITY TO THE TIOT
         MVC   MYNAME,TIOCNJOB     SAVE THE JOBNAME
         DROP  R3                  DROP ADDRESSABILITY TO THE TIOT
         SPACE 3
***********************************************************************
*                                                                     *
*        GET STORAGE FOR AN OUTSTANDING REPLY TABLE                   *
*                                                                     *
***********************************************************************
         GETMAIN R,LV=14001        GET STORAGE FOR TABLE
         ST    R1,GETADDR          SAVE TABLE ADDRESS
         EJECT
***********************************************************************
*                                                                     *
*        SEE IF A PARM HAS BEEN ENTERED.  IF SO, PROCESS EACH         *
*        COMMAND WITHIN THE PARM.                                     *
*                                                                     *
***********************************************************************
CKPARM   LR    R1,R2               RESTORE INPUT PARM ADDRESS
         LTR   R1,R1               SEE IF INPUT PARM
         BZ    OPEN                NONE, GO OPEN FILE
         L     R9,0(R1)            LOAD PARM ADDRESS
         LTR   R9,R9               TEST PARM ADDRESS
         BZ    OPEN                ZERO, NO PARM, GO OPEN FILE
         LH    R8,0(R9)            LOAD PARM LENGTH
         LTR   R8,R8               TEST PARM LENGTH
         BZ    OPEN                ZERO, NO PARM, GO OPEN FILE
         LA    R9,2(R9)            POINT TO ACTUAL PARM
CKPARM1  LR    R1,R9               SAVE START ADDRESS OF PARM
         SLR   R15,R15             SET LENGTH OF COMMAND
CKPARM2  CLI   0(R1),C';'          SEE IF END OF COMMAND
         BE    CKPARM3             YES, BRANCH
         LA    R15,1(R15)          ADD 1 TO LENGTH
         LA    R1,1(R1)            INCREMENT TO NEXT CHAR OF PARM
         BCT   R8,CKPARM2          LOOP FOR NEXT CHAR OF PARM
CKPARM3  LTR   R15,R15             TEST FOR ZERO LENGTH
         BZ    CKPARM5             ZERO, NULL COMMAND, BRANCH
         CH    R15,=H'72'          SEE IF EXCEEDS MAX LENGTH
         BNH   CKPARM4             NO, BRANCH
         LA    R15,72              SET TO MAX LENGTH
CKPARM4  MVC   COMDATA+4(80),BLANKS BLANK THE ENTIRE COMMAND AREA
         BCTR  R15,0               MAKE MACHINE LENGTH
         EX    R15,PARMCMD         MOVE PARM COMMAND TO BUFFER
         LR    R9,R1               SET NEW START OF CMD POINTER
         BAL   R14,LEFTAL          GO LEFT ALIGH THE COMMAND
         BAL   R14,DOCMD           GO ISSUE THE COMMAND
CKPARM5  CLI   0(R9),C';'          IS THERE ANOTHER COMMAND
         BNE   OPEN                NO, GET OUT
         LA    R9,1(R9)            INCREMENT PAST SEMICOLON
         BCTR  R8,0                REDUCE REMAINING PARM LENGTH BY 1
         LTR   R8,R8               TEST REMAINING PARM LENGTH
         BZ    OPEN                ZERO, FINISHED
         B     CKPARM1             GO PROCESS THIS COMMAND
PARMCMD  MVC   COMDATA+4(0),0(R9)  **** EXECUTE ONLY ****
         EJECT
***********************************************************************
*                                                                     *
*        OPEN THE IEFRDER DATA SET (IF SPECIFIED).                    *
*                                                                     *
***********************************************************************
OPEN     SLR   R15,R15        CLEAR REGISTER FOR ICM
         L     R14,16         POINT TO CVT
         L     R14,0(,R14)    POINT TO TCB POINTERS
         L     R14,4(,R14)    POINT TO CURRENT TCB
         L     R14,12(,R14)   POINT TO TIOT
         LA    R14,24(,R14)   POINT TO TIOT DD ENTRIES
OPEN1    ICM   R15,1,0(R14)   LOAD ENTRY LENGTH
         BZ    RETURN         END OF TIOT, END OF PROCESSING
         CLC   4(8,R14),=CL8'IEFRDER' SEE IF DD STATEMENT SPECIFIED
         BE    OPEN2          YES, GET OUT
         LA    R14,0(R15,R14) INCREMENT TO NEXT ENTRY
         B     OPEN1          LOOP
***********************************************************************
*                                                                     *
*        READ INPUT FILE.  PROCESS THE FIRST 72 CHARACTERS OF EACH    *
*        RECORD AS EITHER A CONTROL COMMAND OR A SYSTEM COMMAND.      *
*                                                                     *
***********************************************************************
OPEN2    OPEN  (IEFRDER,(INPUT))   OPEN INPUT FILE
READ     GET   IEFRDER             READ INPUT FILE
         MVC   COMDATA+4(80),BLANKS BLANK THE ENTIRE COMMAND AREA
         MVC   COMDATA+4(72),0(R1) MOVE IN JES OR O/S COMMAND
         BAL   R14,LEFTAL          GO LEFT ALIGH THE COMMAND
         BAL   R14,DOCMD           GO ISSUE THE COMMAND
         B     READ
         EJECT
***********************************************************************
*                                                                     *
*        END OF THE PROGRAM                                           *
*                                                                     *
***********************************************************************
EOF      CLOSE (IEFRDER)           CLOSE INPUT FILE
RETURN   L     R1,GETADDR          LOAD ADDRESS OF GETMAINED TABLE
         FREEMAIN R,LV=14001,A=(1) FREE STORAGE USED BY THE TABLE
         L     R13,4(,R13)         LOAD ADDRESS OF OLD SAVE AREA
         RETURN (14,12),RC=0       RETURN TO O/S
         EJECT
***********************************************************************
*                                                                     *
*                            D O C M D                                *
*                                                                     *
*        SEE IF THE COMMAND THAT HAS BEEN STORED AT COMDATA+4         *
*        IS A SPECIAL CONTROL COMMAND.  IF IT IS NOT A SPECIAL        *
*        CONTROL COMMAND ISSUE THE COMMAND TO THE CONSOLE.            *
*                                                                     *
*        INPUT:  COMMAND AT COMDATA+4                                 *
*                R14 - RETURN ADDRESS                                 *
*                                                                     *
***********************************************************************
         SPACE 1
***********************************************************************
*                                                                     *
*        SEE IF THE COMMAND IS ONE OF THE UTILITY CONTROL             *
*        COMMANDS.  IF NO, EXECUTE THE COMMAND AS A TRUE              *
*        OPERATOR COMMAND.                                            *
*                                                                     *
*        UTILITY CONTROL COMMANDS                                     *
*                                                                     *
*            DELAY                                                    *
*            REPLY                                                    *
*            STOPPED                                                  *
*            STARTED                                                  *
*            ONLINE                                                   *
*            OFFLINE                                                  *
*            IFSTARTED                                                *
*            IFSTOPPED                                                *
*            IFONLINE                                                 *
*            IFOFFLINE                                                *
*            ENDIF                                                    *
*                                                                     *
***********************************************************************
DOCMD    STM   R0,R15,SAVEDCM      SAVE REGISTERS
         CLI   COMDATA+4,C'*'      SEE IF A COMMENT STATEMENT
         BE    DOCMDE              YES, BYPASS THIS COMMAND
         CLC   COMDATA+4(72),BLANKS SEE IF BLANK COMMAND
         BE    DOCMDE              YES, BYPASS THIS COMMAND
         CLC   COMDATA+4(6),=CL6'ENDIF' SEE IF AN ENDIF COMMAND
         BE    DOCMDB              YES, PROCESS ENDIF
         TM    MISCSW,IFBYPASS     ARE WE IN IFBYPASS MODE
         BNO   DOCMD1              NO, CONTINUE
         CLC   COMDATA+4(2),=CL2'IF' SEE IF THIS IS A NESTED IF
         BNE   DOCMDE              NO, THEN BYPASS THIS COMMAND
         B     ERROR07             YES, ERROR
***********************************************************************
*                                                                     *
*        PROCESS A DELAY COMMAND                                      *
*                                                                     *
***********************************************************************
DOCMD1   CLC   COMDATA+4(6),=CL6'DELAY ' SEE IF A DELAY COMMAND
         BE    DOCMD1A             YES, GO PROCESS IT
         CLC   COMDATA+4(6),=CL6'DELAY=' SEE IF A DELAY COMMAND
         BNE   DOCMD2              NO, GO SEE IF REPLY COMMAND
DOCMD1A  LA    R15,72-6-1          SET LENGTH OF OPERAND AREA
         LA    R2,COMDATA+9        POINT TO START OF "DELAY " VALUE
         CLI   0(R2),C' '          SEE IF EQUAL SIGN
         BE    DOCMD1B             NO, BRANCH
         MVI   0(R2),C' '          BLANK OUT THE EQUAL SIGN
DOCMD1B  CLI   0(R2),C' '          SEE IF START OF DELAY VALUE
         BNE   DOCMD1C             YES, GO PROCESS DELAY VALUE
         LA    R2,1(,R2)           INCREMENT TO NEXT POSITION
         BCT   R15,DOCMD1B         LOOP
         B     DOCMD1C             DELAY VALUE NOT FOUND
DOCMD1C  LA    R3,8                SET MAXIMUM LENGTH OF DELAY VALUE
         SLR   R4,R4               SET LENGTH COUNTER
         LR    R15,R2              SAVE START ADDRESS OF DELAY VALUE
DOCMD1D  CLI   0(R15),C' '         END OF DELAY VALUE
         BE    DOCMD1E             YES, BRANCH
         LA    R4,1(,R4)           ADD 1 TO LENGTH COUNTER
         CLI   0(R15),C'0'         SEE IF LT 0
         BL    ERROR01             YES, NOT NUMERIC
         CLI   0(R15),C'9'         SEE IF GT 9
         BH    ERROR01             YES, NOT NUMERIC
         LA    R15,1(,R15)         INCREMENT TO NEXT INPUT CHARACTER
         BCT   R3,DOCMD1D          LOOP UP TO 8 TIMES
         CLI   0(R15),C' '         END OF DELAY VALUE
         BNE   ERROR01             NO, TOO LONG
DOCMD1E  LTR   R4,R4               TEST LENGTH
         BZ    ERROR01             ZERO, BLANK
         BCTR  R4,0                MAKE MACHINE LENGTH
         EX    R4,PACKTIME         PACK THE DELAY VALUE
         CVB   R5,DOUBLE1          CONVERT DELAY TO BINARY
         LTR   R5,R5               CHECK VALUE
         BZ    ERROR01             ZERO, INVALID
         CH    R5,=H'999'          SEE IF EXCEEDS MAXIMUM VALUE
         BH    ERROR01             YES, ERROR
         MH    R5,=H'100'          MULTIPLY BY 100
         ST    R5,WAITIME          SAVE WAIT TIME IN HUNDRETHS OF A SEC
         WTO   MF=(E,COMDATA)      ECHO THE COMMAND ON THE CONSOLE
         STIMER WAIT,BINTVL=WAITIME WAIT THE SPECIFIED TIME
         B     DOCMDE              GO GET ANOTHER COMMAND
         EJECT
***********************************************************************
*                                                                     *
*        PROCESS A REPLY COMMAND                                      *
*                                                                     *
***********************************************************************
DOCMD2   CLC   COMDATA+4(6),=CL6'REPLY ' SEE IF A REPLY COMMAND
         BNE   DOCMD3              NO, GO SEE IF STOPPED COMMAND
***********************************************************************
*                                                                     *
*        PARSE THE REPLY COMMAND                                      *
*                                                                     *
***********************************************************************
         MVC   REPLYWK(72),COMDATA+4   SAVE REPLY COMMAND
         LA    R1,REPLYWK+5        POINT TO START OF REPLY DATA
         LA    R14,72-5            LOAD LENGTH OF REPLY DATA
         MVI   DELIM,C' '          SET DELIMETER TO BLANK
         LA    R2,PARMS            POINT TO PARM TABLE
         SLR   R15,R15             SET PARM COUNT TO ZERO
DOCMD2A  CLC   0(1,R1),DELIM       SEE IF START OF PARM
         BNE   DOCMD2B             NO, BRANCH
         LA    R1,1(,R1)           INCREMENT TO NEXT CHAR OF PARMS
         BCT   R14,DOCMD2A         LOOP
         B     DOCMD2F             END OF PARM, BRANCH
DOCMD2B  CH    R15,=H'3'           SEE IF ALREADY FOUND MAX PARMS
         BNL   DOCMD2F             YES, IGNORE ANY OTHERS
         LA    R15,1(,R15)         ADD 1 TO PARM COUNTER
         CLI   0(R1),C''''         SEE IF QUOTED STRING
         BNE   DOCMD2C             NO, BRANCH
         MVC   DELIM,0(R1)         SET DELIMETER
         LA    R1,1(,R1)           INCREMENT PAST DELIMETER
         BCTR  R14,0               DECREMENT REMAINING CHARACTER COUNT
         LTR   R14,R14             TEST REMAINING CHARACTER COUNT
         BNP   DOCMD2F             DONE, GET OUT
DOCMD2C  ST    R1,0(R2)            SAVE START ADDRESS OF PARM
DOCMD2D  CLC   0(1,R1),DELIM       SEE IF END OF PARM
         BE    DOCMD2E             YES, BRANCH
         LA    R1,1(,R1)           INCREMENT TO NEXT CHAR OF PARMS
         BCT   R14,DOCMD2D         LOOP
DOCMD2E  S     R1,0(R2)            SUBTRACT START ADDR FROM ENDING
         ST    R1,4(R2)            SAVE PARM LENGTH
         A     R1,0(R2)            RESTORE END ADDRESS
         LA    R1,1(,R1)           INCREMENT PAST DELIMETER
         BCTR  R14,0               DECREMENT REMAINING CHARACTER COUNT
         LTR   R14,R14             TEST REMAINING CHARACTER COUNT
         BNP   DOCMD2F             DONE, GET OUT
         MVI   DELIM,C' '          SET DEFAULT DELIMETER
         LA    R2,8(,R2)           INCREMENT TO NEXT PARM POINTER
         B     DOCMD2A             GO PROCESS NEXT PARM
DOCMD2F  CH    R15,=H'3'           SEE IF THREE PARMS
         BNE   ERROR02             NO, ERROR
         CLC   JOBNL,=F'8'         TEST LENGTH OF THE JOBNAME
         BH    ERROR03             GREATER THAN 8, ERROR
         CLC   JOBNL,=F'1'         SEE IF JOBNAME LENGTH = 1
         BNE   DOCMD2J             NO, SKIP THE REST OF THIS TEST
         L     R6,JOBN             POINT TO JOBNAME
         CLI   0(R6),C'*'          SEE IF '*'
         BNE   DOCMD2J             NO, SKIP THE REST OF THIS TEST
         CLC   MATCHL,=F'1'        SEE IF MESSAGEID LENGTH = 1
         BNE   DOCMD2J             NO, SKIP THE REST OF THIS TEST
         L     R6,MATCH            POINT TO MESSAGEID
         CLI   0(R6),C'*'          SEE IF MESSAGE ALSO '*'
         BE    ERROR04             YES, ERROR
***********************************************************************
*                                                                     *
*        GO GET A LIST OF OUTSTANDING REPLIES                         *
*                                                                     *
***********************************************************************
DOCMD2J  L     R1,GETADDR          LOAD ADDRESS OF REPLY TABLE
         CALL  REPLY               CALL THE SUBROUTINE
***********************************************************************
*                                                                     *
*        FIND AN OUTSTANDING REPLY FOR THE SPECIFIED JOBNAME          *
*                                                                     *
***********************************************************************
DOCMD2K  MVC   JOBNAME,BLANKS      BLANK THE JOBNAME
         L     R14,JOBN            LOAD ADDRESS OF JOBNAME
         L     R15,JOBNL           LOAD LENGTH OF JOBNAME
         BCTR  R15,0               MAKE MACHINE LENGTH
         EX    R15,SETNAME         SET THE FULL JOB NAME
         L     R3,GETADDR          LOAD ADDRESS OF REPLY TABLE
         USING MSGENT,R3           SET ADDRESSABILITY TO REPLY TABLE
DOCMD2L  CLI   0(R3),X'FF'         END OF TABLE, BRANCH
         BNE   DOCMD2M             NO, BRANCH
         MVC   COMDATA+4+72(8),=CL8'NO MATCH' SET ERROR MSG
         B     DOCMD2Q             GO ECHO THE COMMAND
DOCMD2M  CLC   JOBNAME,=C'*       '  SEE IF REPLY FOR ALL JOBNAMES
         BE    DOCMD2O             YES, BRANCH
         CLC   JNAME,JOBNAME       SEE IF MATCH ON JOB NAME
         BE    DOCMD2O             YES, BRANCH
DOCMD2N  LA    R3,L'MSGENT(,R3)    INCREMENT TO NEXT REPLY TABLE ENTRY
         B     DOCMD2L             LOOP
***********************************************************************
*                                                                     *
*        SEE IF THIS REPLY CONTAINS THE SPECIFIED TEXT (IF ANY)       *
*                                                                     *
***********************************************************************
DOCMD2O  LA    R14,MSG             POINT TO MESSAGE TEST
         LA    R15,128             LOAD MESSAGE LENGTH
         S     R15,MATCHL          CALCULATE LOOP COUNTER
         L     R1,MATCHL           LOAD LENGTH OF MATCH TEXT
         BCTR  R1,0                MAKE MACHINE LENGTH
         L     R2,MATCH            LOAD ADDRESS OF MATCH TEXT
         CLC   MATCHL,=F'0'        SEE IF LENGTH OF TEXT = 0
         BE    DOCMD2Q             YES, USE THIS OUTSTANDING REPLY
         CLC   MATCHL,=F'1'        SEE IF LENGTH OF TEXT = 1
         BH    DOCMD2P             NO, BRANCH
         CLI   0(R2),C'*'          SEE IF NULL MATCH TEXT
         BE    DOCMD2Q             YES, USE THIS OUTSTANDING REPLY
DOCMD2P  EX    R1,COMPTEXT         SEE IF MATCH MESSAGE TEXT
         BE    DOCMD2Q             YES, BRANCH
         LA    R14,1(,R14)         POINT TO NEXT CHARACTER OF TEXT
         BCT   R15,DOCMD2P         LOOP
         B     DOCMD2N             NO MATCH FOR TEXT, FIND ANOTHER MSG
DOCMD2Q  WTO   MF=(E,COMDATA)      ECHO THE COMMAND ON THE CONSOLE
         CLC   COMDATA+4+72(8),=CL8' ' SEE IF ERROR HAS OCCURRED
         BNE   DOCMDE              YES, DROP THIS REPLY COMMAND
         MVC   COMDATA+4(80),BLANKS BLANK THE ENTIRE COMMAND AREA
         MVI   COMDATA+4,C'R'      SET REPLY CHARACTER
         MVC   COMDATA+4+2(4),RID  SET REPLY ID
         MVI   COMDATA+4+6,C','    SET THE END OF THE REPLY ID
         L     R1,REPLYTX          LOAD ADDRESS OF THE REPLY TEXT
         ICM   R15,B'1111',REPLYTXL LOAD LENGTH OF REPLY TEXT
         BZ    DOCMD2R             ZERO, GO ISSUE NULL RESPONSE
         MVI   COMDATA+4+7,C''''   SET START QUOTE FOR REPLY
         BCTR  R15,0               MAKE MACHINE LENGTH
         EX    R15,SETREPLY        SET THE REPLY TEXT
         LA    R15,COMDATA+4+8+1(R15) POINT PAST REPLY
         MVI   0(R15),C''''        SET ENDING QUOTE FOR REPLY
DOCMD2R  B     DOCMDD              GO ISSUE THE REPLY
COMPTEXT CLC   0(0,R14),0(R2)      **** EXECUTE ONLY ****
SETREPLY MVC   COMDATA+4+8(0),0(R1) *** EXECUTE ONLY ****
         DROP  R3                  DROP ADDRESSABILITY TO REPLY TABLE
         EJECT
***********************************************************************
*                                                                     *
*        PROCESS A STOPPED COMMAND                                    *
*                                                                     *
***********************************************************************
DOCMD3   CLC   COMDATA+4(8),=CL8'STOPPED' SEE IF A STOPPED COMMAND
         BNE   DOCMD4              NO, GO SEE IF STARTED COMMAND
***********************************************************************
*                                                                     *
*        PARSE THE STOPPED COMMAND                                    *
*                                                                     *
***********************************************************************
         MVC   REPLYWK(72),COMDATA+4   SAVE STOPPED COMMAND
         LA    R1,REPLYWK+8        POINT TO START OF STOPPED DATA
         LA    R15,72-8            LOAD LENGTH OF STOPPED DATA
         SLR   R14,R14             SET LENGTH OF JOBNAME TO ZERO
DOCMD3A  CLI   0(R1),C' '          SEE IF START OF JOBNAME
         BNE   DOCMD3B             NO, BRANCH
         LA    R1,1(,R1)           INCREMENT TO NEXT CHAR OF PARMS
         BCT   R15,DOCMD3A         LOOP
         B     ERROR05             END OF PARM, NO JOBNAME, ERROR
DOCMD3B  LR    R14,R1              SAVE START ADDRESS OF JOBNAME
DOCMD3C  CLI   0(R1),C' '          SEE IF END OF JOBNAME
         BE    DOCMD3D             YES, BRANCH
         LA    R1,1(,R1)           INCREMENT TO NEXT CHAR OF JOBNAME
         BCT   R15,DOCMD3C         LOOP
DOCMD3D  SR    R1,R14              SUBTRACT START ADDR FROM ENDING
         CH    R1,=H'8'            TEST LENGTH OF THE JOBNAME
         BH    ERROR05             GREATER THAN 8, ERROR
DOCMD3E  MVC   JOBNAME,BLANKS      BLANK THE JOBNAME
         BCTR  R1,0                MAKE MACHINE LENGTH
         EX    R1,SETNAME          SET THE FULL JOB NAME
         WTO   MF=(E,COMDATA)      ECHO THE COMMAND ON THE CONSOLE
***********************************************************************
*                                                                     *
*        SEE IF THE REQUESTED JOB/TASK IS RUNNING                     *
*                                                                     *
***********************************************************************
DOCMD3F  LA    R1,JOBNAME          POINT TO JOBNAME
         BAL   R14,JOBSRCH         GO SEE IF JOB IS EXECUTING
         LTR   R15,R15             TEST THE RETURN CODE
         BNZ   DOCMD3Z             NOT ZER0, NOT EXECUTING, EXIT
***********************************************************************
*                                                                     *
*        ISSUE THE WTO MESSAGE IF NOT ALREADY ISSUED                  *
*                                                                     *
***********************************************************************
         CLC   WTOMSGID,=XL8'00'   SEE IF MESSAGE ALREADY ISSUED
         BNE   DOCMD3G             YES, GO WAIT A BIT
         MVC   WAITMSG1+4+08(8),MYNAME  MOVE MY JOBNAME TO MESSAGE
         MVC   WAITMSG1+4+29(8),JOBNAME MOVE JOBNAME TO MESSAGE
         WTO   MF=(E,WAITMSG1)     ISSUED THE WTO MESSAGE
         ST    R1,WTOMSGID         SAVE THE WTO MESSAGE ID FOR DOM
***********************************************************************
*                                                                     *
*        WAIT 15 SECONDS AND TRY AGAIN                                *
*                                                                     *
***********************************************************************
DOCMD3G  STIMER WAIT,BINTVL=SEC15  WAIT 15 SECONDS
         B     DOCMD3F             GO SEE IF JOB HAS COMPLETED YET
***********************************************************************
*                                                                     *
*        DELETE THE WTO MESSAGE IF IT HAS BEEN ISSUED                 *
*        AND EXIT                                                     *
*                                                                     *
***********************************************************************
DOCMD3Z  ICM   R1,B'1111',WTOMSGID LOAD WTO MESSAGE ID
         BZ    DOCMDE              ZERO, NO MESSAGE, GET OUT
         DOM   MSG=(1)             DELETE OPERATOR MESSAGE
         XC    WTOMSGID,WTOMSGID   CLEAR THE WTO MESSAGE ID
         B     DOCMDE              GO GET ANOTHER COMMAND
         SPACE 3
WAITMSG1 WTO   'CMD101I ........ WAITING FOR ........ TO COMPLETE',    X
               ROUTCDE=(2,11),DESC=2,MF=L
         EJECT
***********************************************************************
*                                                                     *
*        PROCESS A STARTED COMMAND                                    *
*                                                                     *
***********************************************************************
DOCMD4   CLC   COMDATA+4(8),=CL8'STARTED' SEE IF A STARTED COMMAND
         BNE   DOCMD5              NO, SEE IF ONLINE COMMAND
***********************************************************************
*                                                                     *
*        PARSE THE STARTED COMMAND                                    *
*                                                                     *
***********************************************************************
         MVC   REPLYWK(72),COMDATA+4   SAVE STARTED COMMAND
         LA    R1,REPLYWK+8        POINT TO START OF STARTED DATA
         LA    R15,72-8            LOAD LENGTH OF STARTED DATA
         SLR   R14,R14             SET LENGTH OF JOBNAME TO ZERO
DOCMD4A  CLI   0(R1),C' '          SEE IF START OF JOBNAME
         BNE   DOCMD4B             NO, BRANCH
         LA    R1,1(,R1)           INCREMENT TO NEXT CHAR OF PARMS
         BCT   R15,DOCMD4A         LOOP
         B     ERROR06             END OF PARM, NO JOBNAME, ERROR
DOCMD4B  LR    R14,R1              SAVE START ADDRESS OF JOBNAME
DOCMD4C  CLI   0(R1),C' '          SEE IF END OF JOBNAME
         BE    DOCMD4D             YES, BRANCH
         LA    R1,1(,R1)           INCREMENT TO NEXT CHAR OF JOBNAME
         BCT   R15,DOCMD4C         LOOP
DOCMD4D  SR    R1,R14              SUBTRACT START ADDR FROM ENDING
         CH    R1,=H'8'            TEST LENGTH OF THE JOBNAME
         BH    ERROR06             GREATER THAN 8, ERROR
DOCMD4E  MVC   JOBNAME,BLANKS      BLANK THE JOBNAME
         BCTR  R1,0                MAKE MACHINE LENGTH
         EX    R1,SETNAME          SET THE FULL JOB NAME
         WTO   MF=(E,COMDATA)      ECHO THE COMMAND ON THE CONSOLE
***********************************************************************
*                                                                     *
*        SEE IF THE REQUESTED JOB/TASK IS RUNNING                     *
*                                                                     *
***********************************************************************
DOCMD4F  LA    R1,JOBNAME          POINT TO JOBNAME
         BAL   R14,JOBSRCH         GO SEE IF JOB IS EXECUTING
         LTR   R15,R15             TEST THE RETURN CODE
         BZ    DOCMD4Z             ZER0, EXECUTING, EXIT
***********************************************************************
*                                                                     *
*        ISSUE THE WTO MESSAGE IF NOT ALREADY ISSUED                  *
*                                                                     *
***********************************************************************
         CLC   WTOMSGID,=XL8'00'   SEE IF MESSAGE ALREADY ISSUED
         BNE   DOCMD4G             YES, GO WAIT A BIT
         MVC   WAITMSG2+4+08(8),MYNAME  MOVE MY JOBNAME TO MESSAGE
         MVC   WAITMSG2+4+29(8),JOBNAME MOVE JOBNAME TO MESSAGE
         WTO   MF=(E,WAITMSG2)     ISSUED THE WTO MESSAGE
         ST    R1,WTOMSGID         SAVE THE WTO MESSAGE ID FOR DOM
***********************************************************************
*                                                                     *
*        WAIT 15 SECONDS AND TRY AGAIN                                *
*                                                                     *
***********************************************************************
DOCMD4G  STIMER WAIT,BINTVL=SEC15  WAIT 15 SECONDS
         B     DOCMD4F             GO SEE IF JOB HAS COMPLETED YET
***********************************************************************
*                                                                     *
*        DELETE THE WTO MESSAGE IF IT HAS BEEN ISSUED                 *
*        AND EXIT                                                     *
*                                                                     *
***********************************************************************
DOCMD4Z  ICM   R1,B'1111',WTOMSGID LOAD WTO MESSAGE ID
         BZ    DOCMDE              ZERO, NO MESSAGE, GET OUT
         DOM   MSG=(1)             DELETE OPERATOR MESSAGE
         XC    WTOMSGID,WTOMSGID   CLEAR THE WTO MESSAGE ID
         B     DOCMDE              GO GET ANOTHER COMMAND
         SPACE 3
WAITMSG2 WTO   'CMD102I ........ WAITING FOR ........ TO START',       X
               ROUTCDE=(2,11),DESC=2,MF=L
         EJECT
***********************************************************************
*                                                                     *
*        PROCESS AN ONLINE COMMAND                                    *
*                                                                     *
***********************************************************************
DOCMD5   CLC   COMDATA+4(7),=CL8'ONLINE ' SEE IF AN ONLINE COMMAND
         BNE   DOCMD6              NO, GO SEE IF OFFLINE COMMAND
***********************************************************************
*                                                                     *
*        PARSE THE ONLINE COMMAND                                     *
*                                                                     *
***********************************************************************
         NI    MISCSW,255-SEARCHV-SEARCHA TURN OFF SEARCH SWITCHES
         MVC   REPLYWK(72),COMDATA+4   SAVE ONLINE COMMAND
         BAL   R14,PARSAV          GO PARSE ADDR/VOL PARAMETER
         WTO   MF=(E,COMDATA)      ECHO THE COMMAND ON THE CONSOLE
***********************************************************************
*        PROCESS THE VOLSER OR UNIT ADDRESS REQUEST                   *
***********************************************************************
DOCMD5A  TM    MISCSW,SEARCHV      SEE IF SEARCHING BY VOLSER
         BO    DOCMD5B             YES, BRANCH
         B     DOCMD5D             NO, GO SEARCH BY UNIT ADDRESS
***********************************************************************
*        SEE IF THE REQUESTED VOLSER IS ONLINE                        *
***********************************************************************
DOCMD5B  BAL   R14,VOLSRCH         GO SEE IF VOLSER IS ONLINE
         LTR   R15,R15             TEST THE RETURN CODE
         BZ    DOCMD5Z             ZERO, ONLINE, CONTINUE
***********************************************************************
*                                                                     *
*        ISSUE THE WTO MESSAGE IF NOT ALREADY ISSUED                  *
*                                                                     *
***********************************************************************
         CLC   WTOMSGID,=XL8'00'   SEE IF MESSAGE ALREADY ISSUED
         BNE   DOCMD5C             YES, GO WAIT A BIT
         MVC   WAITMSG3+4+08(8),MYNAME  MOVE MY JOBNAME TO MESSAGE
         MVC   WAITMSG3+4+36(6),VOLSER  MOVE VOLSER TO MESSAGE
         WTO   MF=(E,WAITMSG3)     ISSUED THE WTO MESSAGE
         ST    R1,WTOMSGID         SAVE THE WTO MESSAGE ID FOR DOM
***********************************************************************
*                                                                     *
*        WAIT 15 SECONDS AND TRY AGAIN                                *
*                                                                     *
***********************************************************************
DOCMD5C  STIMER WAIT,BINTVL=SEC15  WAIT 15 SECONDS
         B     DOCMD5B             GO SEE IF VOLUME ONLINE YET
***********************************************************************
*        SEE IF THE REQUESTED UNIT ADDRESS IS ONLINE                  *
***********************************************************************
DOCMD5D  BAL   R14,ADDSRCH         GO SEE IF ADDRESS IS ONLINE
         LTR   R15,R15             TEST THE RETURN CODE
         BZ    DOCMD5Z             ZERO, ONLINE, CONTINUE
***********************************************************************
*                                                                     *
*        ISSUE THE WTO MESSAGE IF NOT ALREADY ISSUED                  *
*                                                                     *
***********************************************************************
         CLC   WTOMSGID,=XL8'00'   SEE IF MESSAGE ALREADY ISSUED
         BNE   DOCMD5E             YES, GO WAIT A BIT
         MVC   WAITMSG4+4+08(8),MYNAME  MOVE MY JOBNAME TO MESSAGE
         MVC   WAITMSG4+4+42(4),UNITADD MOVE UNIT ADDRESS TO MESSAGE
         WTO   MF=(E,WAITMSG4)     ISSUED THE WTO MESSAGE
         ST    R1,WTOMSGID         SAVE THE WTO MESSAGE ID FOR DOM
***********************************************************************
*                                                                     *
*        WAIT 15 SECONDS AND TRY AGAIN                                *
*                                                                     *
***********************************************************************
DOCMD5E  STIMER WAIT,BINTVL=SEC15  WAIT 15 SECONDS
         B     DOCMD5D             GO SEE IF UNIT ADDRESS ONLINE YET
***********************************************************************
*                                                                     *
*        DELETE THE WTO MESSAGE IF IT HAS BEEN ISSUED                 *
*        AND EXIT                                                     *
*                                                                     *
***********************************************************************
DOCMD5Z  ICM   R1,B'1111',WTOMSGID LOAD WTO MESSAGE ID
         BZ    DOCMDE              ZERO, NO MESSAGE, GET OUT
         DOM   MSG=(1)             DELETE OPERATOR MESSAGE
         XC    WTOMSGID,WTOMSGID   CLEAR THE WTO MESSAGE ID
         B     DOCMDE              GO GET ANOTHER COMMAND
         SPACE 3
WAITMSG3 WTO   'CMD103I ........ WAITING FOR VOLUME ...... TO COME ONLIX
               NE',ROUTCDE=(2,11),DESC=2,MF=L
WAITMSG4 WTO   'CMD104I ........ WAITING FOR DISK ADDRESS .... TO COME X
               ONLINE',ROUTCDE=(2,11),DESC=2,MF=L
         EJECT
***********************************************************************
*                                                                     *
*        PROCESS AN OFFLINE COMMAND                                   *
*                                                                     *
***********************************************************************
DOCMD6   CLC   COMDATA+4(8),=CL8'OFFLINE ' SEE IF AN OFFLINE COMMAND
         BNE   DOCMD7              NO, GO SEE IF IFSTARTED COMMAND
***********************************************************************
*                                                                     *
*        PARSE THE OFFLINE COMMAND                                    *
*                                                                     *
***********************************************************************
         NI    MISCSW,255-SEARCHV-SEARCHA TURN OFF SEARCH SWITCHES
         MVC   REPLYWK(72),COMDATA+4   SAVE OFFLINE COMMAND
         BAL   R14,PARSAV          GO PARSE ADDR/VOL PARAMETER
         WTO   MF=(E,COMDATA)      ECHO THE COMMAND ON THE CONSOLE
***********************************************************************
*        PROCESS THE VOLSER OR UNIT ADDRESS REQUEST                   *
***********************************************************************
DOCMD6A  TM    MISCSW,SEARCHV      SEE IF SEARCHING BY VOLSER
         BO    DOCMD6B             YES, BRANCH
         B     DOCMD6D             NO, GO SEARCH BY UNIT ADDRESS
***********************************************************************
*        SEE IF THE REQUESTED VOLSER IS OFFLINE                       *
***********************************************************************
DOCMD6B  BAL   R14,VOLSRCH         GO SEE IF VOLSER IS OFFLINE
         LTR   R15,R15             TEST THE RETURN CODE
         BNZ   DOCMD6Z             NOT ZERO, OFFLINE, CONTINUE
***********************************************************************
*                                                                     *
*        ISSUE THE WTO MESSAGE IF NOT ALREADY ISSUED                  *
*                                                                     *
***********************************************************************
         CLC   WTOMSGID,=XL8'00'   SEE IF MESSAGE ALREADY ISSUED
         BNE   DOCMD6C             YES, GO WAIT A BIT
         MVC   WAITMSG5+4+08(8),MYNAME  MOVE MY JOBNAME TO MESSAGE
         MVC   WAITMSG5+4+36(6),VOLSER  MOVE VOLSER TO MESSAGE
         WTO   MF=(E,WAITMSG5)     ISSUED THE WTO MESSAGE
         ST    R1,WTOMSGID         SAVE THE WTO MESSAGE ID FOR DOM
***********************************************************************
*                                                                     *
*        WAIT 15 SECONDS AND TRY AGAIN                                *
*                                                                     *
***********************************************************************
DOCMD6C  STIMER WAIT,BINTVL=SEC15  WAIT 15 SECONDS
         B     DOCMD6B             GO SEE IF VOLUME OFFLINE YET
***********************************************************************
*        SEE IF THE REQUESTED UNIT ADDRESS IS OFFLINE                 *
***********************************************************************
DOCMD6D  BAL   R14,ADDSRCH         GO SEE IF ADDRESS IS OFFLINE
         LTR   R15,R15             TEST THE RETURN CODE
         BNZ   DOCMD6Z             NOT ZERO, OFFLINE, CONTINUE
***********************************************************************
*                                                                     *
*        ISSUE THE WTO MESSAGE IF NOT ALREADY ISSUED                  *
*                                                                     *
***********************************************************************
         CLC   WTOMSGID,=XL8'00'   SEE IF MESSAGE ALREADY ISSUED
         BNE   DOCMD6E             YES, GO WAIT A BIT
         MVC   WAITMSG6+4+08(8),MYNAME  MOVE MY JOBNAME TO MESSAGE
         MVC   WAITMSG6+4+42(4),UNITADD MOVE UNIT ADDRESS TO MESSAGE
         WTO   MF=(E,WAITMSG6)     ISSUED THE WTO MESSAGE
         ST    R1,WTOMSGID         SAVE THE WTO MESSAGE ID FOR DOM
***********************************************************************
*                                                                     *
*        WAIT 15 SECONDS AND TRY AGAIN                                *
*                                                                     *
***********************************************************************
DOCMD6E  STIMER WAIT,BINTVL=SEC15  WAIT 15 SECONDS
         B     DOCMD6D             GO SEE IF UNIT ADDRESS OFFLINE YET
***********************************************************************
*                                                                     *
*        DELETE THE WTO MESSAGE IF IT HAS BEEN ISSUED                 *
*        AND EXIT                                                     *
*                                                                     *
***********************************************************************
DOCMD6Z  ICM   R1,B'1111',WTOMSGID LOAD WTO MESSAGE ID
         BZ    DOCMDE              ZERO, NO MESSAGE, GET OUT
         DOM   MSG=(1)             DELETE OPERATOR MESSAGE
         XC    WTOMSGID,WTOMSGID   CLEAR THE WTO MESSAGE ID
         B     DOCMDE              GO GET ANOTHER COMMAND
         SPACE 3
WAITMSG5 WTO   'CMD105I ........ WAITING FOR VOLUME ...... TO GO OFFLINX
               E',ROUTCDE=(2,11),DESC=2,MF=L
WAITMSG6 WTO   'CMD106I ........ WAITING FOR DISK ADDRESS .... TO GO OFX
               FLINE',ROUTCDE=(2,11),DESC=2,MF=L
         EJECT
***********************************************************************
*                                                                     *
*        PROCESS AN IFSTARTED COMMAND                                 *
*                                                                     *
***********************************************************************
DOCMD7   CLC   COMDATA+4(10),=CL10'IFSTARTED'  IFSTARTED COMMAND
         BNE   DOCMD8              NO, SEE IF IFSTOPPED COMMAND
         TM    MISCSW,IFPROC       SEE IF ANOTHER IF BEING PROCESSED
         BO    ERROR07             YES, ERROR
         OI    MISCSW,IFPROC       TURN ON IF BEING PROCESSED IND
***********************************************************************
*                                                                     *
*        PARSE THE IFSTARTED COMMAND                                  *
*                                                                     *
***********************************************************************
         MVC   REPLYWK(72),COMDATA+4   SAVE IFSTARTED COMMAND
         LA    R1,REPLYWK+10       POINT TO START OF IFSTARTED DATA
         LA    R15,72-10           LOAD LENGTH OF IFSTARTED DATA
         SLR   R14,R14             SET LENGTH OF JOBNAME TO ZERO
DOCMD7A  CLI   0(R1),C' '          SEE IF START OF JOBNAME
         BNE   DOCMD7B             NO, BRANCH
         LA    R1,1(,R1)           INCREMENT TO NEXT CHAR OF PARMS
         BCT   R15,DOCMD7A         LOOP
         B     ERROR08             END OF PARM, NO JOBNAME, ERROR
DOCMD7B  LR    R14,R1              SAVE START ADDRESS OF JOBNAME
DOCMD7C  CLI   0(R1),C' '          SEE IF END OF JOBNAME
         BE    DOCMD7D             YES, BRANCH
         LA    R1,1(,R1)           INCREMENT TO NEXT CHAR JOBNAME
         BCT   R15,DOCMD7C         LOOP
DOCMD7D  SR    R1,R14              SUBTRACT START ADDR FROM ENDING
         CH    R1,=H'8'            TEST LENGTH OF THE JOBNAME
         BH    ERROR08             GREATER THAN 8, ERROR
DOCMD7E  MVC   JOBNAME,BLANKS      BLANK THE JOBNAME
         BCTR  R1,0                MAKE MACHINE LENGTH
         EX    R1,SETNAME          SET THE FULL JOB NAME
***********************************************************************
*                                                                     *
*        SEE IF THE REQUESTED JOB/TASK IS RUNNING                     *
*                                                                     *
***********************************************************************
DOCMD7F  MVC   COMDATA+4+72(8),=CL8' TRUE   ' ASSUME TRUE CONDITION
         LA    R1,JOBNAME          POINT TO JOBNAME
         BAL   R14,JOBSRCH         GO SEE IF JOB IS EXECUTING
         LTR   R15,R15             TEST THE RETURN CODE
         BZ    DOCMD7Z             ZER0, EXECUTING, EXIT
***********************************************************************
*                                                                     *
*        SET THE IFBYPASS FLAG TO SKIP COMMANDS                       *
*                                                                     *
***********************************************************************
         OI    MISCSW,IFBYPASS     TURN ON IFBYPASS MODE
         MVC   COMDATA+4+72(8),=CL8' FALSE  ' SET FALSE CONDITION
DOCMD7Z  WTO   MF=(E,COMDATA)      ECHO THE COMMAND ON THE CONSOLE
         B     DOCMDE              GO GET ANOTHER COMMAND
         EJECT
***********************************************************************
*                                                                     *
*        PROCESS AN IFSTOPPED COMMAND                                 *
*                                                                     *
***********************************************************************
DOCMD8   CLC   COMDATA+4(10),=CL10'IFSTOPPED'  IFSTOPPED COMMAND
         BNE   DOCMD9              NO, SEE IF IFONLINE COMMAND
         TM    MISCSW,IFPROC       SEE IF ANOTHER IF BEING PROCESSED
         BO    ERROR07             YES, ERROR
         OI    MISCSW,IFPROC       TURN ON IF BEING PROCESSED IND
***********************************************************************
*                                                                     *
*        PARSE THE IFSTOPPED COMMAND                                  *
*                                                                     *
***********************************************************************
         MVC   REPLYWK(72),COMDATA+4   SAVE IFSTOPPED COMMAND
         LA    R1,REPLYWK+10       POINT TO START OF IFSTOPPED DATA
         LA    R15,72-10           LOAD LENGTH OF IFSTARTED DATA
         SLR   R14,R14             SET LENGTH OF JOBNAME TO ZERO
DOCMD8A  CLI   0(R1),C' '          SEE IF START OF JOBNAME
         BNE   DOCMD8B             NO, BRANCH
         LA    R1,1(,R1)           INCREMENT TO NEXT CHAR OF PARMS
         BCT   R15,DOCMD8A         LOOP
         B     ERROR09             END OF PARM, NO JOBNAME, ERROR
DOCMD8B  LR    R14,R1              SAVE START ADDRESS OF JOBNAME
DOCMD8C  CLI   0(R1),C' '          SEE IF END OF JOBNAME
         BE    DOCMD8D             YES, BRANCH
         LA    R1,1(,R1)           INCREMENT TO NEXT CHAR JOBNAME
         BCT   R15,DOCMD8C         LOOP
DOCMD8D  SR    R1,R14              SUBTRACT START ADDR FROM ENDING
         CH    R1,=H'8'            TEST LENGTH OF THE JOBNAME
         BH    ERROR09             GREATER THAN 8, ERROR
DOCMD8E  MVC   JOBNAME,BLANKS      BLANK THE JOBNAME
         BCTR  R1,0                MAKE MACHINE LENGTH
         EX    R1,SETNAME          SET THE FULL JOB NAME
***********************************************************************
*                                                                     *
*        SEE IF THE REQUESTED JOB/TASK IS RUNNING                     *
*                                                                     *
***********************************************************************
DOCMD8F  MVC   COMDATA+4+72(8),=CL8' TRUE   ' ASSUME TRUE CONDITION
         LA    R1,JOBNAME          POINT TO JOBNAME
         BAL   R14,JOBSRCH         GO SEE IF JOB IS EXECUTING
         LTR   R15,R15             TEST THE RETURN CODE
         BNZ   DOCMD8Z             NOT ZERO, NOT EXECUTING, EXIT
***********************************************************************
*                                                                     *
*        SET THE IFBYPASS FLAG TO SKIP COMMANDS                       *
*                                                                     *
***********************************************************************
         OI    MISCSW,IFBYPASS     TURN ON IFBYPASS MODE
         MVC   COMDATA+4+72(8),=CL8' FALSE  ' SET FALSE CONDITION
DOCMD8Z  WTO   MF=(E,COMDATA)      ECHO THE COMMAND ON THE CONSOLE
         B     DOCMDE              GO GET ANOTHER COMMAND
         EJECT
****************************************************************
*                                                              *
*        PROCESS AN IFONLINE COMMAND                           *
*                                                              *
****************************************************************
DOCMD9   CLC   COMDATA+4(9),=CL9'IFONLINE'   IFONLINE COMMAND
         BNE   DOCMDA              NO, SEE IF IFOFFLINE COMMAND
         TM    MISCSW,IFPROC       SEE IF ANOTHER IF BEING PROCESSED
         BO    ERROR07             YES, ERROR
         OI    MISCSW,IFPROC       TURN ON IF BEING PROCESSED IND
****************************************************************
*                                                              *
*        PARSE THE IFONLINE COMMAND                            *
*                                                              *
****************************************************************
         MVC   REPLYWK(72),COMDATA+4   SAVE ONLINE COMMAND
         BAL   R14,PARSAV          GO PARSE ADDR/VOL PARAMETER
***********************************************************************
*        PROCESS THE VOLSER OR UNIT ADDRESS REQUEST                   *
***********************************************************************
DOCMD9A  TM    MISCSW,SEARCHV      SEE IF SEARCHING BY VOLSER
         BO    DOCMD9B             YES, BRANCH
         B     DOCMD9C             NO, GO SEARCH BY UNIT ADDRESS
***********************************************************************
*        SEE IF THE REQUESTED VOLSER IS ONLINE                        *
***********************************************************************
DOCMD9B  BAL   R14,VOLSRCH         GO SEE IF VOLSER IS ONLINE
         LTR   R15,R15             TEST THE RETURN CODE
         BZ    DOCMD9Z             ZERO, ONLINE, CONTINUE
         B     DOCMD9D             NOT ZERO, OFFLINE, SET BYPASS
***********************************************************************
*        SEE IF THE REQUESTED UNIT ADDRESS IS ONLINE                  *
***********************************************************************
DOCMD9C  MVC   COMDATA+4+72(8),=CL8' TRUE   ' ASSUME TRUE CONDITION
         BAL   R14,ADDSRCH         GO SEE IF ADDRESS IS ONLINE
         LTR   R15,R15             TEST THE RETURN CODE
         BZ    DOCMD9Z             ZERO, ONLINE, CONTINUE
         B     DOCMD9D             NOT ZERO, OFFLINE, SET BYPASS
*****************************************************************
*                                                               *
*        SET THE IFBYPASS FLAG TO SKIP COMMANDS                 *
*                                                               *
*****************************************************************
DOCMD9D  OI    MISCSW,IFBYPASS     TURN ON IFBYPASS MODE
         MVC   COMDATA+4+72(8),=CL8' FALSE  ' SET FALSE CONDITION
DOCMD9Z  WTO   MF=(E,COMDATA)      ECHO THE COMMAND ON THE CONSOLE
         B     DOCMDE              GO GET ANOTHER COMMAND
         EJECT
****************************************************************
*                                                              *
*        PROCESS AN IFOFFLINE COMMAND                          *
*                                                              *
****************************************************************
DOCMDA   CLC   COMDATA+4(10),=CL10'IFOFFLINE'  IFOFFLINE COMMAND
         BNE   DOCMDB              NO, GO SEE IF ENDIF COMMAND
         TM    MISCSW,IFPROC       SEE IF ANOTHER IF BEING PROCESSED
         BO    ERROR07             YES, ERROR
         OI    MISCSW,IFPROC       TURN ON IF BEING PROCESSED IND
****************************************************************
*                                                              *
*        PARSE THE IFOFFLINE COMMAND                           *
*                                                              *
****************************************************************
         MVC   REPLYWK(72),COMDATA+4   SAVE OFFLINE COMMAND
         BAL   R14,PARSAV          GO PARSE ADDR/VOL PARAMETER
***********************************************************************
*        PROCESS THE VOLSER OR UNIT ADDRESS REQUEST                   *
***********************************************************************
DOCMDAA  TM    MISCSW,SEARCHV      SEE IF SEARCHING BY VOLSER
         BO    DOCMDAB             YES, BRANCH
         B     DOCMDAC             NO, GO SEARCH BY UNIT ADDRESS
***********************************************************************
*        SEE IF THE REQUESTED VOLSER IS OFFLINE                       *
***********************************************************************
DOCMDAB  BAL   R14,VOLSRCH         GO SEE IF VOLSER IS OFFLINE
         LTR   R15,R15             TEST THE RETURN CODE
         BZ    DOCMDAD             ZERO, NOT OFFLINE, SET BYPASS
         B     DOCMDAZ             NOT ZERO, OFFLINE, CONTINUE
***********************************************************************
*        SEE IF THE REQUESTED UNIT ADDRESS IS OFFLINE                 *
***********************************************************************
DOCMDAC  MVC   COMDATA+4+72(8),=CL8' TRUE   ' ASSUME TRUE CONDITION
         BAL   R14,ADDSRCH         GO SEE IF ADDRESS IS OFFLINE
         LTR   R15,R15             TEST THE RETURN CODE
         BZ    DOCMDAD             ZERO, NOT OFFLINE, SET BYPASS
         B     DOCMDAZ             NOT ZERO, OFFLINE, CONTINUE
*****************************************************************
*                                                               *
*        SET THE IFBYPASS FLAG TO SKIP COMMANDS                 *
*                                                               *
*****************************************************************
DOCMDAD  OI    MISCSW,IFBYPASS     TURN ON IFBYPASS MODE
         MVC   COMDATA+4+72(8),=CL8' FALSE  ' SET FALSE CONDITION
DOCMDAZ  WTO   MF=(E,COMDATA)      ECHO THE COMMAND ON THE CONSOLE
         B     DOCMDE              GO GET ANOTHER COMMAND
         EJECT
***********************************************************************
*                                                                     *
*        PROCESS AN ENDIF COMMAND                                     *
*                                                                     *
***********************************************************************
DOCMDB   CLC   COMDATA+4(6),=CL6'ENDIF' SEE IF ENDIF COMMAND
         BNE   DOCMDC              NO, GO SEE IF UNALLOC COMMAND
         WTO   MF=(E,COMDATA)      ECHO THE COMMAND ON THE CONSOLE
         NI    MISCSW,255-IFBYPASS TURN OFF IFBYPASS MODE
         NI    MISCSW,255-IFPROC   TURN OFF IF BEING PROCESSED IND
         B     DOCMDE              GO GET NEXT RECORD
         SPACE 1
PACKTIME PACK  DOUBLE1,0(0,R2)     **** EXECUTE ONLY ****
SETNAME  MVC   JOBNAME(0),0(R14)   **** EXECUTE ONLY ****
         EJECT
***********************************************************************
*                                                                     *
*        PROCESS AN UNALLOC COMMAND                                   *
*                                                                     *
***********************************************************************
DOCMDC   CLC   COMDATA+4(8),=CL8'UNALLOC ' SEE IF AN UNALLOC COMMAND
         BNE   DOCMDD              NO, GO EXECUTE THE COMMAND
***********************************************************************
*                                                                     *
*        PARSE THE UNALLOC COMMAND                                    *
*                                                                     *
***********************************************************************
         NI    MISCSW,255-SEARCHV-SEARCHA TURN OFF SEARCH SWITCHES
         MVC   REPLYWK(72),COMDATA+4   SAVE UNALLOC COMMAND
         BAL   R14,PARSAV          GO PARSE ADDR/VOL PARAMETER
         WTO   MF=(E,COMDATA)      ECHO THE COMMAND ON THE CONSOLE
***********************************************************************
*        PROCESS THE VOLSER OR UNIT ADDRESS REQUEST                   *
***********************************************************************
DOCMDCA  TM    MISCSW,SEARCHV      SEE IF SEARCHING BY VOLSER
         BO    DOCMDCB             YES, BRANCH
         B     DOCMDCE             NO, GO SEARCH BY UNIT ADDRESS
***********************************************************************
*        SEE IF THE REQUESTED VOLSER IS ONLINE AND UNALLOC            *
***********************************************************************
DOCMDCB  BAL   R14,VOLSRCH         GO SEE IF VOLSER IS ONLINE
         LTR   R15,R15             TEST THE RETURN CODE
         BNZ   DOCMDCC             NOT ZERO, NOT ONLINE, ISSUE WTO
         CLC   USECNT,=F'0'        SEE IF ALLOCATED (ANY USERS)
         BE    DOCMDCZ             ZERO, NOT ALLOC, CONTINUE
***********************************************************************
*                                                                     *
*        ISSUE THE WTO MESSAGE IF NOT ALREADY ISSUED                  *
*                                                                     *
***********************************************************************
DOCMDCC  CLC   WTOMSGID,=XL8'00'   SEE IF MESSAGE ALREADY ISSUED
         BNE   DOCMDCD             YES, GO WAIT A BIT
         MVC   WAITMSG7+4+08(8),MYNAME  MOVE MY JOBNAME TO MESSAGE
         MVC   WAITMSG7+4+36(6),VOLSER  MOVE VOLSER TO MESSAGE
         WTO   MF=(E,WAITMSG7)     ISSUED THE WTO MESSAGE
         ST    R1,WTOMSGID         SAVE THE WTO MESSAGE ID FOR DOM
***********************************************************************
*                                                                     *
*        WAIT 15 SECONDS AND TRY AGAIN                                *
*                                                                     *
***********************************************************************
DOCMDCD  STIMER WAIT,BINTVL=SEC15  WAIT 15 SECONDS
         B     DOCMDCB             GO SEE IF VOLUME UNALLOC YET
***********************************************************************
*        SEE IF THE REQUESTED UNIT ADDRESS IS UNALLOC                 *
***********************************************************************
DOCMDCE  BAL   R14,ADDSRCH         GO SEE IF ADDRESS IS ONLINE
         LTR   R15,R15             TEST THE RETURN CODE
         BNZ   DOCMDCF             NOT ZERO, NOT ONLINE, ISSUE WTO
         CLC   USECNT,=F'0'        SEE IF ALLOCATED (ANY USERS)
         BE    DOCMDCZ             ZERO, NOT ALLOC, CONTINUE
***********************************************************************
*                                                                     *
*        ISSUE THE WTO MESSAGE IF NOT ALREADY ISSUED                  *
*                                                                     *
***********************************************************************
DOCMDCF  CLC   WTOMSGID,=XL8'00'   SEE IF MESSAGE ALREADY ISSUED
         BNE   DOCMDCG             YES, GO WAIT A BIT
         MVC   WAITMSG8+4+08(8),MYNAME  MOVE MY JOBNAME TO MESSAGE
         MVC   WAITMSG8+4+42(4),UNITADD MOVE UNIT ADDRESS TO MESSAGE
         WTO   MF=(E,WAITMSG8)     ISSUED THE WTO MESSAGE
         ST    R1,WTOMSGID         SAVE THE WTO MESSAGE ID FOR DOM
***********************************************************************
*                                                                     *
*        WAIT 15 SECONDS AND TRY AGAIN                                *
*                                                                     *
***********************************************************************
DOCMDCG  STIMER WAIT,BINTVL=SEC15  WAIT 15 SECONDS
         B     DOCMDCE             GO SEE IF UNIT ADDRESS UNALLOC YET
***********************************************************************
*                                                                     *
*        DELETE THE WTO MESSAGE IF IT HAS BEEN ISSUED                 *
*        AND EXIT                                                     *
*                                                                     *
***********************************************************************
DOCMDCZ  ICM   R1,B'1111',WTOMSGID LOAD WTO MESSAGE ID
         BZ    DOCMDE              ZERO, NO MESSAGE, GET OUT
         DOM   MSG=(1)             DELETE OPERATOR MESSAGE
         XC    WTOMSGID,WTOMSGID   CLEAR THE WTO MESSAGE ID
         B     DOCMDE              GO GET ANOTHER COMMAND
         SPACE 3
WAITMSG7 WTO   'CMD107I ........ WAITING FOR VOLUME ...... TO BECOME ONX
               LINE AND UNALLOCATED',ROUTCDE=(2,11),DESC=2,MF=L
WAITMSG8 WTO   'CMD108I ........ WAITING FOR DISK ADDRESS .... TO BECOMX
               E ONLINE AND UNALLOCATED',ROUTCDE=(2,11),DESC=2,MF=L
         EJECT
***********************************************************************
*                                                                     *
*        ISSUE THE COMMAND                                            *
*                                                                     *
***********************************************************************
DOCMDD   SLR   R0,R0               CLEAR REG ZERO
         MVC   COMMND+2(80),COMDATA+4 SET COMMAND TEXT
         MODESET KEY=ZERO          GET INTO KEY ZERO
         LA    R2,COMMND           POINT TO COMMAND
         MGCRE TEXT=(2),CONSID=CONSID,    ISSUE THE COMMAND            X
               MF=(E,MGCREEX)
         WTO   MF=(E,COMDATA)      ECHO THE COMMAND ON THE CONSOLE
         MODESET KEY=NZERO         GET OUT OF KEY ZERO
DOCMDE   LM    R0,R14,SAVEDCM      RESTORE REGISTERS
         BR    R14                 RETURN TO CALLER
         EJECT
***********************************************************************
*                                                                     *
*                          J O B S R C H                              *
*                                                                     *
*        SEARCH THE ADDRESS SPACES IN THE SYSTEM TO SEE IF THE        *
*        JOBNAME OR TASK NAME POINTED TO BY REGISTER 1 UPON           *
*        ENTRY TO THIS ROUTINE IS EXECUTING.  THE RETURN CODE         *
*        WILL BE SET AS FOLLOWS:                                      *
*                                                                     *
*        R15 = 0  - THE REQUESTED JOB IS EXECUTING                    *
*        R15 = 4  - THE REQUESTED JOB IS NOT EXECUTING                *
*                                                                     *
*        RETURN IS MADE TO THE ADDRESS IN REGISTER 14 UPON ENTRY.     *
*                                                                     *
***********************************************************************
JOBSRCH  STM   R0,R15,SAVESRCH     SAVE REGISTERS
JOBSRCH1 L     R5,16               LOAD ADDR OF CVT
         USING CVT,R5              SET ADDRESSABILITY TO CVT
         L     R5,CVTASVT          POINT TO ADDRESS SPACE VECTOR TABLE.
         DROP  R5                  DROP ADDRESSABILITY TO CVT
         USING ASVT,R5             SET ADDRESSABILITY TO ASVT
         L     R14,ASVTMAXU        LOAD MAX. NUMBER OF ADDRESS SPACES.
         LA    R5,ASVTENTY         LOAD ADDRESS OF FIRST ASCB POINTER
         DROP  R5                  DROP ADDRESSABILITY TO ASVT
JOBSRCH2 ICM   R6,B'1111',0(R5)    POINT TO ASCB
         BNP   JOBSRCH5            ZERO OR NEGATIVE, BYPASS THIS ONE
         USING ASCB,R6             SET ADDRESSABILITY TO ASCB
         ICM   R15,B'1111',ASCBJBNI LOAD ADDRESS OF JOB NAME
         BZ    JOBSRCH3            ZERO, NOT A BATCH JOB
         MVC   SRCHNAME,0(R15)     SAVE JOB NAME
         B     JOBSRCH4            GO SEE IF REQUESTED JOB/TASK NAME
JOBSRCH3 ICM   R15,B'1111',ASCBJBNS LOAD ADDRESS OF TASK NAME
         MVC   SRCHNAME,0(R15)     SAVE TASK NAME
JOBSRCH4 CLC   SRCHNAME,0(R1)      SEE IF REQUESTED JOB/TASK NAME
         BE    JOBSRCH6            YES, GET OUT
JOBSRCH5 LA    R5,4(R5)            POINT TO NEXT ASCB POINTER.
         BCT   R14,JOBSRCH2        LOOP THROUGH ASCBS
         LA    R15,4               NOT FOUND, SET RETURN CODE TO 4
         B     JOBSRCH7            GO RETURN TO CALLER
JOBSRCH6 LA    R15,0               FOUND, SET RETURN CODE TO 0
JOBSRCH7 LM    R0,R14,SAVESRCH     RESTORE REGISTERS
         BR    R14                 RETURN TO CALLER
         DROP  R6                  DROP ADDRESSABILITY TO ASCB
         EJECT
***********************************************************************
*                                                                     *
*        PARSE THE ONLINE/OFFLINE/IFONLINE/IFOFFLINE COMMAND          *
*                                                                     *
*        THE SUBPARAMETER MUST BE IN THE FORM:                        *
*                                                                     *
*            V=VVVVVV WHERE VVVVVV IS A 1 TO 6 CHARACTER VOLSER       *
*              OR                                                     *
*            A=AAAA   WHERE AAAA   IS A 1 TO 4 CHARACTER UNIT ADDR    *
*                                                                     *
*        ONE OF TWO FLAGS WILL BE SET                                 *
*            MISCSW=SEARCHV   IF A VOLSER IS SPECIFIED                *
*            MISCSW=SEARCHA   IF A UNIT ADDRESS IS SPECIFIED          *
*                                                                     *
*        ONE OF TWO FIELDS WILL BE SET                                *
*            VOLSER           IF A VOLSER IS SPECIFIED                *
*            UNITADD          IF A UNIT ADDRESS IS SPECIFIED          *
*                                                                     *
*        RETURN WILL BE MADE TO REGISTER 14                           *
*                                                                     *
***********************************************************************
PARSAV   STM   R0,R15,SAVEPAV      SAVE REGISTERS
         LA    R1,REPLYWK          POINT TO START OF COMMAND
         LA    R15,72              LOAD LENGTH OF COMMAND
         SLR   R14,R14             SET LENGTH OF SUBPARAMETER TO ZERO
PARSAV01 CLI   0(R1),C' '          SEE IF END OF VERB
         BE    PARSAV02            YES, BRANCH
         LA    R1,1(,R1)           INCREMENT TO NEXT CHAR OF COMMAND
         BCT   R15,PARSAV01        LOOP
PARSAV02 CLI   0(R1),C' '          SEE IF START OF OPERAND
         BNE   PARSAV03            YES, BRANCH
         LA    R1,1(,R1)           INCREMENT TO NEXT CHAR OF COMMAND
         BCT   R15,PARSAV02        LOOP
         B     ERROR10             END OF COMMAND, NO OPERAND, ERROR
PARSAV03 OI    MISCSW,SEARCHV      ASSUME SEARCH FOR VOLUME
         CLC   0(2,R1),=C'V='      SEE IF SPECIFYING VOLSER
         BE    PARSAV04            YES, BRANCH
         NI    MISCSW,255-SEARCHV  ASSUME SEARCH
         OI    MISCSW,SEARCHA          FOR ADDRESS
         CLC   0(2,R1),=C'A='      SEE IF SPECIFYING ADDRESS
         BE    PARSAV04            YES, BRANCH
         B     ERROR11             INVALID OPERAND, ERROR
PARSAV04 LA    R1,2(,R1)           SET START ADDRESS OF VOL/ADDR
         LR    R14,R1              SAVE START ADDRESS OF VOL/ADDR
         SH    R15,=H'2'           SUBTRACT 2 FROM REMAINING LENGTH
         BM    ERROR12             NEGATIVE, NO VOLSER OR ADDRESS
PARSAV05 CLI   0(R1),C' '          SEE IF END OF VOL/ADDR
         BE    PARSAV06            YES, BRANCH
         LA    R1,1(,R1)           INCREMENT TO NEXT CHAR OF VOL/ADDR
         BCT   R15,PARSAV05        LOOP
PARSAV06 SR    R1,R14              SUBTRACT START ADDR FROM ENDING
         LTR   R1,R1               TEST LENGTH OF THE VOL/ADDR
         BZ    ERROR12             ZERO, NULL VOLSER OR ADDRESS
         TM    MISCSW,SEARCHV      SEE IF SEARCHING FOR VOLSER
         BO    PARSAV12            YES, BRANCH
PARSAV07 CH    R1,=H'4'            TEST LENGTH OF THE UNIT ADDRESS
         BH    ERROR13             LONGER THAN 4, ERROR
         MVC   UNITADD,=CL4'0000'  SET UNIT ADDRESS TO ZERO
         LA    R15,UNITADD         ASSUME LENGTH = 4
         CH    R1,=H'4'            SEE IF LENGTH = 4
         BE    PARSAV08            YES, BRANCH
         LA    R15,UNITADD+1       ASSUME LENGTH = 3
         CH    R1,=H'3'            SEE IF LENGTH = 3
         BE    PARSAV08            YES, BRANCH
         LA    R15,UNITADD+2       ASSUME LENGTH = 2
         CH    R1,=H'2'            SEE IF LENGTH = 2
         BE    PARSAV08            YES, BRANCH
         LA    R15,UNITADD+3       LENGTH MUST BE 1
PARSAV08 BCTR  R1,0                MAKE MACHINE LENGTH
         EX    R1,SETUA            SET UNIT ADDRESS
PARSAV09 LA    R15,4               SET LOOP COUNTER
         LA    R1,UNITADD          POINT TO UNIT ADDRESS
PARSAV10 CLI   0(R1),C'A'          SEE IF VALID CHARACTER
         BL    ERROR14             NO, ERROR
         CLI   0(R1),C'F'          SEE IF VALID CHARACTER
         BNH   PARSAV11            YES, BRANCH
         CLI   0(R1),C'0'          SEE IF VALID CHARACTER
         BL    ERROR14             NO, ERROR
         CLI   0(R1),C'9'          SEE IF VALID CHARACTER
         BH    ERROR14             NO, ERROR
PARSAV11 LA    R1,1(,R1)           INCREMENT TO NEXT CHAR OF DEV ADDR
         BCT   R15,PARSAV10        LOOP THROUGH DEVICE ADDRESS
         B     PARSAV99            UNIT ADDRESS VALID, GET OUT
PARSAV12 CH    R1,=H'6'            TEST LENGTH OF THE VOLSER
         BH    ERROR15             LONGER THAN 6, ERROR
         MVC   VOLSER,BLANKS       SET VOLSER TO BLANK
         BCTR  R1,0                MAKE MACHINE LENGTH
         EX    R1,SETVOL           SET VOLSER
PARSAV99 LM    R0,R15,SAVEPAV      RESTORE REGISTERS
         BR    R14                 RETURN TO CALLER
SETUA    MVC   0(0,R15),0(R14)     **** EXECUTE ONLY ****
SETVOL   MVC   VOLSER(0),0(R14)    **** EXECUTE ONLY ****
         EJECT
***********************************************************************
*                                                                     *
*        SCAN UCB TABLE FOR A DISK VOLSER                             *
*                                                                     *
***********************************************************************
         SPACE 1
VOLSRCH  STM   R0,R15,SAVESRCH     SAVE REGISTERS
         XC    SCANWORK,SCANWORK   CLEAR SCAN SERVICE WORK AREA
         XC    USECNT,USECNT       ZERO THE VOLUME USE COUNT
VOLSRCH1 UCBSCAN COPY,                                                 X
               WORKAREA=SCANWORK,                                      X
               UCBAREA=UCBAREA,                                        X
               DYNAMIC=YES,                                            X
               DEVCLASS=DASD,                                          X
               RANGE=ALL,                                              X
               MF=(E,UCBSCN)
         LTR   R15,R15             TEST RETURN CODE
         BNZ   VOLSRCH5            NOT ZERO, END OF UCBS, NOT ONLINE
         LA    R8,UCBAREA          LOAD UCB ADDRESS
         EJECT
***********************************************************************
*        TEST EACH UCB FOR PROPER ATTRIBUTES                          *
***********************************************************************
         SPACE 1
         USING UCB,R8              SET ADDRESSABILITY TO UCB
VOLSRCH2 TM    UCBTBYT3,UCB3DACC   DIRECT ACCESS?
         BZ    VOLSRCH1            NO
         UCBDEVN DEVN=DEVADDR      CONVERT TO 4 DIGIT DEVICE NUMBER
         CLI   DEVADDR,C' '        SEE IF 3 DIGIT DEVICE NUMBER
         BNE   VOLSRCH3            NO, BRANCH
         MVI   DEVADDR,C'0'        YES, MAKE LEADING ZERO
***********************************************************************
*        FILTER THE VOLSER                                            *
***********************************************************************
VOLSRCH3 TM    UCBVOLI,X'FF'       ANY NAME?
         BZ    VOLSRCH1            NO, IGNORE IT
         CLC   VOLSER(6),UCBVOLI   SEE IF VOLSER ON THIS DEVICE
         BNE   VOLSRCH1            NO, SKIP IT
         TM    UCBSTAT,UCBONLI     ONLINE?
         BO    VOLSRCH4            YES, VOLUME ONLINE
         B     VOLSRCH5            NO,  VOLUME OFFLINE
VOLSRCH4 LA    R15,0               ONLINE, SET RETURN CODE TO 0
         SLR   R1,R1               LOAD
         ICM   R1,B'0011',UCBUSER    USE COUNT
         ST    R1,USECNT           SAVE USE COUNT
         B     VOLSRCH6            GO RETURN TO CALLER
VOLSRCH5 LA    R15,4               OFFLINE, SET RETURN CODE TO 4
VOLSRCH6 LM    R0,R14,SAVESRCH     RESTORE REGISTERS
         BR    R14                 RETURN TO CALLER
         DROP  R8                  DROP ADDRESSABILITY TO UCB
         EJECT
***********************************************************************
*                                                                     *
*        SCAN UCB TABLE FOR A UNIT ADDRESS                            *
*                                                                     *
***********************************************************************
         SPACE 1
ADDSRCH  STM   R0,R15,SAVESRCH     SAVE REGISTERS
         XC    SCANWORK,SCANWORK   CLEAR SCAN SERVICE WORK AREA
         XC    USECNT,USECNT       ZERO THE VOLUME USE COUNT
ADDSRCH1 UCBSCAN COPY,                                                 X
               WORKAREA=SCANWORK,                                      X
               UCBAREA=UCBAREA,                                        X
               DYNAMIC=YES,                                            X
               DEVCLASS=DASD,                                          X
               RANGE=ALL,                                              X
               MF=(E,UCBSCN)
         LTR   R15,R15             TEST RETURN CODE
         BNZ   ADDSRCH5            NOT ZERO, END OF UCBS, NOT FOUND
         LA    R8,UCBAREA          LOAD UCB ADDRESS
         EJECT
***********************************************************************
*        TEST EACH UCB FOR PROPER ATTRIBUTES                          *
***********************************************************************
         SPACE 1
         USING UCB,R8              SET ADDRESSABILITY TO UCB
ADDSRCH2 TM    UCBTBYT3,UCB3DACC   DIRECT ACCESS?
         BZ    ADDSRCH1            NO
         UCBDEVN DEVN=DEVADDR      CONVERT TO 4 DIGIT DEVICE NUMBER
         CLI   DEVADDR,C' '        SEE IF 3 DIGIT DEVICE NUMBER
         BNE   ADDSRCH3            NO, BRANCH
         MVI   DEVADDR,C'0'        YES, MAKE LEADING ZERO
***********************************************************************
*        FILTER THE UNIT ADDRESS                                      *
***********************************************************************
ADDSRCH3 CLC   UNITADD(4),DEVADDR  SEE IF CORRECT UNIT ADDRESS
         BNE   ADDSRCH1            NO, SKIP IT
         TM    UCBSTAT,UCBONLI     ONLINE?
         BO    ADDSRCH4            YES, VOLUME ONLINE
         B     ADDSRCH5            NO,  VOLUME OFFLINE
ADDSRCH4 LA    R15,0               ONLINE, SET RETURN CODE TO 0
         SLR   R1,R1               LOAD
         ICM   R1,B'0011',UCBUSER    USE COUNT
         ST    R1,USECNT           SAVE USE COUNT
         B     ADDSRCH6            GO RETURN TO CALLER
ADDSRCH5 LA    R15,4               OFFLINE, SET RETURN CODE TO 4
ADDSRCH6 LM    R0,R14,SAVESRCH     RESTORE REGISTERS
         BR    R14                 RETURN TO CALLER
         DROP  R8                  DROP ADDRESSABILITY TO UCB
         EJECT
***********************************************************************
*                                                                     *
*        LEFT ALIGN THE COMMAND WITHIN THE COMMAND BUFFER             *
*                                                                     *
***********************************************************************
         SPACE 1
LEFTAL   STM   R0,R15,SAVEALIG     SAVE REGISTERS
         MVC   COMWORK,BLANKS      BLANK THE COMMAND WORK AREA
         LA    R2,COMDATA+4        POINT TO POSSIBLE START OF COMMAND
         LA    R3,72               LOAD MAX LENGTH OF COMMAND
LEFTAL1  CLI   0(R2),C' '          SEE IF START OF COMMAND
         BNE   LEFTAL2             YES, BRANCH
         LA    R2,1(,R2)           INCREMENT TO NEXT CHAR OF COMMAND
         BCT   R3,LEFTAL1          LOOP
         B     LEFTAL3             BLANK COMMAND, GET OUT
LEFTAL2  BCTR  R3,0                MAKE MACHINE LENGTH
         EX    R3,ALIGNIT          LEFT ALIGN THE COMMAND
LEFTAL3  MVC   COMDATA+4(80),BLANKS BLANK THE COMMAND BUFFER
         MVC   COMDATA+4(80),COMWORK RESTORE THE ALIGNED COMMAND
         LM    R0,R14,SAVEALIG     RESTORE REGISTERS
         BR    R14                 RETURN TO CALLER
ALIGNIT  MVC   COMWORK(0),0(R2)    **** EXECUTE ONLY
         EJECT
***********************************************************************
*                                                                     *
*        ERROR ROUTINES                                               *
*                                                                     *
***********************************************************************
ERROR01  MVC   COMDATA+4+72(8),=CL8' ERROR  ' SET ERROR MSG
         WTO   MF=(E,COMDATA)      ECHO THE COMMAND ON THE CONSOLE
         WTO   'CMD001E THE DELAY CONTROL COMMAND SPECIFIED AN ILLEGAL X
               VALUE - IT MUST BE NUMERIC WITH A VALUE FROM 1 TO 999 - X
               JOB ABORTED',                                           X
               ROUTCDE=(2,11)
         ABEND 0001,DUMP           ABEND THE PROGRAM
ERROR02  MVC   COMDATA+4+72(8),=CL8' ERROR  ' SET ERROR MSG
         WTO   MF=(E,COMDATA)      ECHO THE COMMAND ON THE CONSOLE
         WTO   'CMD002E THE REPLY CONTROL COMMAND MUST HAVE 3 OPERANDS X
                - JOBNAME REPLYID AND RESPONSE - JOB ABORTED',         X
               ROUTCDE=(2,11)
         ABEND 0002,DUMP           ABEND THE PROGRAM
ERROR03  MVC   COMDATA+4+72(8),=CL8' ERROR  ' SET ERROR MSG
         WTO   MF=(E,COMDATA)      ECHO THE COMMAND ON THE CONSOLE
         WTO   'CMD003E THE REPLY CONTROL COMMAND HAS A JOBNAME LONGER X
               THAN 8 CHARACTERS - JOB ABORTED',                       X
               ROUTCDE=(2,11)
         ABEND 0003,DUMP           ABEND THE PROGRAM
ERROR04  MVC   COMDATA+4+72(8),=CL8' ERROR  ' SET ERROR MSG
         WTO   MF=(E,COMDATA)      ECHO THE COMMAND ON THE CONSOLE
         WTO   'CMD004E THE REPLY CONTROL COMMAND REQUIRES EITHER A SPEX
               CIF JOBNAME OR MESSAGE ID - JOB ABORTED',               X
               ROUTCDE=(2,11)
         ABEND 0004,DUMP           ABEND THE PROGRAM
ERROR05  MVC   COMDATA+4+72(8),=CL8' ERROR  ' SET ERROR MSG
         WTO   MF=(E,COMDATA)      ECHO THE COMMAND ON THE CONSOLE
         WTO   'CMD005E THE STOPPED CONTROL COMMAND MUST SPECIFY A 1 TOX
               8 CHARACTER JOB OR TASK NAME - JOB ABORTED',            X
               ROUTCDE=(2,11)
         ABEND 0005,DUMP           ABEND THE PROGRAM
ERROR06  MVC   COMDATA+4+72(8),=CL8' ERROR  ' SET ERROR MSG
         WTO   MF=(E,COMDATA)      ECHO THE COMMAND ON THE CONSOLE
         WTO   'CMD006E THE STARTED CONTROL COMMAND MUST SPECIFY A 1 TOX
                8 CHARACTER JOB OR TASK NAME - JOB ABORTED',           X
               ROUTCDE=(2,11)
         ABEND 0006,DUMP           ABEND THE PROGRAM
ERROR07  MVC   COMDATA+4+72(8),=CL8' ERROR  ' SET ERROR MSG
         WTO   MF=(E,COMDATA)      ECHO THE COMMAND ON THE CONSOLE
         WTO   'CMD007E ANOTHER IF STATEMENT WAS FOUND WHILE PROCESSINGX
                A PRIOR ONE - NESTED IF STATEMENTS ARE NOT ALLOWED - JOX
               B ABORTED',                                             X
               ROUTCDE=(2,11)
         ABEND 0007,DUMP           ABEND THE PROGRAM
ERROR08  MVC   COMDATA+4+72(8),=CL8' ERROR  ' SET ERROR MSG
         WTO   MF=(E,COMDATA)      ECHO THE COMMAND ON THE CONSOLE
         WTO   'CMD008E THE IFSTARTED CONTROL COMMAND MUST SPECIFY A 1 X
               TO 8 CHARACTER JOB OR TASK NAME - JOB ABORTED',         X
               ROUTCDE=(2,11)
         ABEND 0008,DUMP           ABEND THE PROGRAM
ERROR09  MVC   COMDATA+4+72(8),=CL8' ERROR  ' SET ERROR MSG
         WTO   MF=(E,COMDATA)      ECHO THE COMMAND ON THE CONSOLE
         WTO   'CMD009E THE IFSTOPPED CONTROL COMMAND MUST SPECIFY A 1 X
               TO 8 CHARACTER JOB OR TASK NAME - JOB ABORTED',         X
               ROUTCDE=(2,11)
         ABEND 0009,DUMP           ABEND THE PROGRAM
ERROR10  MVC   COMDATA+4+72(8),=CL8' ERROR  ' SET ERROR MSG
         WTO   MF=(E,COMDATA)      ECHO THE COMMAND ON THE CONSOLE
         WTO   'CMD010E THE ONLINE OR OFFLINE CONTROL COMMAND MUST CONTX
               AIN A UNIT OR VOLSER SPECIFICATION - JOB ABORTED',      X
               ROUTCDE=(2,11)
         ABEND 0010,DUMP           ABEND THE PROGRAM
ERROR11  MVC   COMDATA+4+72(8),=CL8' ERROR  ' SET ERROR MSG
         WTO   MF=(E,COMDATA)      ECHO THE COMMAND ON THE CONSOLE
         WTO   'CMD011E THE ONLINE OR OFFLINE CONTROL COMMAND MUST CONTX
               AIN AN OPERAND THAT STARTS WITH ''A='' OR ''V='' - JOB AX
               BORTED',                                                X
               ROUTCDE=(2,11)
         ABEND 0011,DUMP           ABEND THE PROGRAM
ERROR12  MVC   COMDATA+4+72(8),=CL8' ERROR  ' SET ERROR MSG
         WTO   MF=(E,COMDATA)      ECHO THE COMMAND ON THE CONSOLE
         WTO   'CMD012E THE ONLINE OR OFFLINE CONTROL COMMAND CONTAINS X
               A NULL VALUE AFTER THE ''A='' OR ''V='' IDENTIFIER - JOBX
                ABORTED',                                              X
               ROUTCDE=(2,11)
         ABEND 0012,DUMP           ABEND THE PROGRAM
ERROR13  MVC   COMDATA+4+72(8),=CL8' ERROR  ' SET ERROR MSG
         WTO   MF=(E,COMDATA)      ECHO THE COMMAND ON THE CONSOLE
         WTO   'CMD013E THE ONLINE OR OFFLINE CONTROL COMMAND CONTAINS X
               AN ADDRESS VALUE LONGER THAN 4 CHARACTETRS - JOB ABORTEDX
               ',                                                      X
               ROUTCDE=(2,11)
         ABEND 0013,DUMP           ABEND THE PROGRAM
ERROR14  MVC   COMDATA+4+72(8),=CL8' ERROR  ' SET ERROR MSG
         WTO   MF=(E,COMDATA)      ECHO THE COMMAND ON THE CONSOLE
         WTO   'CMD014E THE ONLINE OR OFFLINE CONTROL COMMAND CONTAINS X
               AN ADDRESS VALUE WITH ILLEGAL CHARACTERS - JOB ABORTED',X
               ROUTCDE=(2,11)
         ABEND 0014,DUMP           ABEND THE PROGRAM
ERROR15  MVC   COMDATA+4+72(8),=CL8' ERROR  ' SET ERROR MSG
         WTO   MF=(E,COMDATA)      ECHO THE COMMAND ON THE CONSOLE
         WTO   'CMD015E THE ONLINE OR OFFLINE CONTROL COMMAND CONTAINS X
               A VOLSER LONGER THAN 6 CHARACTERS - JOB ABORTED',       X
               ROUTCDE=(2,11)
         ABEND 0015,DUMP           ABEND THE PROGRAM
         EJECT
***********************************************************************
*                                                                     *
*        CONSTANTS AND WORK AREAS.                                    *
*                                                                     *
***********************************************************************
         SPACE 3
         LTORG
         SPACE 3
SAVEAREA DS    18F                 REGISTER SAVE AREA
SAVESRCH DS    16F                 SAVE AREA FOR JOBSRCH ROUTINE
SAVEPAV  DS    16F                 SAVE AREA FOR PARSAV  ROUTINE
SAVEDCM  DS    16F                 SAVE AREA FOR DOCMD   ROUTINE
SAVEALIG DS    16F                 SAVE AREA FOR LEFTAL  ROUTINE
SEC15    DC    A(15*100)           15 SECOND BINARY WAIT INTERVAL
TIOTADDR DS    F                   EXTRACT ANSWER AREA
GETADDR  DS    F                   ADDRESS OF OUTSTANDING REPLY TABLE
REPLYWK  DC    CL80' '             REPLY COMMAND WORK AREA
BLANKS   DC    CL80' '             STRING OF BLANKS
PARMS    DS    0F                  REPLY PARM PARSE LIST
JOBN     DS    F                   ADDRESS OF JOB NAME
JOBNL    DS    F                   LENGTH OF JOB NAME
MATCH    DS    F                   ADDRESS OF REPLY TEXT TO MATCH
MATCHL   DS    F                   LENGTH OF REPLY TEXT TO MATCH
REPLYTX  DS    F                   ADDRESS OF ACTUAL REPLY TEXT
REPLYTXL DS    F                   LENGTH OF ACTUAL REPLY TEXT
WTOMSGID DC    F'0'                WTO MESSAGE ID FOR DOM PROCESSING
DELIM    DC    C' '                TEXT SCAN DELIMETER
MYNAME   DS    CL8                 NAME OF THIS JOB OR TASK
JOBNAME  DS    CL8                 JOBNAME FOR REPLY SEARCH
SRCHNAME DS    CL8                 JOB/TASK NAME FROM ASCB
VOLSER   DS    CL6                 VOLSER    FROM AN ONLINE/OFFLINE CMD
UNITADD  DS    CL4                 UNIT ADDR FROM AN ONLINE/OFFLINE CMD
USECNT   DS    F                   NUMBER OF USERS OF SPECIFIED VOLUME
SCANWORK DS    CL100               IOSVSUCB SCAN WORK AREA
UCBAREA  DS    CL48                COPY OF UCB
DEVADDR  DS    CL4                 4 DIGIT DEVICE NUMBER
MISCSW   DC    X'00'               MISCELLANEOUS BIT SWITCHES
IFBYPASS EQU   X'80'               BYPASS COMMANDS BECAUSE OF IF CMD
IFPROC   EQU   X'40'               IF CONDITION BEING PROCESSED
SEARCHV  EQU   X'20'               SEARCHING FOR VOLSER
SEARCHA  EQU   X'10'               SEARCHING FOR ADDRESS
COMDATA  DS    0F
         DC    X'00'
         DC    AL1(84)
         DC    X'0000'
         DC    C'123456789 123456789 123456789 123456789 123456789 1234X
               56789 123456789 12          '
COMMND   DS    0F
         DC    AL2(82)
         DC    CL82' '
CONSID   DC    F'0'                MGCRE CONSOLE ID OF ZERO
MGCREEX  MGCRE MF=L
COMWORK  DS    CL80                COMMAND WORK AREA
DOUBLE1  DS    D                   DOUBLE WORK WORK AREA
WAITIME  DS    F                   DELAY TIME IN 1/100 SECONDS
         UCBSCAN MF=(L,UCBSCN)     UCBSCAN LIST FORM
FACILITY DC    CL8'FACILITY'       RACROUTE CLASS NAME
RESOURCE DC    CL44'COMMAND'       RACROUTE RESOURCE NAME
RACROUTE RACROUTE REQUEST=FASTAUTH,MF=L RACROUTE LIST FORM
RACWORK  DS    CL512               RACROUTE WORK AREA 1
FRACWORK DS    16F                 RACROUTE WORK AREA 2
*        PRINT NOGEN
IEFRDER  DCB   DDNAME=IEFRDER,DSORG=PS,MACRF=GL,EODAD=EOF
         DROP  R10,R11,R12         DROP PROGRAM ADDRESSABILITY
         EJECT
***********************************************************************
*                                                                     *
*                           R E P L Y                                 *
*                                                                     *
*        RETURN A LIST OF THE OUTSTANDING REPLIES IN A TABLE          *
*        POINTED TO BY REGISTER 1 ON ENTRY.  THERE IS ROOM FOR        *
*        100 OUTSTANDING REPLIES IN THE TABLE.  AN ENTRY WHICH        *
*        STARTS WITH X'FF' WILL FLAG THE END OF THE REPLIES.          *
*                                                                     *
*        BECAUSE SOME OF THE STORAGE AREAS ARE ABOVE THE 16           *
*        MEG LINE, THE ROUTINE WILL SWITCH TO AMODE31 IN THE          *
*        BEGINNING AND SWITCH BACK TO AMODE 24 WHEN FINISHED.         *
*                                                                     *
*                                                                     *
*                                                                     *
*        REGISTERS ON ENTRY                                           *
*           R1  - ADDRESS OF THE REPLY TABLE                          *
*           R13 - ADDRESS OF A SAVE AREA                              *
*           R15 - ENTRY POINT ADDRESS                                 *
*                                                                     *
*        REGISTERS ON ENTRY                                           *
*           SAME AS ON ENTRY                                          *
*                                                                     *
***********************************************************************
REPLY    CSECT
         SAVE  (14,12)             SAVE REGISTERS
         LR    R12,R15             INITIALIZE FIRST BASE REGISTER
         USING REPLY,R12           SET PROGRAM ADDRESSABILITY
         LR    R15,R13             SAVE CALLING'S SAVE AREA ADDR
         LA    R13,REPSAVE         LOAD ADDR OF NEW SAVE AREA
         ST    R13,8(R15)          STORE NEW SAVE ADDR IN OLD
         ST    R15,4(R13)          STORE OLD SAVE ADDR IN NEW
         LA    R15,*+10            SET BRANCH ADDRESS
         O     R15,=X'80000000'    SET AMODE31 BIT ON
         BASSM R14,R15             GO TO AMODE 31
***********************************************************************
*                                                                     *
*        FLAG END OF REPLY TABLE                                      *
*                                                                     *
***********************************************************************
         MVI   0(R1),X'FF'         SET END OF TABLE INDICATOR
         ST    R1,TBLADDR          SAVE REPLY TABLE ADDRESS
***********************************************************************
*                                                                     *
*        DETERMINE THE ASID NUMBER OF THE CONSOLE ADDRESS SPACE       *
*                                                                     *
***********************************************************************
REPLY01  L     R4,16               R4 = ADDR OF CVT
         USING CVT,R4              SET ADDRESSABILITY TO CVT
         L     R5,CVTASVT          POINT TO ADDRESS SPACE VECTOR TABLE.
         USING ASVT,R5             SET ADDRESSABILITY TO ASVT
         L     R4,ASVTMAXU         LOAD MAX. NUMBER OF ADDRESS SPACES.
         LA    R2,1                SET ADDRESS SPACE NUMBER TO ONE
         LA    R5,ASVTENTY         LOAD ADDRESS OF FIRST ASCB POINTER
REPLY02  ICM   R6,B'1111',0(R5)    POINT TO ASCB
         BNP   REPLY03             ZERO OR NEGATIVE, BYPASS THIS ONE
         USING ASCB,R6             SET ADDRESSABILITY TO ASCB
         ICM   R15,B'1111',ASCBJBNS LOAD ADDRESS OF JOBNAME FIELD.
         BZ    REPLY03             ZERO, BYPASS THIS ONE
         CLC   0(8,R15),=C'CONSOLE ' IS THIS THE CONSOLE ADDRESS SPACE?
         BE    REPLY04             YES, EXIT FROM LOOP.
REPLY03  LA    R2,1(R2)            ADD 1 TO THE ASID
         LA    R5,4(R5)            POINT TO NEXT ASCB POINTER.
         BCT   R4,REPLY02          LOOP
         B     REPLY13             ERROR, GET OUT
REPLY04  ST    R2,CONSASID         SAVE ASID OF CONSOLE ADDRESS SPACE.
         DROP  R4                  DROP ADDRESSABILITY TO CVT
         DROP  R5                  DROP ADDRESSABILITY TO ASVT
         DROP  R6                  DROP ADDRESSABILITY TO ASCB
         EJECT
***********************************************************************
*                                                                     *
*        SET UP CROSS MEMORY SERVICES                                 *
*                                                                     *
***********************************************************************
REPLY05  L     R10,TBLADDR         GET START OF REPLY TABLE
         USING MSGDSECT,R10        SET ADDRESSABILITY TO REPLY ENTRY
         SLR   R7,R7               SET MESSAGE COUNT TO ZERO
         MODESET MODE=SUP,KEY=ZERO AUTHORIZE OURSELVES
         ESAR  R9                  GET SECONDARY ASID
         ST    R9,SASID            AND SAVE IT
         AXSET AX=ONE              SET AX TO ALLOW SSAR
         L     R9,CONSASID         GET 'CONSOLE' ASID
         SSAR  R9                  SET 'CONSOLE' AS SECONDARY ASID
***********************************************************************
*                                                                     *
*        GET THE CMS LOCK SO THAT THE OUTSTANDING REPLY               *
*        ELEMENT (ORE) CHAIN WILL NOT BE ALTERED DURING               *
*        OUR PROCESSING.                                              *
*                                                                     *
***********************************************************************
REPLY06  AL    R13,=F'12'          CHANGE R13 FOR SETLOCK
         SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,REGS=SAVE
         SETLOCK OBTAIN,TYPE=CMS,MODE=UNCOND,REGS=SAVE
         SL    R13,=F'12'          PUT R13 BACK TO NORMAL
***********************************************************************
*                                                                     *
*          GET THE ADDRESS OF THE FIRST OUTSTANDING REPLY             *
*          ELEMENT (ORE)                                              *
*                                                                     *
***********************************************************************
REPLY07  L     R4,16               R4 = ADDR OF CVT
         USING CVT,R4              SET ADDRESSABILITY TO CVT
         L     R4,CVTCUCB          R4 = ADDR OF 'CUCB' (UCM BASE)
         DROP  R4                  DROP ADDRESSABILITY TO CVT
         USING UCM,R4              SET ADDRESSABILITY TO UCM BASE
         L     R2,UCMRPYQ          LOAD ADDRESS OF FIRST ORE
         LTR   R2,R2               TEST ORE ADDRESS
         BZ    REPLY12             ZERO, NO OUTSTANDING REPLIES
         DROP  R4                  DROP ADDRESSABILITY TO UCM BASE
         USING OREF,R2             SET ADDRESSABILITY TO ORE
***********************************************************************
*                                                                     *
*          COPY THE WTO QUEUE ELEMENT (WQE) FROM THE CONSOLE          *
*          ADDRESS SPACE FOR THE CURRENT ORE                          *
*                                                                     *
***********************************************************************
REPLY08  L     R8,ORERWQE          R8 = ADDR OF WQE
         LA    R4,WQECOPY          R4 = ADDR OF COPY OF WQE
         LA    R5,WQESIZE          R5 = SET LENGTH OF WQE
         SLR   R15,R15             SET 'FROM' KEY TO ZERO
REPLY09  MVCP  0(R5,R4),0(R8),R15  MOVE UP TO 256 BYTES
         BZ    REPLY10             CC=0 - DONE
         LA    R4,256(,R4)         INCREMENT 'TO' ADDRESS
         LA    R8,256(,R8)         INCREMENT 'FROM' ADDRESS
         SH    R5,=H'256'          SUBTRACT LENGTH OF LAST MOVE
         B     REPLY09             GO GET REST OF AREA
REPLY10  LA    R4,WQECOPY          RESTORE ADDRESS OF COPY OF WQE
         USING WQE,R4              SET ADDRESSABILITY TO WQE
***********************************************************************
*                                                                     *
*          SAVE THE REPLY JOBNAME, MSGID, AND ACTUAL MESSAGE          *
*          FROM THE WQE                                               *
*                                                                     *
***********************************************************************
REPLY11  MVI   MSGENT,C' '         BLANK THE ENTIRE
         MVC   MSGENT+1(L'MSGENT-1),MSGENT   MESSAGE AREA
         MVC   JNAME,WQEOJBNM      SAVE JOB NAME
         L     R15,WQERPYIB        LOAD THE REPLYID
         CVD   R15,DOUBLE2         CONVERT REPLYID TO PACKED
         OI    DOUBLE2+7,X'0F'     CLEAR SIGN
         UNPK  RID,DOUBLE2         UNPACK REPLYID
         MVC   MSG,WQETXT          SAVE MESSAGE TEXT
         LA    R10,L'MSGENT(,R10)  INCREMENT TO NEXT MESSAGE AREA
         MVI   0(R10),X'FF'        SET END OF TABLE INDICATOR
         LA    R7,1(,R7)           ADD 1 TO MESSAGE COUNT
         CH    R7,=H'100'          SEE IF REACHED MAXIMUM
         BNL   REPLY12             YES, GET OUT
         L     R2,ORELKP           LOAD ADDRESS OF NEXT ORE
         LTR   R2,R2               SEE IF ANY MORE ORE'S
         BNZ   REPLY08             YES, LOOP
         DROP  R2                  DROP ADDRESSABILITY TO ORE
         DROP  R4                  DROP ADDRESSABILITY TO WQE
         DROP  R10                 DROP ADDRESSABILITY TO REPLY TABLE
***********************************************************************
*                                                                     *
*        FREE THE CMS LOCK SO THAT NORMAL CONSOLE MESSAGE             *
*        PROCESSING CAN CONTINUE                                      *
*                                                                     *
***********************************************************************
REPLY12  AL    R13,=F'12'          CHANGE R13 FOR SETLOCK
         SETLOCK RELEASE,TYPE=CMS,REGS=SAVE
         SETLOCK RELEASE,TYPE=LOCAL,REGS=SAVE
         SL    R13,=F'12'          PUT R13 BACK TO NORMAL
***********************************************************************
*                                                                     *
*        GET OUT OF CROSS MEMORY MODE                                 *
*                                                                     *
***********************************************************************
         L     R9,SASID            RESTORE PREVIOUS SECONDARY ASID
         SSAR  R9                  SHOULD BE SAME AS PRIMARY
         AXSET AX=ZERO             SET AUTHORIZATION INDEX BACK TO ZERO
         MODESET MODE=PROB,KEY=NZERO UNAUTHORIZE OURSELVES
***********************************************************************
*                                                                     *
*        RETURN TO THE CALLER                                         *
*                                                                     *
***********************************************************************
         SPACE 3
REPLY13  LA    R15,*+6             SET BRANCH ADDRESS
         BASSM R14,R15             GO TO AMODE 24
         L     R13,4(R13)          RESTORE ORIG SAVE AREA ADDRESS
         RETURN (14,12)            RETURN TO CALLER
         EJECT
***********************************************************************
*                                                                     *
*                         C O N S T A N T S                           *
*                                                                     *
***********************************************************************
         LTORG
REPSAVE  DS    18F                 PROGRAM SAVE AREA
DOUBLE2  DS    D                   DOUBLE WORK WORK AREA
CONSASID DC    F'0'                ASID OF CONSOLE ADDRESS SPACE
TBLADDR  DS    F                   ADDRESS OF REPLY TABLE
SASID    DS    F                   SAVE PREVIOUS SECONDARY ASID
ONE      DC    H'1'                TO SET AX 1
ZERO     DC    H'0'                TO SET AX 0
         DS    0F
WQECOPY  DS    CL512               LOCAL COPY OF WQE
         EJECT
MSGDSECT DSECT
MSGENT   DS    0CL140
JNAME    DS    CL8
RID      DS    CL4
MSG      DS    CL128
         EJECT
         CVT   DSECT=YES
         EJECT
         IEECUCM DSECT=YES,FORMAT=NEW,LIST=YES
         EJECT
         IHAASVT DSECT=YES
         EJECT
         IHAASCB DSECT=YES
         EJECT
         IHAORE DSECT=YES
         EJECT
         IHAWQE DSECT=YES,FORMAT=OLD
         EJECT
         IHAPSA DSECT=YES,LIST=YES
         EJECT
TIOT     DSECT
         IEFTIOT1
UCB      DSECT
         IEFUCBOB LIST=YES
         END
