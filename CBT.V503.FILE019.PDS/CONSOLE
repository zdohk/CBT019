         TITLE 'CONS -- CONSOLE INTERFACE FOR TSO'
         PUNCH ' MODE AMODE(31),RMODE(24)'  REQUIRED DO NOT REMOVE
         PUNCH ' SETCODE AC(1) '            REQUIRED DO NOT REMOVE
***********************************************************************
*                                                                     *
*                             C O N S                                 *
*                                                                     *
*                    CONSOLE INTERFACE FOR TSO                        *
*                                                                     *
*                           VERSION 2.1                               *
*                                                                     *
*     THIS PROGRAM ALLOWS A TSO USER TO ACCESS THE CONTENTS OF        *
*     THE CONSOLE BUFFER FOR THE MASTER CONSOLE ON THE MVS            *
*     SYSTEM.  SECURITY CALLS WILL BE MADE WHICH MAY ALSO GRANT       *
*     THE USER THE AUTHORITY TO ISSUE SOME OR ALL OPERATOR            *
*     COMMANDS AS WELL.                                               *
*                                                                     *
*     THIS TSO COMMAND REQUIRES THAT THE SYSTEM IMAGE ON              *
*     WHICH IT IS EXECUTED HAVE A NON-SNA CONSOLE ACTIVE              *
*     ON THAT SYSTEM WITH MASTER CONSOLE AUTHORITY.                   *
*                                                                     *
*                                                                     *
*                         SPECIAL NOTE                                *
*                                                                     *
*        THIS UTILITY HAS BEEN TESTED ON Z/OS 1.8 RUNNING RACF        *
*        AND JES2.  IT SHOULD FUNCTION ON MOST OS/390 AND Z/OS        *
*        SYSTEMS - BOTH PAST AND FUTURE.  THE SECURITY INTERFACE      *
*        SHOULD BE COMPATIBLE WITH OTHER SECURITY PRODUCTS.           *
*                                                                     *
*                                                                     *
*                                                                     *
*     CALLERS OF THIS COMMAND WILL BE TESTED FOR ACCESS TO            *
*     SPECIAL RACF RESOURCES.  THEY ARE AS FOLLOWS:                   *
*                                                                     *
*     1)  CLASS "FACILITY" ENTITY "CONSOLE.FULL"                      *
*                                                                     *
*         READ ACCESS TO THIS RESOURCE GRANTS THE USER THE            *
*         AUTHORITY TO EXECUTE ANY CONSOLE COMMAND.  THE              *
*         SYSLOG WILL ECHO THE COMMAND AND THE USER WHO               *
*         ISSUED THE COMMAND.                                         *
*                                                                     *
*     2)  CLASS "FACILITY" ENTITY "CONSOLE.DBA"                       *
*                                                                     *
*         READ ACCESS TO THIS RESOURCE GRANTS THE USER THE            *
*         AUTHORITY TO EXECUTE JES2 $D COMMANDS, MVS DISPLAY          *
*         COMMANDS AND A SERIES OF COMMANDS WHICH CONTROL             *
*         ADABASE, EDASERVE, AND DB2.  THE LIST OF VALID              *
*         COMMANDS ARE AT LABEL CMDDBA.                               *
*                                                                     *
*     3)  CLASS "FACILITY" ENTITY "CONSOLE.SECURITY"                  *
*                                                                     *
*         READ ACCESS TO THIS RESOURCE GRANTS THE USER THE            *
*         AUTHORITY TO EXECUTE JES2 $D COMMANDS, MVS DISPLAY          *
*         COMMANDS AND THE MODIFY COMMAND TO CICS THAT WILL           *
*         ALLOW THEM TO DO NEWCOPIES SINCE THEY PERFORM THE           *
*         PRODUCTION PRODINS.                                         *
*                                                                     *
*     4)  CLASS "FACILITY" ENTITY "CONSOLE.DISPLAY"                   *
*                                                                     *
*         READ ACCESS TO THIS RESOURCE GRANTS THE USER THE            *
*         AUTHORITY TO EXECUTE JES2 $D COMMANDS AND MVS               *
*         DISPLAY COMMANDS.  THE LIST OF VALID COMMANDS               *
*         ARE AT LABEL CMDDISP.                                       *
*                                                                     *
*     5)  IF THE USER IS NOT AUTHORIZED TO ANY OF THE PREVIOUS        *
*         RESOURCES, THEN THE USER CANNOT ISSUE ANY COMMANDS          *
*         EXCEPT THOSE WHICH CONTROL THE COMMAND EXECUTION SUCH       *
*         AS UP, DOWN, LEFT, RIGHT, OR END.                           *
*                                                                     *
*                                                                     *
*     COMMAND      DESCRIPTION                                        *
*                                                                     *
*        ?         DISPLAYS HELP FOR CONSOLE                          *
*        UP    NNN SCROLL UP WITHIN THE CURRENT LOGICAL SCREEN        *
*        DOWN  NNN SCROLL DOWN WITHIN THE CURRENT LOGICAL SCREEN      *
*        LEFT  NNN SCROLL LEFT WITHIN THE CURRENT LOGICAL SCREEN      *
*        RIGHT NNN SCROLL RIGHT WITHIN THE CURRENT LOGICAL SCREEN     *
*        END       END; END THE PROGRAM                               *
*        RECALL    RECALL LAST ENTERED COMMAND FOR UPDATE             *
*        CONSOLE=N RESET DISPLAY TO SPECIFIED CONSOLE NUMBER          *
*        Z         HALT: END THE PROGRAM                              *
*                                                                     *
*     THE SVC 34 COMMAND INTERFACE IS USED TO ISSUE COMMANDS FROM     *
*     TSO WHICH REQUIRES PROTECT KEY ZERO.  ALSO, THE CONSOLE         *
*     BUFFERS ARE NOW IN THE CONSOLE ADDRESS SPACE REQUIRING          *
*     THIS PROGRAM TO GO INTO PROTECT KEY ZERO AND CROSS-MEMORY       *
*     MODE TO ACCESS THEIR CONTENTS.  THIS REQUIRES THAT THIS         *
*     PROGRAM BE APF AUTHORIZED AND IN THE TSO AUTHORIZED             *
*     COMMANDS LIST.                                                  *
*                                                                     *
***********************************************************************
         SPACE 3
***********************************************************************
*                                                                     *
*        L I N K A G E    E D I T O R    I N F O R M A T I O N        *
*                                                                     *
*        SIZE - 15K                                                   *
*        ATTR - NORENT, NOREUS, NOREFR, AMODE31, RMODE24,AC=1         *
*                                                                     *
*                                                                     *
*                                                                     *
*        WRITTEN BY:   JOHN V. HOOPER                                 *
*                      SALISBURY, N.C.                                *
*                                                                     *
*        SUPPORT   :   SBGOLOB@CBTTAPE.ORG                            *
*                                                                     *
***********************************************************************
       EJECT
***********************************************************************
*                                                                     *
*                        C H A N G E    L O G                         *
*                                                                     *
*      VERSION 2.0  09/12/2007                                        *
*                                                                     *
*           1)  UPDATED TO BE COMPATIBLE WITH Z/OS 1.11               *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*                        M A C R O S    U S E D                       *
*                                                                     *
*                                                                     *
*        01)  ABEND        SYS1.MACLIB                                *
*        02)  AXSET        SYS1.MACLIB                                *
*        03)  CVT          SYS1.MACLIB                                *
*        04)  FREEMAIN     SYS1.MACLIB                                *
*        05)  GETMAIN      SYS1.MACLIB                                *
*        06)  GTSIZE       SYS1.MACLIB                                *
*        07)  IEECDCM      SYS1.MODGEN                                *
*        08)  IEECUCM      SYS1.MODGEN                                *
*        09)  IEFUCBOB     SYS1.MACLIB                                *
*        10)  IHAASCB      SYS1.MACLIB                                *
*        11)  IHAASVT      SYS1.MODGEN                                *
*        12)  MGCRE        SYS1.MACLIB                                *
*        13)  MODESET      SYS1.MACLIB                                *
*        14)  RACROUTE     SYS1.MACLIB                                *
*        15)  RETURN       SYS1.MACLIB                                *
*        16)  SAVE         SYS1.MACLIB                                *
*        17)  STAX         SYS1.MACLIB                                *
*        18)  STFSMODE     SYS1.MACLIB                                *
*        19)  STSIZE       SYS1.MACLIB                                *
*        20)  SYSEVENT     SYS1.MACLIB                                *
*        21)  TGET         SYS1.MACLIB                                *
*        22)  TPUT         SYS1.MACLIB                                *
*        23)  UCBDEVN      SYS1.MACLIB                                *
*                                                                     *
*                                                                     *
***********************************************************************
         SPACE 4
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         EJECT
CONS     CSECT
CONS     AMODE 31
         SAVE  (14,12),,CONS.&SYSDATE..&SYSTIME
         LR    R12,R15             R12 = ADDR OF ENTRY POINT
         USING CONS,R12,R11,R10    ADDRESABILITY TO CSECT
         LA    R11,4095(R12)       R11 WILL BE
         LA    R11,1(R11)          SECOND BASE REGISTER
         LA    R10,4095(R11)       R10 WILL BE
         LA    R10,1(R10)          THIRD BASE REGISTER
         LA    R15,SAVE            R2 = ADDR OF OUR SAVE AREA
         ST    R13,SAVE+4          SAVE POINTER TO CALLERS SAVE AREA
         ST    R15,8(R13)          SAVE PTR TO OUR SAVE IN CALLER'S
         LR    R13,R15             R13 = ADDR OF OUR SAVE AREA
         SPACE 3
***********************************************************************
*                                                                     *
*                       PROGRAM INITIALIZATION                        *
*                                                                     *
***********************************************************************
         SPACE 3
***********************************************************************
*                                                                     *
*        DETERMINE THE ASID NUMBER OF THE CONSOLE ADDRESS SPACE       *
*                                                                     *
***********************************************************************
GTASID01 L     R4,16               R4 = ADDR OF CVT
         USING CVT,R4              SET ADDRESSABILITY TO CVT
         L     R5,CVTASVT          POINT TO ADDRESS SPACE VECTOR TABLE.
         USING ASVT,R5             SET ADDRESSABILITY TO ASVT
         L     R4,ASVTMAXU         LOAD MAX. NUMBER OF ADDRESS SPACES.
         SLR   R2,R2               SET ADDRESS SPACE NUMBER TO ZERO
         LA    R5,ASVTFRST         LOAD ADDRESS OF FIRST ASCB POINTER
GTASID02 L     R6,0(R5)            POINT TO ASCB
         LTR   R6,R6               TEST ASCB ADDRESS
         BNP   GTASID03            ZERO OR NEGATIVE, BYPASS THIS ONE
         USING ASCB,R6             SET ADDRESSABILITY TO ASCB
         ICM   R15,B'1111',ASCBJBNS LOAD ADDRESS OF JOBNAME FIELD.
         BZ    GTASID03            ZERO, BYPASS THIS ONE
         CLC   0(8,R15),=C'CONSOLE ' IS THIS THE CONSOLE ADDRESS SPACE?
         BE    GTASID04            YES, EXIT FROM LOOP.
GTASID03 LA    R2,1(R2)            ADD 1 TO THE ASID
         LA    R5,4(R5)            POINT TO NEXT ASCB POINTER.
         BCT   R4,GTASID02         LOOP
         TPUT  ERRMSG11,26         WRITE ERROR MSG
         B     EXIT                ERROR, GET OUT
GTASID04 ST    R2,CONASID          SAVE ASID OF CONSOLE ADDRESS SPACE.
         DROP  R4                  DROP ADDRESSABILITY TO CVT
         DROP  R5                  DROP ADDRESSABILITY TO ASVT
         DROP  R6                  DROP ADDRESSABILITY TO ASCB
         EJECT
***********************************************************************
*                                                                     *
*  CHECK THE AUTHORITY OF THE USER TO SAF CLASS "FACILITY' FOR        *
*  ENTITY "CONS".     NOTE THAT FASTAUTH IS USED.  TO AVOID THE       *
*  SITUATION WHERE SPECIAL ATTRIBUTES OF THE USER MAY ALLOW THE       *
*  ACCESS WITH LOGGING, A CHECK IS MADE FOR A NON-ZERO REASON         *
*  CODE.  THIS CONDITION WILL BE CONSIDERED A FAILURE.                *
*                                                                     *
***********************************************************************
TEST0    RACROUTE REQUEST=LIST,WORKA=RACWORK,CLASS=FACILITY,           X
               ENVIR=CREATE,                                           X
               GLOBAL=YES,                                             X
               RELEASE=2.2,                                            X
               MF=S
***********************************************************************
*        TEST CONSOLE.FULL                                            *
***********************************************************************
TEST1    MVC   RESOURCE,=CL44'CONSOLE.FULL'
         RACROUTE REQUEST=FASTAUTH,WORKA=RACWORK,WKAREA=FRACWORK,      X
               ENTITY=RESOURCE,CLASS=FACILITY,ATTR=READ,               X
               MF=(E,RACROUTE)
         LTR   R15,R15             TEST THE RETURN CODE
         BNZ   TEST2               NOT ZERO, NOT AUTHORIZED
         CLC   RACROUTE+4(4),=F'0' TEST THE REASON CODE
         BE    TESTOK              ZERO, FULLY AUTHORIZED
***********************************************************************
*        TEST CONSOLE.SECURITY                                        *
***********************************************************************
TEST2    MVC   RESOURCE,=CL44'CONSOLE.SECURITY'
         RACROUTE REQUEST=FASTAUTH,WORKA=RACWORK,WKAREA=FRACWORK,      X
               ENTITY=RESOURCE,CLASS=FACILITY,ATTR=READ,               X
               MF=(E,RACROUTE)
         LTR   R15,R15             TEST THE RETURN CODE
         BNZ   TEST3               NOT ZERO, NOT AUTHORIZED
         CLC   RACROUTE+4(4),=F'0' TEST THE REASON CODE
         BE    TESTOK              ZERO, FULLY AUTHORIZED
***********************************************************************
*        TEST CONSOLE.DBA                                             *
***********************************************************************
TEST3    MVC   RESOURCE,=CL44'CONSOLE.DBA'
         RACROUTE REQUEST=FASTAUTH,WORKA=RACWORK,WKAREA=FRACWORK,      X
               ENTITY=RESOURCE,CLASS=FACILITY,ATTR=READ,               X
               MF=(E,RACROUTE)
         LTR   R15,R15             TEST THE RETURN CODE
         BNZ   TEST4               NOT ZERO, NOT AUTHORIZED
         CLC   RACROUTE+4(4),=F'0' TEST THE REASON CODE
         BE    TESTOK              ZERO, FULLY AUTHORIZED
***********************************************************************
*        TEST CONSOLE.DISPLAY                                         *
***********************************************************************
TEST4    MVC   RESOURCE,=CL44'CONSOLE.DISPLAY'
         RACROUTE REQUEST=FASTAUTH,WORKA=RACWORK,WKAREA=FRACWORK,      X
               ENTITY=RESOURCE,CLASS=FACILITY,ATTR=READ,               X
               MF=(E,RACROUTE)
         LTR   R15,R15             TEST THE RETURN CODE
         BNZ   TEST5               NOT ZERO, NOT AUTHORIZED
         CLC   RACROUTE+4(4),=F'0' TEST THE REASON CODE
         BE    TESTOK              ZERO, FULLY AUTHORIZED
***********************************************************************
*        NO AUTHORITY                                                 *
***********************************************************************
TEST5    DS    0H
TESTFAIL MVC   RESOURCE,=CL44' '
***********************************************************************
*        CLEANUP AFTER RACROUTE                                       *
***********************************************************************
TESTOK   RACROUTE REQUEST=LIST,WORKA=RACWORK,CLASS=FACILITY,           X
               ENVIR=DELETE,                                           X
               RELEASE=2.2,                                            X
               MF=S
TESTEND  DS    0H
         EJECT
***********************************************************************
*                                                                     *
*        TEST THE SIZE OF THE TERMINAL FROM WHICH THE COMMAND WAS     *
*        ISSUED.  THIS INFORMATION WILL BE SAVED TO RESET THE         *
*        TERMINAL ATTRIBUTES UPON EXIT.  THIS CODE ASSUMES THAT       *
*        THE TERMINAL IS A 3278-4 OR A 3278-5 TERMINAL WITH TWO       *
*        MODES OF OPERATION.  IF THE TERMINAL IS A CRT, ONE OF        *
*        THE AVAILABLE MODES OF OPERATION MUST BE 24 X 80.            *
*                                                                     *
***********************************************************************
         STFSMODE ON,INITIAL=YES   TURN ON VTAM FULL SCREEN MODE
         GTSIZE
         ST    R0,LPSCREEN         R0 = LINES PER SCREEN
         ST    R1,CPLINE           R1 = CHARACTERS PER LINE
         LTR   R0,R0               R0 = NUMBER OF LINES PER SCREEN
         BZ    NOCRT               ZERO MEANS HARDCOPY
         GTTERM PRMSZE=PRMSIZE,ALTSZE=ALTSIZE
         CLC   PRMSIZE,STDSIZE     SEE IF 24 X 80 ALLOWED
         BE    SETSIZE             YES, GO SET SIZE
         CLC   ALTSIZE,STDSIZE     SEE IF 24 X 80 ALLOWED
         BE    SETSIZE             YES, GO SET SIZE
         TPUT  ERRMSG8,26          WRITE ERROR MSG
         ABEND 001,DUMP            NEITHER SIZE IS 24 X 80
SETSIZE  STSIZE LINE=24,SIZE=80    SET STD SIZE
         B     PSWDOK              GO GET PASSWORD
NOCRT    TPUT  NOCRTMSG,79         WRITE ERROR MESSAGE
         B     EXITQ               GET OUT
         EJECT
***********************************************************************
*                                                                     *
*  GETMAIN SAVE AREA FOR CONSOLE BUFFERS                              *
*                                                                     *
***********************************************************************
PSWDOK   GETMAIN R,LV=4096,SP=0    GET 4K BUFFER SAVE AREA
         ST    R1,BUFADDR          SAVE GETMAIN ADDRESS
         GETMAIN R,LV=6144,SP=0    GET 6K SCREEN IMAGE AREA
         ST    R1,SCRADDR          SAVE GETMAIN ADDRESS
         GETMAIN R,LV=4096,SP=0    GET 4K TPUT BUFFER
         ST    R1,TPUTADDR         SAVE GETMAIN ADDRESS
         MVC   0(HEADERL,R1),HEADER SET TPUT HEADER
         LA    R1,HEADERL(R1)      POINT PAST HEADER
         ST    R1,TPUTSTRT         SAVE START ADDRESS OF TPUT AREA
***********************************************************************
*                                                                     *
*  SETUP STAX FOR ATTENTION INTERRUPTIONS                             *
*                                                                     *
***********************************************************************
         LA    R3,STAXLIST         R3 = ADDRESS OF STAX LIST MACRO
         STAX  ATTNEXIT,USADDR=ATTNFLG,MF=(E,(3)) ATTN EXIT TRAP
***********************************************************************
*                                                                     *
*  SETUP CROSS MEMORY                                                 *
*                                                                     *
***********************************************************************
         MODESET MODE=SUP,KEY=ZERO AUTHORIZE OURSELVES
         ESAR  R9                  GET SECONDARY ASID
         ST    R9,SASID            AND SAVE IT
         AXSET AX=ONE              SET AX TO ALLOW SSAR
         MODESET MODE=PROB,KEY=NZERO UNAUTHORIZE OURSELVES
***********************************************************************
*                                                                     *
*          BUILD A TABLE OF ALL UCM ADDRESSES                         *
*                                                                     *
***********************************************************************
BLDUCMS  L     R4,16               R4 = ADDR OF CVT
         USING CVT,R4              SET ADDRESSABILITY TO CVT
         L     R4,CVTCUCB          R4 = ADDR OF 'CUCB' (UCM BASE)
         DROP  R4                  DROP ADDRESSABILITY TO CVT
         USING UCM,R4              SET ADDRESSABILITY TO UCM BASE
         L     R15,UCMBFEXT        LOAD ADDR OF UCM FIXED EXTEN BASE
         USING UCMFEXTA,R15        SET ADDRESSABILITY TO UCM FE BASE
         MVC   SYSNAME,UCMFSYNM    SAVE SYSTEM NAME
         DROP  R15                 DROP ADDRESSABILITY TO UCM FE BASE
         L     R5,UCMVEA           ADDRESS OF FIRST UCM ENTRY
         L     R6,UCMVEZ           LOAD LENGTH OF EACH UCM ENTRY
         L     R7,UCMVEL           ADDRESS OF LAST UCM ENTRY
         DROP  R4                  DROP ADDRESSABILITY TO UCM BASE
         USING UCMLIST,R5          SET ADDRESSABILITY TO UCM
         LA    R8,UCMTAB+4         LOAD ADDR OF 1ST UCM ADDR (REL 1)
         LA    R15,UCMTABC         LOAD NUMBER OF ENTRIES IN TABLE
UCMTBLP  SLR   R8,R8               ZERO REGISTER FOR IC
         IC    R8,UCMID            LOAD UCMID
         CR    R8,R15              SEE IF UCMID OUTSIDE OUR TABLE
         BH    UCMTBLP1            YES, IGNORE IT
         SLL   R8,2                MULTIPLY BY 4
         LA    R8,UCMTAB(R8)       POINT WITHIN TABLE
         ST    R5,0(R8)            SAVE UCM ADDRESS
UCMTBLP1 LA    R8,4(,R8)           INCREMENT TO NEXT UCMTAB ENTRY
         AR    R5,R6               INCREMENT TO NEXT UCM ENTRY
         CR    R5,R7               SEE IF END OF UCM ENTRIES
         BNH   UCMTBLP             NO, LOOP
UCMTDONE STH   R15,NUMUCMS         SAVE MAX NUMBER OF UCMS
         DROP  R5                  DROP ADDRESSABILITY TO UCM
         EJECT
***********************************************************************
*                                                                     *
*          FIND THE MASTER CONSOLE UCM AND DCM ADDRESS                *
*                                                                     *
***********************************************************************
FINDUCM  SLR   R5,R5               CLEAR REG FOR IC
         IC    R5,CNSLNUM          LOAD CONSOLE NUMBER
         CLI   CNSLNUM,C'M'        WAS MASTER REQUESTED?
         BE    UCMMAST             YES, BRANCH
         CLI   CNSLNUM,C'F'        WAS FIRST PSUEDO MASTER REQUESTED?
         BE    UCMMAST             YES, BRANCH
         SLR   R15,R15             ZERO REG FOR IC
         IC    R15,CNSLNUM         LOAD CONSOLE NUMBER
         CH    R15,NUMUCMS         SEE IF TOO HIGH
         BH    UCMERR6             YES, INVALID
         SLA   R15,2               MULTIPLY BY 4
         L     R4,UCMTAB(R15)      LOAD UCM ENTRY
         LTR   R4,R4               TEST ADDRESS
         BZ    UCMERR6             ZERO, NOT A CONSOLE
         USING UCMLIST,R4          SET ADDRESSABILITY TO UCM
FINDUCM1 CLI   UCMEDEVX,UCM32772   SEE IF 3277-2
         BE    FINDUCM2            YES, OK
         CLI   UCMEDEVX,UCM32782   SEE IF 3278-2
         BE    FINDUCM2            YES, OK
         CLI   UCMEDEVX,UCM3782A   SEE IF 3278-2A
         BE    FINDUCM2            YES, OK
         CLI   UCMEDEVX,UCM32783   SEE IF 3278-3
         BE    FINDUCM2            YES, OK
         CLI   UCMEDEVX,UCM32784   SEE IF 3278-4
         BE    FINDUCM2            YES, OK
         CLI   UCMEDEVX,UCM3792A   SEE IF 3279-2A
         BE    FINDUCM2            YES, OK
         CLI   UCMEDEVX,UCM3792B   SEE IF 3279-2B
         BE    FINDUCM2            YES, OK
         CLI   UCMEDEVX,UCM3793A   SEE IF 3279-3A
         BE    FINDUCM2            YES, OK
         CLI   UCMEDEVX,UCM3793B   SEE IF 3279-3B
         BE    FINDUCM2            YES, OK
         CLI   UCMEDEVX,UCM3792C   SEE IF 3279-2C
         BE    FINDUCM2            YES, OK
         CLI   UCMEDEVX,UCM2732E   SEE IF 27 X 132 DATASTREAM
         BE    FINDUCM2            YES, OK
         CLI   UCMEDEVX,UCM3180E   SEE IF 31 X  80 DATASTREAM
         BE    FINDUCM2            YES, OK
         CLI   UCMEDEVX,UCM4380E   SEE IF 43 X  80 DATASTREAM
         BE    FINDUCM2            YES, OK
         B     UCMERR7             NO, INVALID CONSOLE TYPE
FINDUCM2 CLC   UCMXB,=F'0'         SEE IF GRAPHICS CONSOLE
         BE    UCMERR7             NO, INVALID CONSOLE TYPE
FINDUCM3 TM    UCMATR,UCMUF        IS THE DEVICE ACTIVE?
         BNO   UCMERR5             NO, INVALID CONSOLE TYPE
         B     ACTIVE              YES, CONTINUE
UCMERR5  MVC   ERROR(26),ERRMSG5   SET INACTIVE CONSOLE MESSAGE
         MVI   CNSLNUM,C'M'        SET DEFAULT TO MASTER
         B     UCMMAST             GO SET TO MASTER
UCMERR6  MVC   ERROR(26),ERRMSG6   SET INVALID CONSOLE MESSAGE
         MVI   CNSLNUM,C'M'        SET DEFAULT TO MASTER
         B     UCMMAST             GO SET TO MASTER
UCMERR7  MVC   ERROR(26),ERRMSG12  SET INVALID CONSOLE TYPE
         MVI   CNSLNUM,C'M'        SET DEFAULT TO MASTER
UCMMAST  LA    R5,1                SET STARTING CONSOLE NUMBER
         LH    R15,NUMUCMS         LOAD NUMBER OF UCMS
         LA    R14,UCMTAB+4        LOAD ADDRESS OF UCM TABLE
UCMMLOOP ICM   R4,15,0(R14)        LOAD UCM ENTRY
         BZ    UCMMLOO4            ZERO, NOT A CRT
         CLI   UCMEDEVX,UCM32772   SEE IF 3277-2
         BE    UCMMLOO1            YES, OK
         CLI   UCMEDEVX,UCM32782   SEE IF 3278-2
         BE    UCMMLOO1            YES, OK
         CLI   UCMEDEVX,UCM3782A   SEE IF 3278-2A
         BE    UCMMLOO1            YES, OK
         CLI   UCMEDEVX,UCM32783   SEE IF 3278-3
         BE    UCMMLOO1            YES, OK
         CLI   UCMEDEVX,UCM32784   SEE IF 3278-4
         BE    UCMMLOO1            YES, OK
         CLI   UCMEDEVX,UCM3792A   SEE IF 3279-2A
         BE    UCMMLOO1            YES, OK
         CLI   UCMEDEVX,UCM3792B   SEE IF 3279-2B
         BE    UCMMLOO1            YES, OK
         CLI   UCMEDEVX,UCM3793A   SEE IF 3279-3A
         BE    UCMMLOO1            YES, OK
         CLI   UCMEDEVX,UCM3793B   SEE IF 3279-3B
         BE    UCMMLOO1            YES, OK
         CLI   UCMEDEVX,UCM3792C   SEE IF 3279-2C
         BE    UCMMLOO1            YES, OK
         CLI   UCMEDEVX,UCM2732E   SEE IF 27 X 132 DATASTREAM
         BE    UCMMLOO1            YES, OK
         CLI   UCMEDEVX,UCM3180E   SEE IF 31 X  80 DATASTREAM
         BE    UCMMLOO1            YES, OK
         CLI   UCMEDEVX,UCM4380E   SEE IF 43 X  80 DATASTREAM
         BE    UCMMLOO1            YES, OK
         B     UCMMLOO4            NO, SKIP THIS CONSOLE
UCMMLOO1 CLC   UCMXB,=F'0'         SEE IF GRAPHICS CONSOLE
         BE    UCMMLOO4            NO, SKIP THIS CONSOLE
         TM    UCMATR,UCMUF        IS THE DEVICE ACTIVE?
         BNO   UCMMLOO4            NO, LOOK FOR A VALID CONSOLE TYPE
UCMMLOO2 CLI   CNSLNUM,C'M'        SEE IF WANT MASTER ONLY
         BNE   UCMMLOO3            NO, MAKE ANOTHER CHECK
         TM    UCMDISP2,UCMDISPM   SEE IF FIRST PSEUDO MASTER CONSOLE
         BO    ACTIVE              YES, GO PROCESS IT
         B     UCMMLOO4            NO, BYPASS THIS CONSOLE
UCMMLOO3 CLI   CNSLNUM,C'F'        SEE IF WANT FIRST PSEUDO MASTER
         BNE   ACTIVE              NO, GO PROCESS THIS ONE
         TM    UCMDISP2,UCMDISPM   IS THIS A PSUEDO MASTER CONSOLE?
         BO    ACTIVE              YES, GO PROCESS IT
UCMMLOO4 LA    R14,4(,R14)         INCREMENT TO NEXT UCM TABLE ENTRY
         LA    R5,1(,R5)           ADD 1 TO CONSOLE NUMBER
         BCT   R15,UCMMLOOP        LOOP ON UCM TABLE ENTRIES
         CLI   CNSLNUM,C'M'        SEE IF WANT MASTER CONSOLE ONLY
         BE    UCMMLOO5            YES, BRANCH
         CLI   CNSLNUM,C'F'        SEE IF WANT FIRST PSEUDO MASTER
         BE    UCMMLOO6            YES, BRANCH
         TPUT  ERRMSG13,26         NO, WRITE NO VALID CONSOLE MESSAGE
         ABEND 002,DUMP            ABEND THE COMMAND
UCMMLOO5 MVI   CNSLNUM,C'F'        SET DEFAULT TO FIRST PSEUDO MASTER
         B     UCMMAST             GO SET TO MASTER
UCMMLOO6 MVC   ERROR(26),ERRMSG14  SET NO MASTER CONSOLE AUTH
         MVI   CNSLNUM,X'00'       SET DEFAULT TO FIRST VALID
         B     UCMMAST             GO SET TO MASTER
ACTIVE   ST    R4,CONFLG1          SAVE UCM ADDRESS
         STC   R5,CNSLNUM          STORE CONSOLE NUMBER
         DROP  R4                  DROP ADDRESSABILITY TO UCM
         SPACE 3
***********************************************************************
*                                                                     *
*              LOCATE SCREEN BUFFER AND PREPARE TO TPUT               *
*                                                                     *
*              OUTPUT LOOP RETURNS TO HERE TO HANDLE POSSIBLE         *
*              MASTER CONSOLE SWITCH                                  *
*                                                                     *
***********************************************************************
NEXTPAGE CLI   ATTNFLG,X'00'       WAS ATTN HIT?
         BE    NOATTN              NO
*                                  ATTENTION KEY HIT; PROCESS IT
         STFSMODE ON
         MVI   ATTNFLG,X'00'       YES, RESET FLAG
NOATTN   L     R5,CONFLG1          R5 = ADDR OF UCM
         USING UCMLIST,R5          SET ADDRESSABILITY TO UCM
         L     R6,UCMXB            R6 = ADDR OF RDCM
         LTR   R6,R6               IS THIS A GRAPHICS CONSOLE?
         BP    GRAPHICS            YES
         MVC   ERROR(26),ERRMSG4   NON-GRAPHIC CONSOLE
         B     DONE                GET OUT
         SPACE
GRAPHICS SLR   R15,R15             CLEAR REG FOR IC
         IC    R15,CNSLNUM         LOAD CONSOLE NUMBER
         CVD   R15,WORK            CONVERT TO PACKED
         OI    WORK+7,X'0F'        MAKE PRINTABLE
         UNPK  CONNUM,WORK+6(2)    UNPACK CONSOLE NUMBER
         L     R15,UCMFEXTP        LOAD ADDRESS OF UCME FIXED EXT
         USING UCMEFEXT,R15        SET ADDRESSABILITY TO UCME FE
         MVC   CONNAME,UCMEFCNM    SAVE CONSOLE NAME
         DROP  R15                 DROP ADDRESSABILITY TO UCME FE
AUTHDONE L     R7,UCMUCB           R7 = ADDR OF UCB
         USING UCB,R7              SET ADDRESSABILITY TO UCB
         UCBDEVN DEVN=UNIT         GET 4 DIGIT DEVICE NUMBER
         DROP  R7                  DROP ADDRESSABILITY TO UCB
         MODESET MODE=SUP,KEY=ZERO AUTHORIZE OURSELVES
         L     R9,CONASID          GET 'CONSOLE' ASID
         SSAR  R9                  SET 'CONSOLE' AS SECONDARY ASID
         LR    R8,R6               R8 = ADDR OF RDCM
         LA    R4,LORDCM           R4 = ADDR OF COPY OF RDCM
         LA    R5,4                R5 = WANT 1ST 4 BYTES ONLY
         SLR   R15,R15             SET 'FROM' KEY TO ZERO
         MVCP  0(R5,R4),0(R8),R15  MOVE IT
         L     R8,LORDCM           R8 = ADDR OF PAGEABLE DCM FROM RDCM
         LA    R4,LOCDCM           R4 = ADDR OF COPY OF PDCM
         LA    R5,L'LOCDCM         R5 = LENGTH OF PDCM
         SLR   R15,R15             SET 'FROM' KEY TO ZERO
MVLOOP   MVCP  0(R5,R4),0(R8),R15  MOVE IT
         BZ    MVDONE              FINISHED
         LA    R4,256(R4)          INCREMENT 'TO' ADDRESS
         LA    R8,256(R8)          INCREMENT 'FROM' ADDRESS
         SH    R5,=H'256'          DECREMENT LENGTH LEFT TO MOVE
         B     MVLOOP              MOVE NEXT 256 BYTES
MVDONE   L     R9,SASID            RESTORE PREVIOUS SECONDARY ASID
         SSAR  R9                  SHOULD BE SAME AS PRIMARY
         LA    R7,LOCDCM           R7 = ADDR OF COPY OF TDCM
         USING DCMSTRT,R7          SET ADDRESSABILITY TO PAGEABLE DCM
         SPACE
***********************************************************************
*                                                                     *
*                 FILLIN TRAILER AT BOTTOM OF SCREEN                  *
*                                                                     *
***********************************************************************
         MVC   LASTLINE(40),DCMINPUT   MOVE IN INPUT BUFFER LINE
         SPACE 1
***********************************************************************
*                                                                     *
*     SET UP TO COPY CONSOLE BUFFER TO OUR ADDRESS SPACE              *
*                                                                     *
***********************************************************************
MVBUFF   LH    R15,DCMMSGAL        LOAD NUMBER OF MESSAGE LINES
         STH   R15,NUMIN           SAVE NUMBER OF INPUT LINES
         LH    R15,DCMLGNTH        LOAD LENGTH OF MESSAGE TEXT
         STH   R15,LENTEXT         SAVE LENGTH OF INPUT TEXT
         LH    R15,DCMCORLN        LOAD LENGTH OF MESSAGE LINE
         STH   R15,LENLINE         SAVE LENGTH OF INPUT LINE
         SH    R15,LENTEXT         SUBTRACT LENGTH OF TEXT
         STH   R15,BUFINDEX        AND SAVE BUFFER INDEX AMOUNT
         LH    R15,LENLINE         LOAD LENGTH OF BUFFER LINE
         MH    R15,NUMIN           MULTIPLY BY NUMBER OF LINES
         STH   R15,MOVEL           SAVE LENGTH OF CONSOLE BUFFERS
         CH    R15,=H'4096'        SEE IF EXCEEDS MAXIMUM
         BNH   MVBUFF1             NO, OK
         MVC   ERROR(26),ERRMSG15  CONSOLE BUFFER TOO LARGE
         B     DONE                GET OUT
MVBUFF1  L     R9,CONASID          GET 'CONSOLE' ASID
         SSAR  R9                  SET 'CONSOLE' AS SECONDARY ASID
         L     R8,DCMASCRN         R8 = ADDR OF SCREEN BUFFER
         SH    R8,BUFINDEX         SUBTRACT BUFFER INDEX (IF ANY)
         L     R4,BUFADDR          R4 = ADDR OF OUTPUT BUFFER
         LH    R5,MOVEL            R5 = LENGTH OF ALL CONSOLE BUFFERS
         SLR   R15,R15             SET 'FROM' KEY TO ZERO
MVBUFF2  MVCP  0(R5,R4),0(R8),R15  MOVE IT
         BZ    MVBUFF3             FINISHED
         LA    R4,256(R4)          INCREMENT 'TO' ADDRESS
         LA    R8,256(R8)          INCREMENT 'FROM' ADDRESS
         SH    R5,=H'256'          DECREMENT LENGTH LEFT TO MOVE
         B     MVBUFF2             MOVE NEXT 256 BYTES
MVBUFF3  L     R9,SASID            RESTORE PREVIOUS SECONDARY ASID
         SSAR  R9                  SHOULD BE SAME AS PRIMARY
***********************************************************************
*                                                                     *
*     SET SCREEN IMAGE AREA                                           *
*                                                                     *
*     THIS AREA ALLOWS FOR LINE LENGTHS UP TO 132 AND UP TO 43        *
*     LINES.                                                          *
*                                                                     *
***********************************************************************
SETIM    L     R0,SCRADDR          CLEAR
         LH    R1,=H'6144'             ENTIRE
         SLR   R15,R15                     GETMAINED
         ICM   R15,B'1000',=C' '               AREA TO
         MVCL  R0,R14                              BLANKS
         L     R1,SCRADDR          LOAD ADDRESS OF SCREEN IMAGE
         L     R14,BUFADDR         LOAD ADDRESS OF SCREEN BUFFER
         AH    R14,BUFINDEX        POINT PAST LINE PREFIX
         LH    R15,NUMIN           LOAD NUMBER OF LINES
         LH    R5,LENTEXT          LOAD LENGTH OF TEXT
         BCTR  R5,0                MAKE MACHINE LENGTH
SETIM1   EX    R5,MVIMAGE          MOVE LINE TO SCREEN IMAGE
         LA    R1,132(,R1)         INCREMENT TO LINE OF SCREEN IMAGE
         AH    R14,LENLINE         INCREMENT TO NEXT LINE IN BUFFER
         BCT   R15,SETIM1          LOOP
         B     BLDTPUT             CONTINUE
MVIMAGE  MVC   0(0,R1),0(R14)      **** EXECUTE ONLY ****
***********************************************************************
*                                                                     *
*     BUILD THE TPUT TEXT                                             *
*                                                                     *
***********************************************************************
BLDTPUT  DS    0H
         LH    R15,LOCVERT         LOAD CURRENT VERTICAL LOCATION
         CH    R15,=H'9999'        SEE IF MAX SCROLL DOWN
         BNE   BLDTPUT1            NO, BRANCH
         LH    R15,NUMIN           LOAD NUMBER OF LINES
         SH    R15,MAXVERT         SUBTRACT MAX LINES ON TSO SCREEN
         BNM   BLDTPUT1            NEGATIVE, BRANCH
         SLR   R15,R15             SET VERT LOCATION TO ZERO
BLDTPUT1 STH   R15,LOCVERT         SAVE VERTICAL LOCATION
         L     R8,SCRADDR          R8 = ADDR OF SCREEN IMAGE AREA
         LH    R15,LOCVERT         LOAD CURRENT VERTICAL LOCATION
         MH    R15,=H'132'         MULTIPLY BY IMAGE LINE LENGTH
         AH    R15,LOCHORIZ        ADD HORIZONTAL LOCATION
         AR    R8,R15              ADD OFFSET TO START OF IMAGE AREA
         L     R4,TPUTSTRT         R4 = ADDR OF TPUT OUTPUT AREA
         LH    R5,MAXVERT          LOAD NUMBER OF LINES
         SLR   R9,R9               SET ROW NUMBER TO ZERO
         SLR   R15,R15             SET TPUT LENGTH TO ZERO
BLDTPUT2 LA    R9,1(R9)            ADD 1 TO ROW NUMBER
         STH   R9,ROW              SAVE NEW ROW NUMBER
         BAL   R14,GETSBA          GO GET SBA ADDRESS OF THIS LINE
         MVI   0(R4),X'11'         SET SBA ORDER IN TPUT BUFFER
         MVC   1(2,R4),SBA         MOVE SBA TO TPUT BUFFER
         MVC   3(3,R4),=X'1DE840'  SET FIELD ATTRIBUTES
         LA    R15,6(,R15)         ADD 6 TO TPUT LENGTH
         LH    R14,MAXHORIZ        LOAD MAX LINE SIZE
         BCTR  R14,0               MAKE MACHINE LENGTH
         EX    R14,MVTOTPUT        MOVE LINE TO TPUT BUFFER
         AH    R15,MAXHORIZ        ADD LINE LENGTH
         LR    R14,R8              CALCULATE START
         SH    R14,LOCHORIZ            OF CURRENT LINE
         CLI   3(R14),C'*'         SEE IF NON ROLL-DELETABLE
         BE    BLDTPUT3            YES, LEAVE THE ATTRIBUTES ALONE
         CLI   3(R14),C'@'         SEE IF NON ROLL-DELETABLE
         BE    BLDTPUT3            YES, LEAVE THE ATTRIBUTES ALONE
         MVC   3(3,R4),=X'1DE440'  SET TO NORMAL INTENSITY
BLDTPUT3 LA    R4,6(,R4)           POINT TO NEXT RECORD
         AH    R4,MAXHORIZ             IN TPUT BUFFER
         LA    R8,132(,R8)         POINT TO NEXT LINE IN IMAGE AREA
         BCT   R5,BLDTPUT2         LOOP UNTIL ALL RECORDS PROCESSED
         LH    R14,LOCVERT         LOAD ROW LOCATION
         LA    R14,1(,R14)         MAKE RELATIVE TO 1
         CVD   R14,WORK            CONVERT TO PACKED
         OI    WORK+7,X'0F'        MAKE PRINTABLE
         UNPK  BUFFROW,WORK+6(2)   MOVE TO TRAILER
         LH    R14,LOCHORIZ        LOAD COLUMN LOCATION
         LA    R14,1(,R14)         MAKE RELATIVE TO 1
         CVD   R14,WORK            CONVERT TO PACKED
         OI    WORK+7,X'0F'        MAKE PRINTABLE
         UNPK  BUFFCOL,WORK+6(2)   MOVE TO TRAILER
         MVC   0(TRAILEN,R4),CMDCTRL MOVE IN TRAILER
         LA    R15,TRAILEN(R15)    ADD TRAILER LENGTH
         ST    R15,TPUTLEN         SET LENGTH FOR FULL SCREEN
         MODESET MODE=PROB,KEY=NZERO UNAUTHORIZE OURSELVES
         B     TPUTCRT             GO WRITE TO SCREEN
         DROP  R5,R7
MVTOTPUT MVC   6(0,R4),0(R8)       **** EXECUTE ONLY ****
         EJECT
***********************************************************************
*                                                                     *
*               DISPLAY THE OPERATORS SCREEN ON THE TERMINAL          *
*                                                                     *
***********************************************************************
TPUTCRT  L     R1,TPUTADDR         R1 = ADDR OF OUTPUT STREAM
         L     R0,TPUTLEN          R0 = LENGTH OF TPUT
         ICM   R1,8,FULLSCR        SET ASIS TYPE FOR TPUT
         TPUT  (1),(0),R           DISPLAY ENTIRE SCREEN
         MODESET MODE=SUP,KEY=ZERO AUTHORIZE OURSELVES
         SLR   R1,R1               CLEAR PARM REG
         SYSEVENT TGETTPUT         MARK END OF TRANSACTION
         MODESET MODE=PROB,KEY=NZERO UNAUTHORIZE OURSELVES
INPUT    MVC   ERROR(26),BLANKS    BLANK OUT ERROR FIELD
***********************************************************************
*                                                                     *
*                       READ COMMAND FROM USER                        *
*                                                                     *
***********************************************************************
READCHAR MVC   REPLY,BLANKS        SHOW NO COMMAND
         TGET  REPLYBUF,85,ASIS    GET 79 CHARACTERS FROM TERMINAL
         CH    R15,=H'20'          SEE IF RETURN CODE VALID
         BH    INVALID             NO, BRANCH
         B     BRTAB(R15)          BRANCH TO BRANCH TABLE
BRTAB    B     OK                  RC=0
         B     NEXTPAGE            RC=4  (NO DATA AVAILABLE)
         B     ATTN                RC=8  (ATTENTION WAS HIT)
         B     NEXTPAGE            RC=12 (IGNORE DATA)
         B     INVALID             RC=16 (INVALID TPUT)
         B     IOERROR             RC=20 (TERMINAL DISCONNECTED)
INVALID  TPUT  ERRMSG9,26          WRITE ERROR MSG
         ABEND 004,DUMP            ABEND THE COMMAND
IOERROR  TPUT  ERRMSG10,26         WRITE ERROR MSG
         ABEND 005,DUMP            ABEND THE COMMAND
ATTN     MVI   ATTNFLG,X'FF'       SET ATTENTION INDICATOR
         B     NEXTPAGE            AND CONTINUE AS IF ENTER PRESSED
OK       CLI   REPLYBUF,X'7D'      ENTER KEY ?
         BE    NOPFK               YES, SKIP PFK LOGIC
         CLI   REPLYBUF,X'60'      ERROR (NO AID)?
         BE    NEXTPAGE            YES, CONTINUE AS IF ENTER PRESSED
         CLI   REPLYBUF,X'6B'      PA3 KEY ?
         BE    NEXTPAGE            YES, CONTINUE AS IF ENTER PRESSED
         CLI   REPLYBUF,X'6C'      PA1 KEY ?
         BE    ATTN                YES, PROCESS AS IF ATTN
         CLI   REPLYBUF,X'6D'      CLEAR KEY ?
         BE    NEXTPAGE            YES, CONTINUE AS IF ENTER PRESSED
         CLI   REPLYBUF,X'6E'      IS THIS A RESHOW? (VTAM ONLY)
         BE    NEXTPAGE            YES, CONTINUE AS IF ENTER PRESSED
         CLI   REPLYBUF,X'F0'      TEST REQ?
         BE    NEXTPAGE            YES, CONTINUE AS IF ENTER PRESSED
***********************************************************************
*                                                                     *
*        PROCESS PFKEY ENTRY                                          *
*                                                                     *
*        TURNING OFF THE HIGH ORDER 4 BITS WILL LEAVE A PFK VALUE     *
*        OF 01-0C FOR PFKEYS 1 - 12 AS WELL AS PFKEYS 13 - 24         *
*        THUS EQUATING PFKEY 01 WITH 13, 02 WITH 14, ETC.             *
*                                                                     *
***********************************************************************
         NI    REPLYBUF,X'0F'      TURN OFF HIGH BYTE
         SR    R1,R1               CLEAR REGISTER
         IC    R1,REPLYBUF         GET PFK NUMBER
         LTR   R1,R1               TEST PFK NUMBER
         BNP   NEXTPAGE            ZERO OR NEGATIVE, CONTINUE
         CH    R1,=H'12'           HIGHEST DEFINED PFK IS 12/24
         BH    NEXTPAGE            SO SKIP OTHERS OR BUF TRANSFER ERROR
         BCTR  R1,0                DECREMENT BY 1
         MH    R1,=H'80'           GET OFFSET INTO TABLE
         LA    R1,PFKTABLE(R1)     GET ADDRESS OF COMMAND
         MVC   REPLY,0(R1)         INSERT COMMAND
NOPFK    CLI   REPLY,C' '          JUST A BLANK?
         BE    NEXTPAGE            YES, JUST GO REFRESH
         MVC   USERLINE(79),BLANKS BLANK OUT INPUT FIELD
         OC    REPLY(79),BLANKS    CONVERT CHARS TO UPPER CASE
         CLC   REPLY(6),=C'RECALL' RECALL COMMAND ?
         BE    RECALL              YES, GO DO IT
         CLC   REPLY(4),=C'RCL '   RECALL COMMAND (SHORT FORM) ?
         BE    RECALL              YES, GO DO IT
         CLC   REPLY(8),=C'CONSOLE=' IS THIS A CONSOLE CHANGE REQUEST
         BE    CNSL                YES, GO DO IT
         CLC   REPLY(8),=C'CONSOLE ' IS THIS A CONSOLE CHANGE REQUEST
         BE    CNSL                YES, GO DO IT
         CLC   REPLY(3),=C'UP '    IS THIS AN 'UP' ?
         BE    UP                  YES, GO DO IT
         CLC   REPLY(5),=C'DOWN '  IS THIS A 'DOWN' ?
         BE    DOWN                YES, GO DO IT
         CLC   REPLY(5),=C'LEFT '  IS THIS A 'LEFT' ?
         BE    LEFT                YES, GO DO IT
         CLC   REPLY(6),=C'RIGHT ' IS THIS A 'RIGHT' ?
         BE    RIGHT               YES, GO DO IT
         CLC   REPLY(4),=C'END '   IS IT AN 'END' ?
         BE    END                 YES, GO DO IT
         CLC   REPLY(3),=C'EN '    IS IT AN 'END' ?
         BE    END                 YES, GO DO IT
         CLC   REPLY(5),=C'HELP '  IS IT A 'HELP' ?
         BE    GETHELP             YES, GO DO IT
         CLC   REPLY(2),=C'? '     IS IT A 'HELP' ?
         BE    GETHELP             YES, GO DO IT
         B     DYNA                NO,MUST BE AN OPERATOR COMMAND
RECALL   DS    0H
         MVC   LASTUSER,LASTRPLY   RESTORE LAST ENTERED COMMAND
         MVC   USERLINE(L'LASTRPLY),LASTRPLY   RECALL LAST COMMAND
         B     NEXTPAGE            GIVE OPER THE CHANCE TO CHANGE
***********************************************************************
*                                                                     *
*                   CONSOLE --  CHANGE CONSOLE ADDRESS                *
*                                                                     *
***********************************************************************
CNSL     LA    R1,REPLY+8          LOAD POSSIBLE START OF CONS NBR/NAME
         CLC   0(2,R1),=C'M '      MASTER CONSOLE REQUESTED?
         BE    CNSL08              YES, BRANCH
         CLC   0(2,R1),=C'F '      FIRST PSEUDO MASTER REQUESTED?
         BE    CNSL09              YES, BRANCH
         LA    R15,60              SET MAX LENGTH TO SEARCH
CNSL01   CLI   0(R1),C' '          SEE IF START OF CONSOLE NAME
         BNE   CNSL02              YES, GET OUT
         LA    R1,1(,R1)           INCREMENT TO NEXT CHAR OF BUFFER
         BCT   R15,CNSL01          LOOP
         B     CNSLE01             NO CONSOLE VALUE
CNSL02   LR    R2,R1               SET START ADDRESS OF NBR/NAME
         LA    R15,8               SET MAX LENGTH OF NBR/NAME
         LA    R14,0               SET LENGTH OF NBR/NAME
CNSL03   CLI   0(R2),C' '          END OF CONSOLE NBR/NAME
         BE    CNSL04              YES, BRANCH
         LA    R2,1(,R2)           INCREMENT TO NEXT CHAR OF NBR/NAME
         LA    R14,1(,R14)         ADD 1 TO LENGTH
         BCT   R15,CNSL03          LOOP
         CLI   0(R2),C' '          END OF CONSOLE NBR/NAME
         BNE   CNSLE02             NO, NBR/NAME TOO LONG
CNSL04   LR    R15,R14             SAVE LENGTH
         LR    R2,R1               RESET START OF CONSOLE NBR/NAME
CNSL05   CLI   0(R2),C'0'          SEE IF NUMERIC
         BL    CNSL06              NO, MUST BE NAME
         CLI   0(R2),C'9'          SEE IF NUMERIC
         BH    CNSL06              NO, MUST BE NAME
         LA    R2,1(,R2)           INCREMENT TO NEXT CHAR OF NAME
         BCT   R15,CNSL05          LOOP
         LR    R15,R14             SET LENGTH OF CONSOLE NUMBER
         BCTR  R15,0               MAKE MACHINE LENGTH
         EX    R15,PACKNBR         PACK THE CONSOLE NUMBER
         CVB   R15,WORK            CONVERT TO BINARY
         CH    R15,=H'200'         SEE IF EXCEEDS OUR MAX
         BH    CNSLE04             YES, ERROR
         STC   R15,CNSLNUM         SAVE CONSOLE NUMBER
         B     CNSL07              GET OUT
CNSL06   MVC   MYCONS,BLANKS       BLANK CONSOLE NAME
         LR    R15,R14             SAVE LENGTH
         BCTR  R15,0               MAKE MACHINE LENGTH
         EX    R15,SAVECNSL        SAVE CONSOLE NAME
         BAL   R14,FUCM            GO FIND CONSOLE NAME
         LTR   R15,R15             TEST RETURN CODE
         BZ    CNSLE03             ZERO, NOT FOUND
         STC   R15,CNSLNUM         NOT ZERO, SAVE CONSOLE NUMBER
CNSL07   CLI   CNSLNUM,0           SEE IF VALID CONSOLE NUMBER
         BE    CNSLE02             NO, ERROR
         MVC   LOCVERT,=H'9999'    SET VERTICAL LOCATION TO 9999
         XC    LOCHORIZ,LOCHORIZ   SET HORIZONTAL LOCATION TO ZERO
         B     FINDUCM             YES, GO PROCESS CONSOLE SWITCH
CNSL08   MVI   CNSLNUM,C'M'        SET TO MASTER CONSOLE
         MVC   LOCVERT,=H'9999'    SET VERTICAL LOCATION TO 9999
         XC    LOCHORIZ,LOCHORIZ   SET HORIZONTAL LOCATION TO ZERO
         B     FINDUCM             GO SWITCH TO MASTER
CNSL09   MVI   CNSLNUM,C'F'        SET TO FIRST WITH MASTER AUTHORITY
         MVC   LOCVERT,=H'9999'    SET VERTICAL LOCATION TO 9999
         XC    LOCHORIZ,LOCHORIZ   SET HORIZONTAL LOCATION TO ZERO
         B     FINDUCM             GO SWITCH TO MASTER
PACKNBR  PACK  WORK,0(0,R1)        **** EXECUTE ONLY ****
SAVECNSL MVC   MYCONS(0),0(R1)     **** EXECUTE ONLY ****
CNSLE01  MVC   ERROR(26),ERRMSG17  NO CONSOLE NAME/NBR
         B     NEXTPAGE            IGNORE COMMAND
CNSLE02  MVC   ERROR(26),ERRMSG18  INVALID CONSOLE NAME/NBR
         B     NEXTPAGE            IGNORE COMMAND
CNSLE03  MVC   ERROR(26),ERRMSG19  CONSOLE NAME NOT FOUND
         B     NEXTPAGE            IGNORE COMMAND
CNSLE04  MVC   ERROR(26),ERRMSG2   CONSOLE NUMBER TOO LARGE
         B     NEXTPAGE            IGNORE COMMAND
         EJECT
***********************************************************************
*                                                                     *
*        UP    NNN --  SCROLL UP WITHIN LOGICAL SCREEN                *
*                                                                     *
*        THE CONSOLE MAY HAVE MORE LINES THAN THE TSO TERMINAL.       *
*        TO LOOK AT ALL LINES ON THE CONSOLE, THE ABILITY MUST        *
*        EXIST TO POSITION THE TSO WINDOW WITHIN THE POTENTIALLY      *
*        LARGER CONSOLE SCREEN.                                       *
*                                                                     *
*        THE SCROLL VALUE CAN BE ONE OF THE FOLLOWING:                *
*                                                                     *
*            PAGE   - SIZE OF THE TSO WINDOW                          *
*            SCREEN - SIZE OF THE TSO WINDOW                          *
*            MAX    - 9999 LINES                                      *
*            HALF   - HALF OF THE SIZE OF THE TSO WINDOW              *
*            NNN    - ABSOLUTE NUMBER OF LINES                        *
*                                                                     *
*         NOTE THAT THE FIRST CHARACTER OF THE VALUE IS USED FOR      *
*         THE "SPECIAL" VALUES.  IN OTHER WORDS, ANY STRING WHICH     *
*         STARTS WITH "P", "S", "M", OR "H" WILL WORK.                *
*                                                                     *
***********************************************************************
UP       LA    R1,REPLY+3          POINT PAST COMMAND
         LA    R15,20              SET SEARCH LIMIT
         MVC   SCROLL,MAXVERT      NO VALUE, SET TO TSO SCREEN SIZE
UP01     CLI   0(R1),C' '          SEE IF START OF VALUE
         BNE   UP02                YES, BRANCH
         LA    R1,1(,R1)           NO,  INCREMENT TO NEXT CHAR
         BCT   R15,UP01            LOOP
         B     UP07                NO VALUE, USE SCREEN SIZE
UP02     LR    R14,R1              SAVE START OF VALUE
         CLI   0(R14),C'P'         SEE IF "PAGE"
         BE    UP07                YES, USE SCREEN SIZE
         CLI   0(R14),C'S'         SEE IF "SCREEN"
         BE    UP07                YES, USE SCREEN SIZE
         MVC   SCROLL,=H'9999'     SET TO MAX
         CLI   0(R14),C'M'         SEE IF "MAX"
         BE    UP07                YES, USE 9999
         LH    R15,MAXVERT         LOAD TSO SCREEN SIZE
         SRA   R15,1               DIVIDE BY 2
         STH   R15,SCROLL          SAVE HALF SCREEN
         CLI   0(R14),C'H'         SEE IF "HALF"
         BE    UP07                YES, USE HALF SCREEN SIZE
UP03     LA    R15,3               SET MAX LENGTH OF VALUE
UP04     CLI   0(R1),C'0'          SEE IF NUMERIC
         BL    UP05                NO, ERROR
         CLI   0(R1),C'9'          SEE IF NUMERIC
         BH    UP05                NO, ERROR
         LA    R1,1(,R1)           INCREMENT TO NEXT CHAR
         CLI   0(R1),C' '          SEE IF END OF VALUE
         BE    UP06                YES, BRANCH
         BCT   R15,UP04            LOOP
UP05     MVC   ERROR(26),ERRMSG16  INVALID SCROLL VALUE
         B     BLDTPUT             GO REDISPLAY LAST SCREEN
UP06     LA    R1,3                CALCULATE LENGTH
         SR    R1,R15                 OF VALUE
         EX    R1,PKVAL            PACK THE VALUE
         CVB   R15,WORK            CONVERT TO BINARY
         STH   R15,SCROLL          SAVE SCROLL VALUE
UP07     LH    R15,LOCVERT         LOAD CURRENT VERTICAL LOCATION
         SH    R15,SCROLL          SUBTRACT SCROLL AMOUNT
         BNM   UP08                NOT NEGATIVE, BRANCH
         SLR   R15,R15             NEGATIVE, SET TO ZERO
UP08     STH   R15,LOCVERT         SAVE NEW VERTICAL LOCATION
         B     BLDTPUT             GO REDISPLAY LAST SCREEN
         EJECT
***********************************************************************
*                                                                     *
*        DOWN  NNN --  SCROLL DOWN WITHIN LOGICAL SCREEN              *
*                                                                     *
*        THE CONSOLE MAY HAVE MORE LINES THAN THE TSO TERMINAL.       *
*        TO LOOK AT ALL LINES ON THE CONSOLE, THE ABILITY MUST        *
*        EXIST TO POSITION THE TSO WINDOW WITHIN THE POTENTIALLY      *
*        LARGER CONSOLE SCREEN.                                       *
*                                                                     *
*        THE SCROLL VALUE CAN BE ONE OF THE FOLLOWING:                *
*                                                                     *
*            PAGE   - SIZE OF THE TSO WINDOW                          *
*            SCREEN - SIZE OF THE TSO WINDOW                          *
*            MAX    - 9999 LINES                                      *
*            HALF   - HALF OF THE SIZE OF THE TSO WINDOW              *
*            NNN    - ABSOLUTE NUMBER OF LINES                        *
*                                                                     *
*         NOTE THAT THE FIRST CHARACTER OF THE VALUE IS USED FOR      *
*         THE "SPECIAL" VALUES.  IN OTHER WORDS, ANY STRING WHICH     *
*         STARTS WITH "P", "S", "M", OR "H" WILL WORK.                *
*                                                                     *
***********************************************************************
DOWN     LA    R1,REPLY+5          POINT PAST COMMAND
         LA    R15,20              SET SEARCH LIMIT
         MVC   SCROLL,MAXVERT      NO VALUE, SET TO TSO SCREEN SIZE
DOWN01   CLI   0(R1),C' '          SEE IF START OF VALUE
         BNE   DOWN02              YES, BRANCH
         LA    R1,1(,R1)           NO,  INCREMENT TO NEXT CHAR
         BCT   R15,DOWN01          LOOP
         B     DOWN07              NO VALUE, USE SCREEN SIZE
DOWN02   LR    R14,R1              SAVE START OF VALUE
         CLI   0(R14),C'P'         SEE IF "PAGE"
         BE    DOWN07              YES, USE SCREEN SIZE
         CLI   0(R14),C'S'         SEE IF "SCREEN"
         BE    DOWN07              YES, USE SCREEN SIZE
         MVC   SCROLL,=H'9999'     SET TO MAX
         CLI   0(R14),C'M'         SEE IF "MAX"
         BE    DOWN07              YES, USE 9999
         LH    R15,MAXVERT         LOAD TSO SCREEN SIZE
         SRA   R15,1               DIVIDE BY 2
         STH   R15,SCROLL          SAVE HALF SCREEN
         CLI   0(R14),C'H'         SEE IF "HALF"
         BE    DOWN07              YES, USE HALF SCREEN SIZE
DOWN03   LA    R15,3               SET MAX LENGTH OF VALUE
DOWN04   CLI   0(R1),C'0'          SEE IF NUMERIC
         BL    DOWN05              NO, ERROR
         CLI   0(R1),C'9'          SEE IF NUMERIC
         BH    DOWN05              NO, ERROR
         LA    R1,1(,R1)           INCREMENT TO NEXT CHAR
         CLI   0(R1),C' '          SEE IF END OF VALUE
         BE    DOWN06              YES, BRANCH
         BCT   R15,DOWN04          LOOP
DOWN05   MVC   ERROR(26),ERRMSG16  INVALID SCROLL VALUE
         B     BLDTPUT             GO REDISPLAY LAST SCREEN
DOWN06   LA    R1,3                CALCULATE LENGTH
         SR    R1,R15                 OF VALUE
         EX    R1,PKVAL            PACK THE VALUE
         CVB   R15,WORK            CONVERT TO BINARY
         STH   R15,SCROLL          SAVE SCROLL VALUE
DOWN07   LH    R15,LOCVERT         LOAD CURRENT VERTICAL LOCATION
         AH    R15,SCROLL          ADD SCROLL AMOUNT
         LH    R14,NUMIN           LOAD TOTAL NUMBER OF LINES ON CONS
         SH    R14,MAXVERT         SUBTRACT SCREEN SIZE FOR INDEX
         BNM   DOWN08              NOT NEGATIVE, OK
         SLR   R14,R14             NEGATIVE, SET TO ZERO
DOWN08   CR    R14,R15             COMPARE MAX DOWN TO SPECIFIED VALUE
         BL    DOWN09              MAX DOWN CORRECT, USE IT
         LR    R14,R15             SET NEW VALUE TO SPECIFIED VALUE
DOWN09   STH   R14,LOCVERT         SAVE NEW VERTICAL LOCATION
         B     BLDTPUT             GO REDISPLAY LAST SCREEN
         EJECT
***********************************************************************
*                                                                     *
*        RIGHT NNN --  SCROLL RIGHT WITHIN LOGICAL SCREEN             *
*                                                                     *
*        THE CONSOLE MAY HAVE MORE LINES THAN THE TSO TERMINAL.       *
*        TO LOOK AT ALL LINES ON THE CONSOLE, THE ABILITY MUST        *
*        EXIST TO POSITION THE TSO WINDOW WITHIN THE POTENTIALLY      *
*        LARGER CONSOLE SCREEN.                                       *
*                                                                     *
*        THE SCROLL VALUE CAN BE ONE OF THE FOLLOWING:                *
*                                                                     *
*            PAGE   - SIZE OF THE TSO WINDOW                          *
*            SCREEN - SIZE OF THE TSO WINDOW                          *
*            MAX    - 9999 LINES                                      *
*            HALF   - HALF OF THE SIZE OF THE TSO WINDOW              *
*            NNN    - ABSOLUTE NUMBER OF LINES                        *
*                                                                     *
*         NOTE THAT THE FIRST CHARACTER OF THE VALUE IS USED FOR      *
*         THE "SPECIAL" VALUES.  IN OTHER WORDS, ANY STRING WHICH     *
*         STARTS WITH "P", "S", "M", OR "H" WILL WORK.                *
*                                                                     *
***********************************************************************
RIGHT    LA    R1,REPLY+6          POINT PAST COMMAND
         LA    R15,20              SET SEARCH LIMIT
         MVC   SCROLL,MAXHORIZ     NO VALUE, SET TO TSO SCREEN SIZE
RIGHT01  CLI   0(R1),C' '          SEE IF START OF VALUE
         BNE   RIGHT02             YES, BRANCH
         LA    R1,1(,R1)           NO,  INCREMENT TO NEXT CHAR
         BCT   R15,RIGHT01         LOOP
         B     RIGHT07             NO VALUE, USE SCREEN SIZE
RIGHT02  LR    R14,R1              SAVE START OF VALUE
         CLI   0(R14),C'P'         SEE IF "PAGE"
         BE    RIGHT07             YES, USE SCREEN SIZE
         CLI   0(R14),C'S'         SEE IF "SCREEN"
         BE    RIGHT07             YES, USE SCREEN SIZE
         MVC   SCROLL,=H'9999'     SET TO MAX
         CLI   0(R14),C'M'         SEE IF "MAX"
         BE    RIGHT07             YES, USE 9999
         LH    R15,MAXHORIZ        LOAD TSO SCREEN SIZE
         SRA   R15,1               DIVIDE BY 2
         STH   R15,SCROLL          SAVE HALF SCREEN
         CLI   0(R14),C'H'         SEE IF "HALF"
         BE    RIGHT07             YES, USE HALF SCREEN SIZE
RIGHT03  LA    R15,3               SET MAX LENGTH OF VALUE
RIGHT04  CLI   0(R1),C'0'          SEE IF NUMERIC
         BL    RIGHT05             NO, ERROR
         CLI   0(R1),C'9'          SEE IF NUMERIC
         BH    RIGHT05             NO, ERROR
         LA    R1,1(,R1)           INCREMENT TO NEXT CHAR
         CLI   0(R1),C' '          SEE IF END OF VALUE
         BE    RIGHT06             YES, BRANCH
         BCT   R15,RIGHT04         LOOP
RIGHT05  MVC   ERROR(26),ERRMSG16  INVALID SCROLL VALUE
         B     BLDTPUT             GO REDISPLAY LAST SCREEN
RIGHT06  LA    R1,3                CALCULATE LENGTH
         SR    R1,R15                 OF VALUE
         EX    R1,PKVAL            PACK THE VALUE
         CVB   R15,WORK            CONVERT TO BINARY
         STH   R15,SCROLL          SAVE SCROLL VALUE
RIGHT07  LH    R15,LOCHORIZ        LOAD CURRENT HORIZONTAL LOCATION
         AH    R15,SCROLL          ADD SCROLL AMOUNT
         LH    R14,LENTEXT         LOAD LENGTH OF LINE ON CONS
         SH    R14,MAXHORIZ        SUBTRACT SCREEN SIZE FOR INDEX
         BNM   RIGHT08             NOT NEGATIVE, OK
         SLR   R14,R14             NEGATIVE, SET TO ZERO
RIGHT08  CR    R14,R15             COMPARE MAX RIGHT TO SPECIFIED VALUE
         BL    RIGHT09             MAX RIGHT CORRECT, USE IT
         LR    R14,R15             SET NEW VALUE TO SPECIFIED VALUE
RIGHT09  STH   R14,LOCHORIZ        SAVE NEW HORIZONTAL LOCATION
         B     BLDTPUT             GO REDISPLAY LAST SCREEN
         EJECT
***********************************************************************
*                                                                     *
*        LEFT NNN --   SCROLL LEFT WITHIN LOGICAL SCREEN              *
*                                                                     *
*        THE CONSOLE MAY HAVE MORE LINES THAN THE TSO TERMINAL.       *
*        TO LOOK AT ALL LINES ON THE CONSOLE, THE ABILITY MUST        *
*        EXIST TO POSITION THE TSO WINDOW WITHIN THE POTENTIALLY      *
*        LARGER CONSOLE SCREEN.                                       *
*                                                                     *
*        THE SCROLL VALUE CAN BE ONE OF THE FOLLOWING:                *
*                                                                     *
*            PAGE   - SIZE OF THE TSO WINDOW                          *
*            SCREEN - SIZE OF THE TSO WINDOW                          *
*            MAX    - 9999 LINES                                      *
*            HALF   - HALF OF THE SIZE OF THE TSO WINDOW              *
*            NNN    - ABSOLUTE NUMBER OF LINES                        *
*                                                                     *
*         NOTE THAT THE FIRST CHARACTER OF THE VALUE IS USED FOR      *
*         THE "SPECIAL" VALUES.  IN OTHER WORDS, ANY STRING WHICH     *
*         STARTS WITH "P", "S", "M", OR "H" WILL WORK.                *
*                                                                     *
***********************************************************************
LEFT     LA    R1,REPLY+5          POINT PAST COMMAND
         LA    R15,20              SET SEARCH LIMIT
         MVC   SCROLL,MAXHORIZ     NO VALUE, SET TO TSO SCREEN SIZE
LEFT01   CLI   0(R1),C' '          SEE IF START OF VALUE
         BNE   LEFT02              YES, BRANCH
         LA    R1,1(,R1)           NO,  INCREMENT TO NEXT CHAR
         BCT   R15,LEFT01          LOOP
         B     LEFT07              NO VALUE, USE SCREEN SIZE
LEFT02   LR    R14,R1              SAVE START OF VALUE
         CLI   0(R14),C'P'         SEE IF "PAGE"
         BE    LEFT07              YES, USE SCREEN SIZE
         CLI   0(R14),C'S'         SEE IF "SCREEN"
         BE    LEFT07              YES, USE SCREEN SIZE
         MVC   SCROLL,=H'9999'     SET TO MAX
         CLI   0(R14),C'M'         SEE IF "MAX"
         BE    LEFT07              YES, USE 9999
         LH    R15,MAXHORIZ        LOAD TSO SCREEN SIZE
         SRA   R15,1               DIVIDE BY 2
         STH   R15,SCROLL          SAVE HALF SCREEN
         CLI   0(R14),C'H'         SEE IF "HALF"
         BE    LEFT07              YES, USE HALF SCREEN SIZE
LEFT03   LA    R15,3               SET MAX LENGTH OF VALUE
LEFT04   CLI   0(R1),C'0'          SEE IF NUMERIC
         BL    LEFT05              NO, ERROR
         CLI   0(R1),C'9'          SEE IF NUMERIC
         BH    LEFT05              NO, ERROR
         LA    R1,1(,R1)           INCREMENT TO NEXT CHAR
         CLI   0(R1),C' '          SEE IF END OF VALUE
         BE    LEFT06              YES, BRANCH
         BCT   R15,LEFT04          LOOP
LEFT05   MVC   ERROR(26),ERRMSG16  INVALID SCROLL VALUE
         B     BLDTPUT             GO REDISPLAY LAST SCREEN
LEFT06   LA    R1,3                CALCULATE LENGTH
         SR    R1,R15                 OF VALUE
         EX    R1,PKVAL            PACK THE VALUE
         CVB   R15,WORK            CONVERT TO BINARY
         STH   R15,SCROLL          SAVE SCROLL VALUE
LEFT07   LH    R15,LOCHORIZ        LOAD CURRENT HORIZONTAL LOCATION
         SH    R15,SCROLL          SUBTRACT SCROLL AMOUNT
         BNM   LEFT08              NOT NEGATIVE, BRANCH
         SLR   R15,R15             NEGATIVE, SET TO ZERO
LEFT08   STH   R15,LOCHORIZ        SAVE NEW VERTICAL LOCATION
         B     BLDTPUT             GO REDISPLAY LAST SCREEN
PKVAL    PACK  WORK(8),0(0,R14)    **** EXECUTE ONLY ****
***********************************************************************
*                                                                     *
*                       END --  TERMINATE CONSOLE                     *
*                                                                     *
***********************************************************************
END      B     DONE                QUIT
***********************************************************************
*                                                                     *
*           ?  --  LIST HELP FOR CONSOLE COMMANDS ON TERMINAL         *
*                                                                     *
***********************************************************************
GETHELP  LA    R1,HELP             R1 = ADDR OF HELP PAGE
         LA    R0,HLENGTH          R0 = LENGTH OF HELP PAGE
         ICM   R1,8,FULLSCR        INSERT ASIS CNTL CHARS
         TPUT  (1),(0),R           DISPLAY HELP
         B     READCHAR
***********************************************************************
*                                                                     *
*                       JES OPERATOR COMMANDS                         *
*                      SYSTEM OPERATOR COMMANDS                       *
*                                                                     *
***********************************************************************
DYNA     DS    0H
         MVC   LASTRPLY,REPLY      SAVE THIS COMMAND FOR RECALL
         MVC   LASTUSER,REPLY      SHOW LAST ENTERED USER COMMAND
CMDCK1   CLC   RESOURCE,=CL44' '   SEE IF ANY COMMAND AUTHORITY
         BE    BADCMD              NO, UNAUTHORIZED COMMAND
CMDCK2   CLC   RESOURCE,=CL44'CONSOLE.FULL' SEE IF FULL AUTHORITY
         BE    CMDOK               YES, ALL ALL COMMANDS
CMDCK3   CLC   RESOURCE,=CL44'CONSOLE.SECURITY' SEE IF SECURITY AUTH
         BNE   CMDCK4              NO, CONTINUE
         LA    R15,CMDSEC          LOAD ADDRESS OF VALID COMMANDS
CMDCK3A  CLI   0(R15),X'FF'        SEE IF END OF TABLE
         BE    BADCMD              YES, UNAUTHORIZED COMMAND
         LH    R14,0(R15)          LOAD LENGTH OF COMMAND
         EX    R14,CKCMD           SEE IF COMMAND MATCHES
         BE    CMDOK               YES, AUTHORIZED COMMAND
         LA    R15,32(,R15)        NO, INCREMENT TO NEXT CMD TABLE ENT
         B     CMDCK3A             LOOP
CMDCK4   CLC   RESOURCE,=CL44'CONSOLE.DBA'  SEE IF DBA AUTHORITY
         BNE   CMDCK5              NO, CONTINUE
         LA    R15,CMDDBA          LOAD ADDRESS OF VALID COMMANDS
CMDCK4A  CLI   0(R15),X'FF'        SEE IF END OF TABLE
         BE    BADCMD              YES, UNAUTHORIZED COMMAND
         LH    R14,0(R15)          LOAD LENGTH OF COMMAND
         EX    R14,CKCMD           SEE IF COMMAND MATCHES
         BE    CMDOK               YES, AUTHORIZED COMMAND
         LA    R15,32(,R15)        NO, INCREMENT TO NEXT CMD TABLE ENT
         B     CMDCK4A             LOOP
CMDCK5   CLC   RESOURCE,=CL44'CONSOLE.DISPLAY' SEE IF DISPLAY AUTH
         BNE   BADCMD              NO, ??????, CONSIDER UNAUTHORIZED
         LA    R15,CMDDISP         LOAD ADDRESS OF VALID COMMANDS
CMDCK5A  CLI   0(R15),X'FF'        SEE IF END OF TABLE
         BE    BADCMD              YES, UNAUTHORIZED COMMAND
         LH    R14,0(R15)          LOAD LENGTH OF COMMAND
         EX    R14,CKCMD           SEE IF COMMAND MATCHES
         BE    CMDOK               YES, AUTHORIZED COMMAND
         LA    R15,32(,R15)        NO, INCREMENT TO NEXT CMD TABLE ENT
         B     CMDCK5A             LOOP
CKCMD    CLC   REPLY(0),2(R15)     **** EXECUTE ONLY ****
CMDOK    MODESET MODE=SUP,KEY=ZERO AUTHORIZE OURSELVES
         MVC   COMMDATA(2),=H'82'  SET COMMAND LENGTH
         MVC   COMMDATA+2(79),REPLY MOVE CMD TO WTO LIST FORM
         MVC   REPLY(79),BLANKS    BLANK OUT REPLY FIELD
         LA    R2,COMMDATA         POINT TO COMMAND
         MGCRE TEXT=(2),CONSNAME=CONNAME, ISSUE THE COMMAND            X
               MF=(E,MGCREEX)
         MODESET MODE=PROB,KEY=NZERO UNAUTHORIZE OURSELVES
         B     NEXTPAGE            LOOP
COMMDATA DS    0F
         DC    X'0000'
         DC    C'123456789 123456789 123456789 123456789 123456789 1234X
               56789 123456789 123456789   '
MGCREEX  MGCRE MF=L
         EJECT
***********************************************************************
*                                                                     *
*        LIST OF VALID COMMANDS FOR CONSOLE.SECURITY                  *
*                                                                     *
*        EACH ENTRY IS 32 BYTES LONG                                  *
*        01-02 - LENGTH-1 OF COMMAND STRING FOR COMPARE               *
*        03-32 - COMMAND STRING OR PREFIX                             *
*                                                                     *
*        THE TABLE IS TERMINATED WITH A X'FF'                         *
*                                                                     *
***********************************************************************
CMDSEC   DS    0F                  VALID COMMANDS FOR CONSOLE.SECURITY
         DC    H'23',CL30'F CICSDECK,CEMT SET PROG'
         DC    H'01',CL30'D         '
         DC    H'01',CL30'$D        '
         DC    X'FFFF'
***********************************************************************
*                                                                     *
*        LIST OF VALID COMMANDS FOR CONSOLE.DBA                       *
*                                                                     *
*        EACH ENTRY IS 32 BYTES LONG                                  *
*        01-02 - LENGTH-1 OF COMMAND STRING FOR COMPARE               *
*        03-32 - COMMAND STRING OR PREFIX                             *
*                                                                     *
*        THE TABLE IS TERMINATED WITH A X'FF'                         *
*                                                                     *
***********************************************************************
CMDDBA   DS    0F                  VALID COMMANDS FOR CONSOLE.DBA
         DC    H'04',CL30'F ADA     '
         DC    H'04',CL30'S ADA     '
         DC    H'04',CL30'F EDA     '
         DC    H'04',CL30'S EDA     '
         DC    H'04',CL30'P EDA     '
         DC    H'04',CL30'S XBM     '
         DC    H'04',CL30'P XBM     '
         DC    H'04',CL30'F XBM     '
         DC    H'01',CL30'-D        '
         DC    H'01',CL30'D         '
         DC    H'01',CL30'$D        '
         DC    H'05',CL30'V WLM,    '
         DC    H'04',CL30'S DC0     '
         DC    H'04',CL30'P DC0     '
         DC    H'04',CL30'F DC0     '
         DC    H'07',CL30'S BMCAPT  '
         DC    H'07',CL30'P BMCAPT  '
         DC    H'07',CL30'F BMCAPT  '
         DC    X'FFFF'
         EJECT
***********************************************************************
*                                                                     *
*        LIST OF VALID COMMANDS FOR CONSOLE.DISPLAY                   *
*                                                                     *
*        EACH ENTRY IS 32 BYTES LONG                                  *
*        01-02 - LENGTH-1 OF COMMAND STRING FOR COMPARE               *
*        03-32 - COMMAND STRING OR PREFIX                             *
*                                                                     *
*        THE TABLE IS TERMINATED WITH A X'FF'                         *
*                                                                     *
***********************************************************************
CMDDISP  DS    0F                  VALID COMMANDS FOR CONSOLE.DISPLAY
         DC    H'01',CL30'D         '
         DC    H'01',CL30'$D        '
         DC    H'12',CL30'+MQS1 DISPLAY'
         DC    H'12',CL30'+FLQ1 DISPLAY'
         DC    H'12',CL30'+FLT1 DISPLAY'
         DC    X'FFFF'
         EJECT
***********************************************************************
*                                                                     *
*                      COMMAND WAS INVALID                            *
*                                                                     *
***********************************************************************
BADCMD   MVC   ERROR(26),ERRMSG3   COMMAND WAS INVALID
         B     NEXTPAGE            LOOP
         SPACE 5
DONE     TPUT  CLEAR,CLEARGTH,FULLSCR  NO, LETS CLEAR THE SCREEN FIRST
         STFSMODE OFF              TURN OFF FS MODE
         L     R1,BUFADDR          LOAD GETMAIN AREA ADDRESS
         FREEMAIN R,LV=4096,SP=0,A=(1) FREE GETMAIN BUFFER ADDR
         L     R1,SCRADDR          LOAD GETMAIN AREA ADDRESS
         FREEMAIN R,LV=6144,SP=0,A=(1) FREE GETMAIN BUFFER ADDR
         L     R1,TPUTADDR         LOAD GETMAIN AREA ADDRESS
         FREEMAIN R,LV=4096,SP=0,A=(1) FREE GETMAIN BUFFER ADDR
EXIT     STSIZE LINELOC=LPSCREEN,SIZELOC=CPLINE RESET SCREEN ATTR
         MODESET MODE=SUP,KEY=ZERO AUTHORIZE OURSELVES
         AXSET AX=ZERO             SET AUTHORIZATION INDEX BACK TO ZERO
         MODESET MODE=PROB,KEY=NZERO UNAUTHORIZE OURSELVES
EXITQ    L     R13,SAVE+4          RESTORE PTR TO CALLER'S SAVE AREA
         LM    R14,R12,12(R13)     RESTORE REGISTERS
         LA    R15,0               SET RETURN CODE TO ZERO
         BR    R14                 RETURN TO SYSTEM
         EJECT
***********************************************************************
*                                                                     *
*          FIND THE CONSOLE NUMBER FOR THE SPECIFIED NAME             *
*                                                                     *
***********************************************************************
FUCM     STM   R0,R15,SAVFUCM      SAVE INPUT REGISTERS
         LA    R3,UCMTAB+4         LOAD ADDRESS OF UCM TABLE
         LA    R15,UCMTABC         LOAD NUMBER OF ENTRIES IN TABLE
         LA    R5,1                SET CONSOLE NUMBER TO 1
FUCM01   ICM   R4,15,0(R3)         LOAD UCM ENTRY
         BZ    FUCM03              ZERO, NOT A CRT
         USING UCMLIST,R4          SET ADDRESSABILITY TO UCM
FUCM02   L     R14,UCMFEXTP        LOAD ADDRESS OF UCME FIXED EXT
         USING UCMEFEXT,R14        SET ADDRESSABILITY TO UCME FE
         CLC   MYCONS,UCMEFCNM     SEE IF MATCH ON CONSOLE NAME
         BE    FUCM04              YES, GET OUT
         DROP  R14                 DROP ADDRESSABILITY TO UCME FE
FUCM03   LA    R3,4(,R3)           INCREMENT TO NEXT UCM TABLE ENTRY
         LA    R5,1(,R5)           ADD 1 TO CONSOLE NUMBER
         BCT   R15,FUCM01          LOOP ON UCM TABLE ENTRIES
         LA    R15,0               SET RETURN CODE TO ZERO
         B     FUCM05              GET OUT
FUCM04   LR    R15,R5              SET RETURN CODE TO CONSOLE NUMBER
FUCM05   LM    R0,R14,SAVFUCM      RESTORE REGS
         BR    R14                 RETURN TO CALLER
         DROP  R4                  DROP ADDRESSABILITY TO UCM
SAVFUCM  DS    16F                 FUCM ROUTINE SAVE AREA
         EJECT
***********************************************************************
*                                                                     *
*        THIS IS THE ROUTINE TO CONVERT ROW AND COLUMN TO A           *
*        CRT SET BUFFER ADDRESS (SBA) VALUE                           *
*                                                                     *
*        THE ROW AND COLUMN ARE AT HALFWORDS NAMED ROW AND COL        *
*        RESPECTIVELY                                                 *
*                                                                     *
*              ON RETURN:                                             *
*                                                                     *
*        THE SBA ADDRESS WILL BE IN A TWO BYTE FIELD NAMED SBA.       *
*                                                                     *
***********************************************************************
GETSBA   STM   R0,R15,SAVGSBA      SAVE INPUT REGISTERS
         LH    R2,ROW              LOAD ROW NUMBER
         BCTR  R2,0                MAKE RELATIVE TO ZERO
         LH    R3,COL              LOAD COLUMN NUMBER
         BCTR  R3,0                MAKE RELATIVE TO ZERO
         MH    R2,=H'80'           MULTIPLY ROW NUMBER BY LINE SIZE
         AR    R2,R3               DETERMINE RELATIVE SCREEN POSITION
         SRDA  R2,32               SHIFT TO ODD REG OF PAIR
         D     R2,=F'64'           DIVIDE BY 64 FOR TBL OFFSETS
*        QUOTIENT  IN REG 3
*        REMAINDER IN REG 2
         LA    R4,SBATBL1          LOAD ADDRESS OF SBA TABLE
         IC    R5,0(R3,R4)         LOAD FIRST SBA CHAR
         STC   R5,SBA              SAVE FIRST SBA CHAR
         IC    R5,0(R2,R4)         LOAD SECOND SBA CHAR
         STC   R5,SBA+1            SAVE SECOND SBA CHAR
***********************************************************************
*                      EXIT FROM GETSBA ROUTINE                       *
***********************************************************************
GSBAEXIT LM    R0,R15,SAVGSBA      RESTORE REGS
         BR    R14                 RETURN TO CALLER
         SPACE 3
SBATBL1  DS    0CL64
         DC    X'40C1C2C3C4C5C6C7C8C94A4B4C4D4E4F'
         DC    X'50D1D2D3D4D5D6D7D8D95A5B5C5D5E5F'
         DC    X'6061E2E3E4E5E6E7E8E96A6B6C6D6E6F'
         DC    X'F0F1F2F3F4F5F6F7F8F97A7B7C7D7E7F'
         SPACE 3
SAVGSBA  DS    16F                 GETSBA ROUTINE SAVE AREA
ROW      DC    H'0'                ROW NUMBER TO BE CONVERTED
COL      DC    H'1'                COLUMN NUMBER TO BE CONVERTED
SBA      DS    XL2                 RESULTING SBA
         DROP  R10,R11,R12
         EJECT
***********************************************************************
*                                                                     *
*                          A T T N E X I T                            *
*                                                                     *
*         TRAP USERS ATTENTION INTERRUPTS AND FLAG FOR RESET          *
*                                                                     *
***********************************************************************
         USING ATTNEXIT,R15        ESTABLISH EXIT ADDRESSABILITY
ATTNEXIT L     R1,8(R1)            LOAD ADDRESS OF STAX USADDR
         MVI   0(R1),X'FF'         SET ATTN FLAG (ATTNFLG)
         BR    R14                 RETURN TO CALLER
         DROP  R15
         EJECT
PFKTABLE DS    0H
PFK1     DC    CL80'HELP'
PFK2     DC    CL80' '
PFK3     DC    CL80'END'
PFK4     DC    CL80' '
PFK5     DC    CL80' '
PFK6     DC    CL80' '
PFK7     DC    CL80'UP MAX'
PFK8     DC    CL80'DOWN MAX'
PFK9     DC    CL80' '
PFK10    DC    CL80'LEFT MAX'
PFK11    DC    CL80'RIGHT MAX'
PFK12    DC    CL80'RECALL'
         EJECT
***********************************************************************
*                                                                     *
*                         C O N S T A N T S                           *
*                                                                     *
***********************************************************************
         SPACE 3
SAVE     DC    18F'0'              SAVE AREA
         SPACE 3
PSATOLD  EQU   540
PSAAOLD  EQU   548
         DS    0D
WORK     DS    D                   WORK AREA FOR PACKS
CONFLG1  DC    F'1'                CONSOLE TO BE LOOKED AT
TPUTLEN  DC    F'0'                LENGTH OF FULLSCREEN TPUT
LPSCREEN DC    F'0'                LINES PER SCREEN
CPLINE   DC    F'0'                CHARACTERS PER LINE
LENTEXT  DC    H'0'                LENGTH OF LINE TEXT
LENLINE  DC    H'0'                LENGTH OF LINE IN DCM
NUMIN    DC    H'0'                NUMBER OF LINES IN DCM
MOVEL    DC    H'0'                TOTAL SIZE OF LINES IN DCM
BUFINDEX DC    H'0'                INDEX (0 OR 6) FOR CONTROL CHARS
SCROLL   DC    H'0'                SCROLL AMOUNT ON UP/DOWN/LEFT/RIGHT
BUFADDR  DC    F'0'                SAVE AREA FOR GETMAIN ADDR
SCRADDR  DC    F'0'                SAVE AREA FOR GETMAIN ADDR
TPUTADDR DC    F'0'                SAVE AREA FOR GETMAIN ADDR
TPUTSTRT DC    F'0'                START ADDRESS OF TPUT AREA
ATTNFLG  DC    X'00'               X'FF' INDICATES ATTN WAS TRAPPED
FULLSCR  DC    X'03'               TPUT ASIS FLAG
EDITFLG  DC    X'00'               TPUT EDIT FLAG
MYCONS   DC    CL8' '              CONSOLE NAME ON CONSOLE COMMAND
NULLS    DC    80X'00'             JUST NULLS
PATTERN  DC    X'40202020'         EDIT PATTERN FIELD
DPATTRN  DC    X'4021204B20'       EDIT PATTERN FIELD
REPLYBUF DS    0CL85               TGET REPLY BUFFER
REPLYAID DS    CL6                 TGET ATTENTION IDENTIFICATION VALUES
REPLY    DC    CL79' '             USERS COMMAND INPUT FIELD
LASTRPLY DC    CL79' '             USERS LAST COMMAND INPUT
STAXLIST STAX  ATTNEXIT,MF=L
BLANKS   DC    CL80' '             CHARACTER STRING OF BLANKS
         CNOP  0,4
SVCKEY   DC    C'0000'
LOCVERT  DC    H'9999'             VERTICAL LOCATION
LOCHORIZ DC    H'0'                HORIZONTAL LOCATION
MAXVERT  DC    H'20'               MAXIMUM VERTICAL LINES
MAXHORIZ DC    H'78'               MAXIMUM HORIZONTAL COLUMNS
PRMSIZE  DS    H                   PRIMARY SIZE OF TERMINAL
ALTSIZE  DS    H                   ALTERNATE SIZE OF TERMINAL
STDSIZE  DC    AL1(24),AL1(80)     STD SIZE OF TERMINAL (24 X 80)
SASID    DS    F                   SAVE PREVIOUS SECONDARY ASID
CONASID  DS    F                   ASID OF 'CONSOLE'
ONE      DC    H'1'                TO SET AX 1
ZERO     DC    H'0'                TO SET AX 0
PWDWRK   DS    CL8                 PASSWORD WORK
CNSLNUM  DC    C'M'                DEFAULT TO MASTER CONSOLE
UCMTAB   DC    F'0'                NULL FIRST UCM ADDRESS FOR REL 1
         DC    200F'0'             ROOM FOR 200 UCM ADDRESSES
UCMTABC  EQU   (*-(UCMTAB+4))/4    NUMBER OF UCM ADDRESSES
NUMUCMS  DS    H                   NUMBER OF UCM ENTRIES
FACILITY DC    CL8'FACILITY'       RACROUTE CLASS NAME
RESOURCE DC    CL44' '             RACROUTE RESOURCE NAME
RACROUTE RACROUTE REQUEST=FASTAUTH,MF=L RACROUTE LIST FORM
RACWORK  DS    CL512               RACROUTE WORK AREA 1
FRACWORK DS    16F                 RACROUTE WORK AREA 2
         SPACE 5
***********************************************************************
*                                                                     *
*                  DISPLAY SCREEN - HEADER SECTION                    *
*                                                                     *
***********************************************************************
HEADER   EQU   *
CLEAR    EQU   *
         DC    X'27F5C3'
CLEARGTH EQU   *-CLEAR
         DC    X'114040'           SBA TO ROW 1, COL 1
         DC    X'1D60'             ATTR BYTE - PROTECTED FIELD
         DC    X'40'
HEADERL  EQU   *-HEADER            LENGTH OF BUFFER HEADER
***********************************************************************
*                                                                     *
*               DISPLAY SCREEN - TRAILER SECTION                      *
*                                                                     *
***********************************************************************
TRAILER  EQU   *
CMDCTRL  DC    X'115A50'           SBA TO ROW 22, COL 1
         DC    X'1DE8'             ATTR BYTE - PROTECTD, HIGH INTENSITY
LASTLINE DS    0CL79               OPERATORS COMMAND INPUT LINE
LASTOPER DC    CL40' '             LAST OPERATOR INPUT BUFFER
LASTUSER DC    CL39' '             LAST USER INPUT BUFFER
PHEADING DC    X'115B60'           SBA TO ROW 23, COL 1
         DC    X'1DE8'             ATTR BYTE - PROTECTD, HIGH INTENSITY
HEADING  DC    CL8'CONSOLE '
CONNUM   DC    CL3'  '             CONSOLE NUMBER
         DC    CL6' UNIT('
UNIT     DC    CL4' '              UNIT ADDR OF CONSOLE
         DC    CL2') '
         DC    CL1' '
CONNAME  DC    CL8' '              CONSOLE NAME
         DC    CL13'   ON SYSTEM '
SYSNAME  DC    CL8' '              SYSTEM NAME
         DC    CL20' '
BUFFROW  DC    CL2'01'             BUFFER ROW
         DC    CL1'/'
BUFFCOL  DC    CL3'001'            BUFFER COLUMN
R24C1    DC    X'115CF0'           SBA TO ROW 24, COL 1
         DC    X'1D40'             ATTR BYTE - UNPROTECTD, LOW INTENS.
         DC    X'13'               INSERT CURSOR
USERLINE DC    CL13' '             USERS COMMAND INPUT LINE
ERROR    DC    CL66' '             ERROR MSG FIELD
TRAILEN  EQU   *-TRAILER           LENGTH OF TRAILER
         SPACE 5
         LTORG
         SPACE 5
NOCRTMSG DC    CL79'COMMAND ONLY SUPPORTED ON A CRT TERMINAL'
ERRMSG1  DC    CL26'ERROR - NO MASTER CONSOLE '
ERRMSG2  DC    CL26'CONSOLE NUMBER TOO LARGE  '
ERRMSG3  DC    CL26'ERROR - UNAUTHORIZED CMD  '
ERRMSG4  DC    CL26'ERROR - NON-CRT CONSOLE   '
ERRMSG5  DC    CL26'ERROR - CONSOLE INACTIVE  '
ERRMSG6  DC    CL26'ERROR - CONSOLE INVALID   '
ERRMSG7  DC    CL26'INVALID CONSOLE TYPE      '
ERRMSG8  DC    CL26'INVALID TSO TERMINAL TYPE '
ERRMSG9  DC    CL26'INVALID TGET COMMAND      '
ERRMSG10 DC    CL26'TERMINAL DISCONNECTED     '
ERRMSG11 DC    CL26'NO CONSOLE ADDRESS SPACE  '
ERRMSG12 DC    CL26'ERROR - INVALID CONSOLE   '
ERRMSG13 DC    CL26'ERROR - NO VALID CONSOLES '
ERRMSG14 DC    CL26'ERROR - NO MASTER AUTH    '
ERRMSG15 DC    CL26'CONSOLE BUFFER TOO LARGE  '
ERRMSG16 DC    CL26'INVALID SCROLL AMOUNT     '
ERRMSG17 DC    CL26'NO CONSOLE NAME/NBR       '
ERRMSG18 DC    CL26'INVALID CONSOLE NAME/NBR  '
ERRMSG19 DC    CL26'CONSOLE NAME NOT FOUND    '
         SPACE 5
***********************************************************************
*                                                                     *
*                           USER HELP PAGE                            *
*                                                                     *
***********************************************************************
HELP     DC    X'C1'               WCC
         DC    X'114040'           SBA TO ROW 1, COL 1
         DC    X'3C404000'         FILL SCREEN WITH NULLS
R1C01    DC    X'114040',X'1DE8'
         DC    CL05' '
         DC    C'COMMAND    DESCRIPTION'
R2C01    DC    X'11C150'
R3C01    DC    X'11C260'
         DC    CL05' '
         DC    C' LEFT  ...  SCROLL LEFT  WITHIN THE LOGICAL CONSOLE SCX
               REEN'
R4C01    DC    X'11C3F0'
         DC    CL05' '
         DC    C' RIGHT ...  SCROLL RIGHT WITHIN THE LOGICAL CONSOLE SCX
               REEN'
R5C01    DC    X'11C540'
         DC    CL05' '
         DC    C' UP    ...  SCROLL UP    WITHIN THE LOGICAL CONSOLE SCX
               REEN'
R6C01    DC    X'11C650'
         DC    CL05' '
         DC    C' DOWN  ...  SCROLL DOWN  WITHIN THE LOGICAL CONSOLE SCX
               REEN'
R7C01    DC    X'11C760'
         DC    CL05' '
         DC    C' CONSOLE XX SWITCH TO CONSOLE NUMBER XX OR NAME XXXXXXX
               XX'
R8C01    DC    X'11C8F0'
         DC    CL05' '
         DC    C' HELP       DISPLAY THIS PAGE'
R9C01    DC    X'114A40'
         DC    CL05' '
         DC    C' END        END CONSOLE'
R10C01   DC    X'114B50'
         DC    CL05' '
R11C01   DC    X'114C60'
         DC    CL05' '
         DC    C'NOTE:'
R12C01   DC    X'114DF0'
         DC    CL05' '
         DC    C'     THE ... ON THE SCROLL COMMANDS CAN BE:'
R13C01   DC    X'114F40'
         DC    CL05' '
         DC    C'         MAX    - MAXIMUM NUMBER OF LINES OR CHARS'
R14C01   DC    X'115050'
         DC    CL05' '
         DC    C'         PAGE   - NUMBER OF LINES OR CHARS ON YOUR TSOX
                SCREEN'
R15C01   DC    X'11D160'
         DC    CL05' '
         DC    C'         SCREEN - NUMBER OF LINES OR CHARS ON YOUR TSOX
                SCREEN'
R16C01   DC    X'11D2F0'
         DC    CL05' '
         DC    C'         HALF   - HALF THE NUMBER OF LINES OR CHARS ONX
                YOUR TSO SCREEN'
R17C01   DC    X'11D440'
         DC    CL05' '
         DC    C'         NNN    - THE SPECIFIC NUMBER OF LINES OR CHARX
               S'
R18C01   DC    X'11D550'
R19C01   DC    X'11D660'
         DC    CL05' '
         DC    C' PFK 1/13=HELP       PFK 2/14=           PFK 3/15=END'
R20C01   DC    X'11D7F0'
         DC    CL05' '
         DC    C' PFK 4/16=           PFK 5/17=           PFK 6/18='
R21C01   DC    X'11D940'
         DC    CL05' '
         DC    C' PFK 7/19=UP MAX     PFK 8/20=DOWN MAX   PFK 9/21='
R22C01   DC    X'115A50'
         DC    CL05' '
         DC    C' PFK10/22=LEFT MAX   PFK11/23=RIGHT MAX  PFK12/24=RECAX
               LL'
R23C01   DC    X'115B60'
R24C01   DC    X'115CF0'
         DC    CL05' '
         DC    C' HIT ENTER TO CONTINUE'
R24C38   DC    X'115DD5'
         DC    X'1D40'
         DC    X'1340'
         DC    X'1DE8'
HLENGTH  EQU   *-HELP              LENGTH OF HELP TPUT
         EJECT
         CVT   DSECT=YES
         EJECT
         IHAASVT DSECT=YES
         EJECT
         IHAASCB DSECT=YES
         EJECT
         IEETDCM
         EJECT
         IEECUCM FORMAT=NEW,LIST=YES
         EJECT
UCB      DSECT
         IEFUCBOB LIST=YES
         EJECT
CONS     CSECT
         EJECT
         DS    0F
LORDCM   DS    CL4                 LOCAL COPY OF 1ST 4 BYTES OF RDCM
         DS    0F
LOCDCM   DS    CL(DCMEND-DCMSTRT)  LOCAL COPY OF PDCM
         END   CONS
