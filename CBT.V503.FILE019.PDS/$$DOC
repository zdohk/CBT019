
                         JOHN HOOPER UTILITIES

     email:  jvh@carolina.rr.com

     This dataset contains several utility programs which may be of
     general interest to other installations.  The are, of course,
     available on an as-is condition with the usual disclaimer.  To
     the best of my knowledge they all work in our current Z/OS 1.4
     environment.  They should all work on any IBM supported system.
     Some may not work on earlier systems.

     Each utility program has an associated member of a similar
     name starting with a '$' to provide documentation for that
     utility.  There are also members starting with a '@' which are
     examples of ways to execute those utilities.  Read the
     documentation carefully to determine the utility's applicability
     to your environment.

     Good luck!



     1)  BLKSCAN

         This program will search each individual member of a
         partitioned data set containing JCL for specified block
         sizes.  if one is found, the JOBNAME, STEPNAME, PROGRAM NAME,
         DDNAME and BLOCKSIZE will be listed.  It does not handle
         cataloged procedures or INCLUDE statements.  The report can
         be used to detect improperly specified block sizes.  Our
         local standard is to allow the system to set the blocksize of
         the output dataset using the system determined blocksize
         facility of DFP version 3.  This report allows us to see both
         the poorly specified blocksizes as well as those jobs which
         need changing to allow the system to set the appropriate
         blocksize.


     2)  CHECKPVT

         This program is designed to run immediately after an IPL to
         check the size of the private area below the 16 meg line.
         Software maintenance or implementation of new products may
         shift the private area size down an extra meg in ESA.  The
         parm value entered specifies the minimum size of the private
         area in 'K' units that is expected.  If the area is smaller
         than this value, a non-roll deletable message will be written
         to the system console.


     3)  COMMAND

         This program will execute MVS or JES2 commands within a batch
         job or started task.  The command(s) can be requested from
         the PARM parameter on the EXECute card or from an optional
         parameter file defined by the DDname IEFRDER or both the PARM
         and the file.  If commands are entered on both the PARM and
         the optional IEFRDER file, the commands in the PARM are
         executed first.  Because most MVS and JES2 commands may be
         executed by this program, it provides protection against
         unauthorized use by using a call to RACF for CLASS
         FACILITY and entity COMMAND.


         Most installations have a similar program to this or have
         an automated operations software product to do the same
         thing.  What makes this batch program different from most
         in-house programs are the internal commands:


         DELAY nnn
         REPLY jobname 'message text' 'reply text'
         STARTED job/taskname
         STOPPED job/taskname
         ONLINE  V=volser or A=addr
         OFFLINE V=volser or A=addr
         IFSTARTED job/taskname
         IFSTOPPED job/taskname
         IFONLINE  V=volser or A=addr
         IFOFFLINE  V=volser or A=addr
         UNALLOC V=volser or A=addr
         ENDIF

         By using a combination of of these special conrol commands and
         MVS and JES2 commands we are able to bring down our system for
         IPL including stopping all of our started tasks (other than
         JES2) and online systems in a small fraction of the time that
         it used to take.

         We have used the ONLINE, OFFLINE, and UNALLOC commands to help
         in automating our processing of TimeFinder (tm) and/or
         FlashCopy (tm) volumes.


     4)  CONSOLE

         Console Interface for TSO

         This TSO command allows a TSO user to issue console commands
         and access the contents of the console buffer for a master
         console (or one with master console authority on newer
         operating systems) on an MVS/OS390/ZOS system.  This
         effectively makes the TSO session act like a master console.
         Security calls will be made that may also grant the user the
         authority to issue some or all operator commands as well.


     5)  FLCACHE

         This program is designed to allow the operator to display or
         modify the 3990-3 Cache subsystem from the MVS operator's
         console.  The only provided means of control for the cache
         subsystem is executing the IBM IDCAMS utility as a batch job
         and then looking at the output to determine the results
         or using the ISMF facilities under ISPF to make changes.
         This FLCACHE program will accept 'simple' commands from the
         console and generate the appropriate IDCAMS statement and
         call IDCAMS interactively to actually perform the function.
         All messages from IDCAMS will be displayed on the operator's
         console.

         When any device on the 3990 cache subsystem must be altered
         from the console, it is often because of a hardware problem
         when prompt action must be taken.  The IBM publication which
         describes these special commands is not always easy to locate
         or understand.  Hopefully, this program will make these
         functions easy to perform when required.  As always,
         Technical Support should be involved any time this facility
         is used to alter the status of the subsystem.


     6)  FLSMFCAT

         This utility is intended to display ICF catalog activity at a
         dataset level.  It formats information from the SMF type 61,
         65, and 66 records.  It is designed primarily to track down the
         job or user that allocated, deleted, or renamed a specific
         dataset.  Since this activity may have been opened at that
         time, only the catalog activity SMF record has the information.


     7)  FLSMFDSN

         This utility is intended to list Vsam and Nonvsam dataset
         activity for all batch jobs, started tasks, and TSO users on
         the MVS system.  It formats information from the SMF type 14,
         15, and 64 records.  This information can be valuable for a
         number of reason.  It can be used to track usage if specific
         datasets or display datasets with small block sizes or datasets
         with the high I/O activity to pinpoint areas needing closer
         examination.  It provides a flexible selection and sort
         mechanism to tailor the report.  Program performance can be
         seriously hampered by having too small of a blocksize on input
         or output files.  Even using the system determined blocksize
         facility of DFP release 3 may not always give the desired
         results since some program products may override that value.
         The reports from this utility have allowed us to significantly
         reduce the run time of some of our critical batch jobs by just
         correcting the blocksize specifications.  All of the standards
         in the world are not worth anything if you don't enforce their
         use.


     8)  FLSMFJOB

         This utility is intended to list job activity at the step or
         job level for all batch jobs, started tasks, and TSO users on
         the MVS system.  It formats information from the SMF type 30
         record.  It provides a flexible selection and sort mechanism to
         tailor the report.  The reports from this program allowed us to
         determine our biggest users of system resources so that the
         programs could be examined for ways to optimize their code.  We
         were able to cut many hours a week of CPU time by closely
         examining only a few programs for inefficient coding
         techniques.  This has allowed us to delay a previously needed
         processor upgrade.


     9)  FLSMFSRT

         This utility is intended to list sort activity based upon SMF
         records generated by the Syncsort product.  It provides a
         flexible selection and sort mechanism to tailor the report.
         The reports from this program allows us to monitor our
         larger sorts since dynamic allocation of sortwork datasets
         masks the larger sorts.


     10) FLVOLLST

         This program is designed to print a report listing all of the
         datasets on a volume based upon information from the system
         catalogs.  This list could be critical in case of a DASD
         failure which destroys the VTOC on the volume.  With volume
         pooling now available through the use of DF/SMS and other
         program products, it is not always easy to determine the
         datasets which are on a specific volume.

         The input to this program must be the output from an IDCAMS
         LISTCAT command.  It is expected that an IDCAMS 'LISTCAT VOL
         CAT(user.catalog.name)' command will be executed for each
         catalog in the system.  The contents of these reports can
         then be passed to this utility program to produce the report
         by volume and dataset name.


     11) LISTF

         This TSO command provides ANOTHER way to list the free space
         for one or more disk volumes.  The one feature that I think
         sets is apart from the others is the support for SMS STORAGE
         GROUP and status without having to use ISMF.  It uses an
         undocumented interface and, as such, is subject to future
         failures.  It also provides flexible selection criteria and
         sort criteria.


     12) MODLOOK

         This program is designed to run as a TSO command, started
         task or a batch job to look up the selected module(s) in the
         system link list or link pack area.  If the module is in the
         link list, the link list library name will be displayed.  If
         the module is in the link pack area, its address will be
         displayed along with the name of the resident area in which it
         is located such as PLPA, FLPA, ECSA, etc.  The first part of
         each module is displayed also since it can contain date,
         time, or copyright information which may be of interest.

         With many libraries now in the system link list, it may not
         always be apparent which dataset contains which program or
         even more importantly, it may be difficult to determine which
         library contains a module if duplicate module names exist.


     13)  PAGEFIX

        This program is designed to limit real storage available to a
        CPU by acquiring storage according to a value specified in
        the input parm or entered by a MODIFY command from the
        console. The storage area will then be initialized and fixed
        to prevent paging while waiting for the next STOP/MODIFY
        console command.

        We use this utility occasionally for 2 reasons.  We have used
        it to reserve recently added memory for an application that
        has yet to be implemented.  Most commonly we have used it to
        see where the happy value is for our real storage.  We keep
        increasing the memory reserved by this utility to determine
        the effect this has on paging.


     14) SMAP

         This program is designed to print the starting address,
         ending address, and size of each of the main storage
         areas in the mvs system.  This information can be
         displayed using most of the popular monitors currently
         available, but not everyone has one plus this program
         can run as a batch job producing a hardcopy report.


